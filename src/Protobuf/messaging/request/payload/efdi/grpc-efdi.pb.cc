// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/request/payload/efdi/grpc-efdi.proto

#include "messaging/request/payload/efdi/grpc-efdi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace efdi {
class UIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UID>
      _instance;
} _UID_default_instance_;
class AllocationStampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocationStamp>
      _instance;
} _AllocationStamp_default_instance_;
class AttachedFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachedFile>
      _instance;
} _AttachedFile_default_instance_;
class BaseStationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BaseStation>
      _instance;
} _BaseStation_default_instance_;
class CodedCommentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodedComment>
      _instance;
} _CodedComment_default_instance_;
class CodedCommentGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodedCommentGroup>
      _instance;
} _CodedCommentGroup_default_instance_;
class CodedCommentListValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodedCommentListValue>
      _instance;
} _CodedCommentListValue_default_instance_;
class ColourLegendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColourLegend>
      _instance;
} _ColourLegend_default_instance_;
class ColourRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColourRange>
      _instance;
} _ColourRange_default_instance_;
class CommentAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommentAllocation>
      _instance;
} _CommentAllocation_default_instance_;
class ConnectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Connection>
      _instance;
} _Connection_default_instance_;
class ControlAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlAssignment>
      _instance;
} _ControlAssignment_default_instance_;
class CropTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CropType>
      _instance;
} _CropType_default_instance_;
class CropVarietyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CropVariety>
      _instance;
} _CropVariety_default_instance_;
class CulturalPracticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CulturalPractice>
      _instance;
} _CulturalPractice_default_instance_;
class CustomerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Customer>
      _instance;
} _Customer_default_instance_;
class DataLogTriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataLogTrigger>
      _instance;
} _DataLogTrigger_default_instance_;
class DataLogValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataLogValue>
      _instance;
} _DataLogValue_default_instance_;
class DataLogValueIntOnlyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataLogValueIntOnly>
      _instance;
} _DataLogValueIntOnly_default_instance_;
class DeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Device>
      _instance;
} _Device_default_instance_;
class DeviceAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAllocation>
      _instance;
} _DeviceAllocation_default_instance_;
class DeviceElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceElement>
      _instance;
} _DeviceElement_default_instance_;
class DeviceObjectReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceObjectReference>
      _instance;
} _DeviceObjectReference_default_instance_;
class DeviceProcessDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceProcessData>
      _instance;
} _DeviceProcessData_default_instance_;
class DevicePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceProperty>
      _instance;
} _DeviceProperty_default_instance_;
class DeviceValuePresentationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceValuePresentation>
      _instance;
} _DeviceValuePresentation_default_instance_;
class FarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Farm>
      _instance;
} _Farm_default_instance_;
class GridDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Grid>
      _instance;
} _Grid_default_instance_;
class GuidanceAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuidanceAllocation>
      _instance;
} _GuidanceAllocation_default_instance_;
class GuidanceGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuidanceGroup>
      _instance;
} _GuidanceGroup_default_instance_;
class GuidancePatternDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuidancePattern>
      _instance;
} _GuidancePattern_default_instance_;
class GuidanceShiftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuidanceShift>
      _instance;
} _GuidanceShift_default_instance_;
class ISO11783_TaskDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ISO11783_TaskData>
      _instance;
} _ISO11783_TaskData_default_instance_;
class LineStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineString>
      _instance;
} _LineString_default_instance_;
class OperationTechniqueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationTechnique>
      _instance;
} _OperationTechnique_default_instance_;
class OperationTechniqueReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationTechniqueReference>
      _instance;
} _OperationTechniqueReference_default_instance_;
class OperTechPracticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperTechPractice>
      _instance;
} _OperTechPractice_default_instance_;
class PartfieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Partfield>
      _instance;
} _Partfield_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon>
      _instance;
} _Polygon_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class ProcessDataVariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessDataVariable>
      _instance;
} _ProcessDataVariable_default_instance_;
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product>
      _instance;
} _Product_default_instance_;
class ProductAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProductAllocation>
      _instance;
} _ProductAllocation_default_instance_;
class ProductGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProductGroup>
      _instance;
} _ProductGroup_default_instance_;
class ProductRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProductRelation>
      _instance;
} _ProductRelation_default_instance_;
class TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task>
      _instance;
} _Task_default_instance_;
class TaskControllerCapabilitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskControllerCapabilities>
      _instance;
} _TaskControllerCapabilities_default_instance_;
class TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Time>
      _instance;
} _Time_default_instance_;
class TimeIntOnlyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeIntOnly>
      _instance;
} _TimeIntOnly_default_instance_;
class TimeDetHierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeDetHier>
      _instance;
} _TimeDetHier_default_instance_;
class DeviceElementDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceElementData>
      _instance;
} _DeviceElementData_default_instance_;
class TimeLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeLog>
      _instance;
} _TimeLog_default_instance_;
class TreatmentZoneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TreatmentZone>
      _instance;
} _TreatmentZone_default_instance_;
class ValuePresentationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValuePresentation>
      _instance;
} _ValuePresentation_default_instance_;
class WorkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Worker>
      _instance;
} _Worker_default_instance_;
class WorkerAllocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkerAllocation>
      _instance;
} _WorkerAllocation_default_instance_;
class ExternalFileReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternalFileReference>
      _instance;
} _ExternalFileReference_default_instance_;
}  // namespace efdi
namespace protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto {
void InitDefaultsUIDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::efdi::_UID_default_instance_;
    new (ptr) ::efdi::UID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::UID::InitAsDefaultInstance();
}

void InitDefaultsUID() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUIDImpl);
}

void InitDefaultsAllocationStampImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_AllocationStamp_default_instance_;
    new (ptr) ::efdi::AllocationStamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::AllocationStamp::InitAsDefaultInstance();
}

void InitDefaultsAllocationStamp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllocationStampImpl);
}

void InitDefaultsAttachedFileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_AttachedFile_default_instance_;
    new (ptr) ::efdi::AttachedFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::AttachedFile::InitAsDefaultInstance();
}

void InitDefaultsAttachedFile() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttachedFileImpl);
}

void InitDefaultsBaseStationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_BaseStation_default_instance_;
    new (ptr) ::efdi::BaseStation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::BaseStation::InitAsDefaultInstance();
}

void InitDefaultsBaseStation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBaseStationImpl);
}

void InitDefaultsCodedCommentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentListValue();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CodedComment_default_instance_;
    new (ptr) ::efdi::CodedComment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CodedComment::InitAsDefaultInstance();
}

void InitDefaultsCodedComment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodedCommentImpl);
}

void InitDefaultsCodedCommentGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CodedCommentGroup_default_instance_;
    new (ptr) ::efdi::CodedCommentGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CodedCommentGroup::InitAsDefaultInstance();
}

void InitDefaultsCodedCommentGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodedCommentGroupImpl);
}

void InitDefaultsCodedCommentListValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CodedCommentListValue_default_instance_;
    new (ptr) ::efdi::CodedCommentListValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CodedCommentListValue::InitAsDefaultInstance();
}

void InitDefaultsCodedCommentListValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodedCommentListValueImpl);
}

void InitDefaultsColourLegendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourRange();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ColourLegend_default_instance_;
    new (ptr) ::efdi::ColourLegend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ColourLegend::InitAsDefaultInstance();
}

void InitDefaultsColourLegend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsColourLegendImpl);
}

void InitDefaultsColourRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ColourRange_default_instance_;
    new (ptr) ::efdi::ColourRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ColourRange::InitAsDefaultInstance();
}

void InitDefaultsColourRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsColourRangeImpl);
}

void InitDefaultsCommentAllocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CommentAllocation_default_instance_;
    new (ptr) ::efdi::CommentAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CommentAllocation::InitAsDefaultInstance();
}

void InitDefaultsCommentAllocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommentAllocationImpl);
}

void InitDefaultsConnectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Connection_default_instance_;
    new (ptr) ::efdi::Connection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Connection::InitAsDefaultInstance();
}

void InitDefaultsConnection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnectionImpl);
}

void InitDefaultsControlAssignmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ControlAssignment_default_instance_;
    new (ptr) ::efdi::ControlAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ControlAssignment::InitAsDefaultInstance();
}

void InitDefaultsControlAssignment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControlAssignmentImpl);
}

void InitDefaultsCropTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropVariety();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CropType_default_instance_;
    new (ptr) ::efdi::CropType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CropType::InitAsDefaultInstance();
}

void InitDefaultsCropType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCropTypeImpl);
}

void InitDefaultsCropVarietyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_CropVariety_default_instance_;
    new (ptr) ::efdi::CropVariety();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CropVariety::InitAsDefaultInstance();
}

void InitDefaultsCropVariety() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCropVarietyImpl);
}

void InitDefaultsCulturalPracticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechniqueReference();
  {
    void* ptr = &::efdi::_CulturalPractice_default_instance_;
    new (ptr) ::efdi::CulturalPractice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::CulturalPractice::InitAsDefaultInstance();
}

void InitDefaultsCulturalPractice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCulturalPracticeImpl);
}

void InitDefaultsCustomerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Customer_default_instance_;
    new (ptr) ::efdi::Customer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Customer::InitAsDefaultInstance();
}

void InitDefaultsCustomer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCustomerImpl);
}

void InitDefaultsDataLogTriggerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DataLogTrigger_default_instance_;
    new (ptr) ::efdi::DataLogTrigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DataLogTrigger::InitAsDefaultInstance();
}

void InitDefaultsDataLogTrigger() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataLogTriggerImpl);
}

void InitDefaultsDataLogValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DataLogValue_default_instance_;
    new (ptr) ::efdi::DataLogValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DataLogValue::InitAsDefaultInstance();
}

void InitDefaultsDataLogValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataLogValueImpl);
}

void InitDefaultsDataLogValueIntOnlyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DataLogValueIntOnly_default_instance_;
    new (ptr) ::efdi::DataLogValueIntOnly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DataLogValueIntOnly::InitAsDefaultInstance();
}

void InitDefaultsDataLogValueIntOnly() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataLogValueIntOnlyImpl);
}

void InitDefaultsDeviceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElement();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProcessData();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProperty();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceValuePresentation();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Device_default_instance_;
    new (ptr) ::efdi::Device();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Device::InitAsDefaultInstance();
}

void InitDefaultsDevice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceImpl);
}

void InitDefaultsDeviceAllocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceAllocation_default_instance_;
    new (ptr) ::efdi::DeviceAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceAllocation::InitAsDefaultInstance();
}

void InitDefaultsDeviceAllocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceAllocationImpl);
}

void InitDefaultsDeviceElementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceObjectReference();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceElement_default_instance_;
    new (ptr) ::efdi::DeviceElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceElement::InitAsDefaultInstance();
}

void InitDefaultsDeviceElement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceElementImpl);
}

void InitDefaultsDeviceObjectReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceObjectReference_default_instance_;
    new (ptr) ::efdi::DeviceObjectReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceObjectReference::InitAsDefaultInstance();
}

void InitDefaultsDeviceObjectReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceObjectReferenceImpl);
}

void InitDefaultsDeviceProcessDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceProcessData_default_instance_;
    new (ptr) ::efdi::DeviceProcessData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceProcessData::InitAsDefaultInstance();
}

void InitDefaultsDeviceProcessData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceProcessDataImpl);
}

void InitDefaultsDevicePropertyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceProperty_default_instance_;
    new (ptr) ::efdi::DeviceProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceProperty::InitAsDefaultInstance();
}

void InitDefaultsDeviceProperty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDevicePropertyImpl);
}

void InitDefaultsDeviceValuePresentationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_DeviceValuePresentation_default_instance_;
    new (ptr) ::efdi::DeviceValuePresentation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceValuePresentation::InitAsDefaultInstance();
}

void InitDefaultsDeviceValuePresentation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceValuePresentationImpl);
}

void InitDefaultsFarmImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Farm_default_instance_;
    new (ptr) ::efdi::Farm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Farm::InitAsDefaultInstance();
}

void InitDefaultsFarm() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFarmImpl);
}

void InitDefaultsGridImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Grid_default_instance_;
    new (ptr) ::efdi::Grid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Grid::InitAsDefaultInstance();
}

void InitDefaultsGrid() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGridImpl);
}

void InitDefaultsGuidanceAllocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceShift();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_GuidanceAllocation_default_instance_;
    new (ptr) ::efdi::GuidanceAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::GuidanceAllocation::InitAsDefaultInstance();
}

void InitDefaultsGuidanceAllocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuidanceAllocationImpl);
}

void InitDefaultsGuidanceGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidancePattern();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_GuidanceGroup_default_instance_;
    new (ptr) ::efdi::GuidanceGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::GuidanceGroup::InitAsDefaultInstance();
}

void InitDefaultsGuidanceGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuidanceGroupImpl);
}

void InitDefaultsGuidancePatternImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsLineString();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_GuidancePattern_default_instance_;
    new (ptr) ::efdi::GuidancePattern();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::GuidancePattern::InitAsDefaultInstance();
}

void InitDefaultsGuidancePattern() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuidancePatternImpl);
}

void InitDefaultsGuidanceShiftImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_GuidanceShift_default_instance_;
    new (ptr) ::efdi::GuidanceShift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::GuidanceShift::InitAsDefaultInstance();
}

void InitDefaultsGuidanceShift() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuidanceShiftImpl);
}

void InitDefaultsISO11783_TaskDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAttachedFile();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsBaseStation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedComment();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentGroup();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourLegend();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropType();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCulturalPractice();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCustomer();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDevice();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsFarm();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechnique();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPartfield();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProduct();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductGroup();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTask();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTaskControllerCapabilities();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsValuePresentation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorker();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsExternalFileReference();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ISO11783_TaskData_default_instance_;
    new (ptr) ::efdi::ISO11783_TaskData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ISO11783_TaskData::InitAsDefaultInstance();
}

void InitDefaultsISO11783_TaskData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsISO11783_TaskDataImpl);
}

void InitDefaultsLineStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPoint();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_LineString_default_instance_;
    new (ptr) ::efdi::LineString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::LineString::InitAsDefaultInstance();
}

void InitDefaultsLineString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLineStringImpl);
}

void InitDefaultsOperationTechniqueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_OperationTechnique_default_instance_;
    new (ptr) ::efdi::OperationTechnique();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::OperationTechnique::InitAsDefaultInstance();
}

void InitDefaultsOperationTechnique() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationTechniqueImpl);
}

void InitDefaultsOperationTechniqueReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_OperationTechniqueReference_default_instance_;
    new (ptr) ::efdi::OperationTechniqueReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::OperationTechniqueReference::InitAsDefaultInstance();
}

void InitDefaultsOperationTechniqueReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationTechniqueReferenceImpl);
}

void InitDefaultsOperTechPracticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_OperTechPractice_default_instance_;
    new (ptr) ::efdi::OperTechPractice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::OperTechPractice::InitAsDefaultInstance();
}

void InitDefaultsOperTechPractice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperTechPracticeImpl);
}

void InitDefaultsPartfieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsLineString();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPoint();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceGroup();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Partfield_default_instance_;
    new (ptr) ::efdi::Partfield();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Partfield::InitAsDefaultInstance();
}

void InitDefaultsPartfield() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPartfieldImpl);
}

void InitDefaultsPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Point_default_instance_;
    new (ptr) ::efdi::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Point::InitAsDefaultInstance();
}

void InitDefaultsPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointImpl);
}

void InitDefaultsPolygonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsLineString();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Polygon_default_instance_;
    new (ptr) ::efdi::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Polygon::InitAsDefaultInstance();
}

void InitDefaultsPolygon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolygonImpl);
}

void InitDefaultsPositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Position_default_instance_;
    new (ptr) ::efdi::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Position::InitAsDefaultInstance();
}

void InitDefaultsPosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPositionImpl);
}

void InitDefaultsProcessDataVariableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ProcessDataVariable_default_instance_;
    new (ptr) ::efdi::ProcessDataVariable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ProcessDataVariable::InitAsDefaultInstance();
}

void InitDefaultsProcessDataVariable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessDataVariableImpl);
}

void InitDefaultsProductImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductRelation();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Product_default_instance_;
    new (ptr) ::efdi::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Product::InitAsDefaultInstance();
}

void InitDefaultsProduct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProductImpl);
}

void InitDefaultsProductAllocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ProductAllocation_default_instance_;
    new (ptr) ::efdi::ProductAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ProductAllocation::InitAsDefaultInstance();
}

void InitDefaultsProductAllocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProductAllocationImpl);
}

void InitDefaultsProductGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ProductGroup_default_instance_;
    new (ptr) ::efdi::ProductGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ProductGroup::InitAsDefaultInstance();
}

void InitDefaultsProductGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProductGroupImpl);
}

void InitDefaultsProductRelationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ProductRelation_default_instance_;
    new (ptr) ::efdi::ProductRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ProductRelation::InitAsDefaultInstance();
}

void InitDefaultsProductRelation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProductRelationImpl);
}

void InitDefaultsTaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTreatmentZone();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTime();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperTechPractice();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorkerAllocation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceAllocation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsConnection();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductAllocation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogTrigger();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCommentAllocation();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeLog();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGrid();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsControlAssignment();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceAllocation();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Task_default_instance_;
    new (ptr) ::efdi::Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Task::InitAsDefaultInstance();
}

void InitDefaultsTask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskImpl);
}

void InitDefaultsTaskControllerCapabilitiesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_TaskControllerCapabilities_default_instance_;
    new (ptr) ::efdi::TaskControllerCapabilities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::TaskControllerCapabilities::InitAsDefaultInstance();
}

void InitDefaultsTaskControllerCapabilities() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskControllerCapabilitiesImpl);
}

void InitDefaultsTimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValue();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Time_default_instance_;
    new (ptr) ::efdi::Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Time::InitAsDefaultInstance();
}

void InitDefaultsTime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeImpl);
}

void InitDefaultsTimeIntOnlyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValueIntOnly();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_TimeIntOnly_default_instance_;
    new (ptr) ::efdi::TimeIntOnly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::TimeIntOnly::InitAsDefaultInstance();
}

void InitDefaultsTimeIntOnly() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeIntOnlyImpl);
}

void InitDefaultsTimeDetHierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElementData();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_TimeDetHier_default_instance_;
    new (ptr) ::efdi::TimeDetHier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::TimeDetHier::InitAsDefaultInstance();
}

void InitDefaultsTimeDetHier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeDetHierImpl);
}

void InitDefaultsDeviceElementDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValueIntOnly();
  {
    void* ptr = &::efdi::_DeviceElementData_default_instance_;
    new (ptr) ::efdi::DeviceElementData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::DeviceElementData::InitAsDefaultInstance();
}

void InitDefaultsDeviceElementData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceElementDataImpl);
}

void InitDefaultsTimeLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTime();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_TimeLog_default_instance_;
    new (ptr) ::efdi::TimeLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::TimeLog::InitAsDefaultInstance();
}

void InitDefaultsTimeLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeLogImpl);
}

void InitDefaultsTreatmentZoneImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProcessDataVariable();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_TreatmentZone_default_instance_;
    new (ptr) ::efdi::TreatmentZone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::TreatmentZone::InitAsDefaultInstance();
}

void InitDefaultsTreatmentZone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTreatmentZoneImpl);
}

void InitDefaultsValuePresentationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ValuePresentation_default_instance_;
    new (ptr) ::efdi::ValuePresentation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ValuePresentation::InitAsDefaultInstance();
}

void InitDefaultsValuePresentation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValuePresentationImpl);
}

void InitDefaultsWorkerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_Worker_default_instance_;
    new (ptr) ::efdi::Worker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::Worker::InitAsDefaultInstance();
}

void InitDefaultsWorker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkerImpl);
}

void InitDefaultsWorkerAllocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_WorkerAllocation_default_instance_;
    new (ptr) ::efdi::WorkerAllocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::WorkerAllocation::InitAsDefaultInstance();
}

void InitDefaultsWorkerAllocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkerAllocationImpl);
}

void InitDefaultsExternalFileReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::efdi::_ExternalFileReference_default_instance_;
    new (ptr) ::efdi::ExternalFileReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::efdi::ExternalFileReference::InitAsDefaultInstance();
}

void InitDefaultsExternalFileReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExternalFileReferenceImpl);
}

::google::protobuf::Metadata file_level_metadata[58];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[27];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::UID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::UID, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::UID, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AllocationStamp, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, filename_with_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, preserve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, manufacturer_gln_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, file_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, file_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::AttachedFile, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, base_station_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, base_station_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, base_station_north_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, base_station_east_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, base_station_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::BaseStation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, coded_comment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, coded_comment_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, coded_comment_scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, coded_comment_group_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, coded_comment_list_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedComment, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentGroup, coded_comment_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentGroup, coded_comment_group_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentGroup, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentListValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentListValue, coded_comment_list_value_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentListValue, coded_comment_list_value_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CodedCommentListValue, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourLegend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourLegend, colour_legend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourLegend, default_colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourLegend, colour_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourLegend, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourRange, minimum_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourRange, maximum_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourRange, colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ColourRange, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, coded_comment_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, coded_comment_list_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, free_comment_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CommentAllocation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, device_id_ref_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, device_element_id_ref_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, device_id_ref_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, device_element_id_ref_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Connection, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, source_client_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, user_client_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, source_device_structure_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, user_device_structure_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, source_device_element_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, user_device_element_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, process_data_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ControlAssignment, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, crop_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, crop_type_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, product_group_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, crop_variety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropType, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropVariety, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropVariety, crop_variety_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropVariety, crop_variety_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropVariety, product_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CropVariety, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CulturalPractice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CulturalPractice, cultural_practice_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CulturalPractice, cultural_practice_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::CulturalPractice, operation_technique_reference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_last_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_first_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_po_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_postal_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_fax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, customer_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Customer, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_distance_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_time_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_threshold_minumum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_threshold_maximum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_threshold_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, value_presentation_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_pgn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_pgn_start_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, data_log_pgn_stop_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogTrigger, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, process_data_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, process_data_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, data_log_pgn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, data_log_pgn_start_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, data_log_pgn_stop_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValue, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, process_data_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, process_data_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, data_log_pgn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, data_log_pgn_start_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, data_log_pgn_stop_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DataLogValueIntOnly, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_software_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, client_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_serial_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_structure_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_localization_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_process_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, device_value_presentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Device, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, client_name_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, client_name_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, device_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceAllocation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_element_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_element_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_element_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_element_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_element_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, parent_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, device_object_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElement, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceObjectReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceObjectReference, device_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceObjectReference, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_process_data_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_process_data_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_process_data_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_process_data_trigger_methods_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_process_data_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, device_value_presentation_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProcessData, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, device_property_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, device_property_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, device_property_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, device_property_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, device_value_presentation_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceProperty, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, device_value_presentation_object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, number_of_decimals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, unit_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceValuePresentation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_po_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_postal_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, farm_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, customer_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Farm, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_minimum_north_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_minimum_east_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_cell_north_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_cell_east_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_maximum_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_maximum_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, filelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, grid_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, treatment_zone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Grid, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceAllocation, guidance_group_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceAllocation, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceAllocation, guidance_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceAllocation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, guidance_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, guidance_group_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, guidance_pattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, boundary_polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceGroup, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_propagation_direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_gnss_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_horizontal_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, guidance_pattern_vertical_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, base_station_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, original_srid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, number_of_swaths_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, number_of_swaths_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, line_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, boundary_polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidancePattern, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, guidance_group_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, guidance_pattern_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, guidance_east_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, guidance_north_shift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, propagation_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::GuidanceShift, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, version_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, version_minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, management_software_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, management_software_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, task_controller_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, task_controller_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, data_transfer_origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, data_transfer_language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, attached_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, base_station_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, coded_comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, coded_comment_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, colour_legend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, crop_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, cultural_practice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, farm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, operation_technique_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, partfield_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, product_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, task_controller_capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, value_presentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, external_file_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ISO11783_TaskData, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, line_string_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::LineString, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechnique, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechnique, operation_technique_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechnique, operation_technique_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechnique, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechniqueReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechniqueReference, operation_technique_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperationTechniqueReference, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperTechPractice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperTechPractice, cultural_practice_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperTechPractice, operation_technique_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::OperTechPractice, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, partfield_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, partfield_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, partfield_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, partfield_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, customer_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, farm_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, crop_type_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, crop_variety_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, field_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, line_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, guidance_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Partfield, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_north_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_east_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_horizontal_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, point_vertical_accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, filelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Point, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, polygon_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, polygon_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, polygon_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, polygon_colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, polygon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, line_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Polygon, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, position_north_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, position_east_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, position_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, position_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, pdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, hdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, number_of_satellites_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, gps_utc_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Position, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, process_data_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, process_data_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, product_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, value_presentation_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, actual_cultural_practice_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, element_type_instance_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, process_data_variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProcessDataVariable, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, product_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, product_group_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, value_presention_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, quantity_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, product_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, mixture_recipe_quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, density_mass_per_volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, density_mass_per_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, density_volume_per_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, product_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Product, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, product_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, quantity_ddi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, quantity_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, transfer_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, value_presentation_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, product_sub_type_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductAllocation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductGroup, product_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductGroup, product_group_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductGroup, product_group_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductGroup, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductRelation, product_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductRelation, quantity_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ProductRelation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, task_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, customer_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, farm_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, partfield_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, responsible_worker_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, task_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, default_treatment_zone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, position_lost_treatment_zone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, out_of_field_treatment_zone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, treatment_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, oper_tech_practice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, worker_allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, device_allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, product_allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, data_log_trigger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, comment_allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, time_log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, grid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, control_assignment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, guidance_allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Task, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, task_controller_control_function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, task_controller_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, version_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, provided_capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, number_of_booms_section_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, number_of_sections_section_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, number_of_control_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TaskControllerCapabilities, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, position_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, position_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, data_log_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Time, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, position_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, position_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, data_log_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeIntOnly, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, position_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, position_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, device_element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeDetHier, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElementData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElementData, device_element_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::DeviceElementData, data_log_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, filelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, time_log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TimeLog, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, treatment_zone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, treatment_zone_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, treatment_zone_colour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, process_data_variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::TreatmentZone, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, value_presentation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, number_of_decimals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, unit_designator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, colour_legend_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ValuePresentation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_last_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_first_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_po_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_postal_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_license_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, worker_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::Worker, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::WorkerAllocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::WorkerAllocation, worker_id_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::WorkerAllocation, allocation_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::WorkerAllocation, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ExternalFileReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ExternalFileReference, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ExternalFileReference, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::efdi::ExternalFileReference, extension_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::efdi::UID)},
  { 7, -1, sizeof(::efdi::AllocationStamp)},
  { 18, -1, sizeof(::efdi::AttachedFile)},
  { 30, -1, sizeof(::efdi::BaseStation)},
  { 41, -1, sizeof(::efdi::CodedComment)},
  { 52, -1, sizeof(::efdi::CodedCommentGroup)},
  { 60, -1, sizeof(::efdi::CodedCommentListValue)},
  { 68, -1, sizeof(::efdi::ColourLegend)},
  { 77, -1, sizeof(::efdi::ColourRange)},
  { 86, -1, sizeof(::efdi::CommentAllocation)},
  { 96, -1, sizeof(::efdi::Connection)},
  { 106, -1, sizeof(::efdi::ControlAssignment)},
  { 120, -1, sizeof(::efdi::CropType)},
  { 130, -1, sizeof(::efdi::CropVariety)},
  { 139, -1, sizeof(::efdi::CulturalPractice)},
  { 147, -1, sizeof(::efdi::Customer)},
  { 166, -1, sizeof(::efdi::DataLogTrigger)},
  { 184, -1, sizeof(::efdi::DataLogValue)},
  { 196, -1, sizeof(::efdi::DataLogValueIntOnly)},
  { 208, -1, sizeof(::efdi::Device)},
  { 225, -1, sizeof(::efdi::DeviceAllocation)},
  { 235, -1, sizeof(::efdi::DeviceElement)},
  { 248, -1, sizeof(::efdi::DeviceObjectReference)},
  { 255, -1, sizeof(::efdi::DeviceProcessData)},
  { 267, -1, sizeof(::efdi::DeviceProperty)},
  { 278, -1, sizeof(::efdi::DeviceValuePresentation)},
  { 289, -1, sizeof(::efdi::Farm)},
  { 304, -1, sizeof(::efdi::Grid)},
  { 320, -1, sizeof(::efdi::GuidanceAllocation)},
  { 329, -1, sizeof(::efdi::GuidanceGroup)},
  { 339, -1, sizeof(::efdi::GuidancePattern)},
  { 362, -1, sizeof(::efdi::GuidanceShift)},
  { 374, -1, sizeof(::efdi::ISO11783_TaskData)},
  { 407, -1, sizeof(::efdi::LineString)},
  { 420, -1, sizeof(::efdi::OperationTechnique)},
  { 428, -1, sizeof(::efdi::OperationTechniqueReference)},
  { 435, -1, sizeof(::efdi::OperTechPractice)},
  { 443, -1, sizeof(::efdi::Partfield)},
  { 462, -1, sizeof(::efdi::Point)},
  { 479, -1, sizeof(::efdi::Polygon)},
  { 491, -1, sizeof(::efdi::Position)},
  { 505, -1, sizeof(::efdi::ProcessDataVariable)},
  { 519, -1, sizeof(::efdi::Product)},
  { 536, -1, sizeof(::efdi::ProductAllocation)},
  { 550, -1, sizeof(::efdi::ProductGroup)},
  { 559, -1, sizeof(::efdi::ProductRelation)},
  { 567, -1, sizeof(::efdi::Task)},
  { 596, -1, sizeof(::efdi::TaskControllerCapabilities)},
  { 609, -1, sizeof(::efdi::Time)},
  { 622, -1, sizeof(::efdi::TimeIntOnly)},
  { 635, -1, sizeof(::efdi::TimeDetHier)},
  { 648, -1, sizeof(::efdi::DeviceElementData)},
  { 655, -1, sizeof(::efdi::TimeLog)},
  { 665, -1, sizeof(::efdi::TreatmentZone)},
  { 676, -1, sizeof(::efdi::ValuePresentation)},
  { 688, -1, sizeof(::efdi::Worker)},
  { 707, -1, sizeof(::efdi::WorkerAllocation)},
  { 715, -1, sizeof(::efdi::ExternalFileReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_UID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_AllocationStamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_AttachedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_BaseStation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CodedComment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CodedCommentGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CodedCommentListValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ColourLegend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ColourRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CommentAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Connection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ControlAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CropType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CropVariety_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_CulturalPractice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Customer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DataLogTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DataLogValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DataLogValueIntOnly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceObjectReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceProcessData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceValuePresentation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Farm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Grid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_GuidanceAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_GuidanceGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_GuidancePattern_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_GuidanceShift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ISO11783_TaskData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_LineString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_OperationTechnique_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_OperationTechniqueReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_OperTechPractice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Partfield_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ProcessDataVariable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ProductAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ProductGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ProductRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_TaskControllerCapabilities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_TimeIntOnly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_TimeDetHier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_DeviceElementData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_TimeLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_TreatmentZone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ValuePresentation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_Worker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_WorkerAllocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::efdi::_ExternalFileReference_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "messaging/request/payload/efdi/grpc-efdi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 58);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.messaging/request/payload/efdi/grpc-ef"
      "di.proto\022\004efdi\032\037google/protobuf/timestam"
      "p.proto\032\031google/protobuf/any.proto\"2\n\003UI"
      "D\022\033\n\004head\030\001 \001(\0162\r.efdi.UIDHead\022\016\n\006number"
      "\030\002 \001(\022\"\302\002\n\017AllocationStamp\022)\n\005start\030\001 \001("
      "\0132\032.google.protobuf.Timestamp\022(\n\004stop\030\002 "
      "\001(\0132\032.google.protobuf.Timestamp\022\020\n\010durat"
      "ion\030\003 \001(\004\0227\n\004type\030\004 \001(\0162).efdi.Allocatio"
      "nStamp.AllocationStampType\022 \n\010position\030\005"
      " \003(\0132\016.efdi.Position\022(\n\textension\030\200\020 \003(\013"
      "2\024.google.protobuf.Any\"C\n\023AllocationStam"
      "pType\022\014\n\010D_NOTSET\020\000\022\r\n\tD_PLANNED\020\001\022\017\n\013D_"
      "EFFECTIVE\020\004\"\254\002\n\014AttachedFile\022*\n\027filename"
      "_with_extension\030\001 \001(\0132\t.efdi.UID\022-\n\010pres"
      "erve\030\002 \001(\0162\033.efdi.AttachedFile.Preserve\022"
      "\030\n\020manufacturer_gln\030\003 \001(\t\022\021\n\tfile_type\030\004"
      " \001(\r\022\024\n\014file_version\030\005 \001(\t\022\023\n\013file_lengt"
      "h\030\006 \001(\004\022(\n\textension\030\200\020 \003(\0132\024.google.pro"
      "tobuf.Any\"\?\n\010Preserve\022\014\n\010B_NOTSET\020\000\022\021\n\rB"
      "_PRESERVE_NO\020\001\022\022\n\016B_PRESERVE_YES\020\002\"\314\001\n\013B"
      "aseStation\022\"\n\017base_station_id\030\001 \001(\0132\t.ef"
      "di.UID\022\037\n\027base_station_designator\030\002 \001(\t\022"
      "\032\n\022base_station_north\030\003 \001(\001\022\031\n\021base_stat"
      "ion_east\030\004 \001(\001\022\027\n\017base_station_up\030\005 \001(\022\022"
      "(\n\textension\030\200\020 \003(\0132\024.google.protobuf.An"
      "y\"\200\003\n\014CodedComment\022#\n\020coded_comment_id\030\001"
      " \001(\0132\t.efdi.UID\022 \n\030coded_comment_designa"
      "tor\030\002 \001(\t\022A\n\023coded_comment_scope\030\003 \001(\0162$"
      ".efdi.CodedComment.CodedCommentScope\022-\n\032"
      "coded_comment_group_id_ref\030\004 \001(\0132\t.efdi."
      "UID\022=\n\030coded_comment_list_value\030\005 \003(\0132\033."
      "efdi.CodedCommentListValue\022(\n\textension\030"
      "\200\020 \003(\0132\024.google.protobuf.Any\"N\n\021CodedCom"
      "mentScope\022\014\n\010C_NOTSET\020\000\022\013\n\007C_POINT\020\001\022\014\n\010"
      "C_GLOBAL\020\002\022\020\n\014C_CONTINUOUS\020\003\"\220\001\n\021CodedCo"
      "mmentGroup\022)\n\026coded_comment_group_id\030\001 \001"
      "(\0132\t.efdi.UID\022&\n\036coded_comment_group_des"
      "ignator\030\002 \001(\t\022(\n\textension\030\200\020 \003(\0132\024.goog"
      "le.protobuf.Any\"\236\001\n\025CodedCommentListValu"
      "e\022.\n\033coded_comment_list_value_id\030\001 \001(\0132\t"
      ".efdi.UID\022+\n#coded_comment_list_value_de"
      "signator\030\002 \001(\t\022(\n\textension\030\200\020 \003(\0132\024.goo"
      "gle.protobuf.Any\"\236\001\n\014ColourLegend\022#\n\020col"
      "our_legend_id\030\001 \001(\0132\t.efdi.UID\022\026\n\016defaul"
      "t_colour\030\002 \001(\r\022\'\n\014colour_range\030\003 \003(\0132\021.e"
      "fdi.ColourRange\022(\n\textension\030\200\020 \003(\0132\024.go"
      "ogle.protobuf.Any\"u\n\013ColourRange\022\025\n\rmini"
      "mum_value\030\001 \001(\022\022\025\n\rmaximum_value\030\002 \001(\022\022\016"
      "\n\006colour\030\003 \001(\r\022(\n\textension\030\200\020 \003(\0132\024.goo"
      "gle.protobuf.Any\"\337\001\n\021CommentAllocation\022\'"
      "\n\024coded_comment_id_ref\030\001 \001(\0132\t.efdi.UID\022"
      "+\n\030coded_comment_list_value\030\002 \001(\0132\t.efdi"
      ".UID\022\031\n\021free_comment_text\030\003 \001(\t\022/\n\020alloc"
      "ation_stamp\030\004 \001(\0132\025.efdi.AllocationStamp"
      "\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf.A"
      "ny\"\326\001\n\nConnection\022\"\n\017device_id_ref_0\030\001 \001"
      "(\0132\t.efdi.UID\022*\n\027device_element_id_ref_0"
      "\030\002 \001(\0132\t.efdi.UID\022\"\n\017device_id_ref_1\030\003 \001"
      "(\0132\t.efdi.UID\022*\n\027device_element_id_ref_1"
      "\030\004 \001(\0132\t.efdi.UID\022(\n\textension\030\200\020 \003(\0132\024."
      "google.protobuf.Any\"\324\002\n\021ControlAssignmen"
      "t\022\032\n\022source_client_name\030\001 \001(\014\022\030\n\020user_cl"
      "ient_name\030\002 \001(\014\022%\n\035source_device_structu"
      "re_label\030\003 \001(\014\022#\n\033user_device_structure_"
      "label\030\004 \001(\014\022$\n\034source_device_element_num"
      "ber\030\005 \001(\r\022\"\n\032user_device_element_number\030"
      "\006 \001(\r\022\030\n\020process_data_ddi\030\007 \001(\r\022/\n\020alloc"
      "ation_stamp\030\010 \001(\0132\025.efdi.AllocationStamp"
      "\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf.A"
      "ny\"\305\001\n\010CropType\022\037\n\014crop_type_id\030\001 \001(\0132\t."
      "efdi.UID\022\034\n\024crop_type_designator\030\002 \001(\t\022\'"
      "\n\024product_group_id_ref\030\003 \001(\0132\t.efdi.UID\022"
      "\'\n\014crop_variety\030\004 \003(\0132\021.efdi.CropVariety"
      "\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf.A"
      "ny\"\237\001\n\013CropVariety\022\"\n\017crop_variety_id\030\001 "
      "\001(\0132\t.efdi.UID\022\037\n\027crop_variety_designato"
      "r\030\002 \001(\t\022!\n\016product_id_ref\030\003 \001(\0132\t.efdi.U"
      "ID\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf"
      ".Any\"\253\001\n\020CulturalPractice\022\'\n\024cultural_pr"
      "actice_id\030\001 \001(\0132\t.efdi.UID\022$\n\034cultural_p"
      "ractice_designator\030\002 \001(\t\022H\n\035operation_te"
      "chnique_reference\030\003 \003(\0132!.efdi.Operation"
      "TechniqueReference\"\205\003\n\010Customer\022\036\n\013custo"
      "mer_id\030\001 \001(\0132\t.efdi.UID\022\032\n\022customer_last"
      "_name\030\002 \001(\t\022\033\n\023customer_first_name\030\003 \001(\t"
      "\022\027\n\017customer_street\030\004 \001(\t\022\027\n\017customer_po"
      "_box\030\005 \001(\t\022\034\n\024customer_postal_code\030\006 \001(\t"
      "\022\025\n\rcustomer_city\030\007 \001(\t\022\026\n\016customer_stat"
      "e\030\010 \001(\t\022\030\n\020customer_country\030\t \001(\t\022\026\n\016cus"
      "tomer_phone\030\n \001(\t\022\027\n\017customer_mobile\030\013 \001"
      "(\t\022\024\n\014customer_fax\030\014 \001(\t\022\026\n\016customer_ema"
      "il\030\r \001(\t\022(\n\textension\030\200\020 \003(\0132\024.google.pr"
      "otobuf.Any\"\305\003\n\016DataLogTrigger\022\024\n\014data_lo"
      "g_ddi\030\001 \001(\r\022\027\n\017data_log_method\030\002 \001(\r\022\"\n\032"
      "data_log_distance_interval\030\003 \001(\022\022\036\n\026data"
      "_log_time_interval\030\004 \001(\022\022\"\n\032data_log_thr"
      "eshold_minumum\030\005 \001(\022\022\"\n\032data_log_thresho"
      "ld_maximum\030\006 \001(\022\022!\n\031data_log_threshold_c"
      "hange\030\007 \001(\022\022(\n\025device_element_id_ref\030\010 \001"
      "(\0132\t.efdi.UID\022,\n\031value_presentation_id_r"
      "ef\030\t \001(\0132\t.efdi.UID\022\024\n\014data_log_pgn\030\n \001("
      "\004\022\036\n\026data_log_pgn_start_bit\030\013 \001(\r\022\035\n\025dat"
      "a_log_pgn_stop_bit\030\014 \001(\r\022(\n\textension\030\200\020"
      " \003(\0132\024.google.protobuf.Any\"\355\001\n\014DataLogVa"
      "lue\022\030\n\020process_data_ddi\030\001 \001(\r\022\032\n\022process"
      "_data_value\030\002 \001(\022\022(\n\025device_element_id_r"
      "ef\030\003 \001(\0132\t.efdi.UID\022\024\n\014data_log_pgn\030\004 \001("
      "\004\022\036\n\026data_log_pgn_start_bit\030\005 \001(\r\022\035\n\025dat"
      "a_log_pgn_stop_bit\030\006 \001(\r\022(\n\textension\030\200\020"
      " \003(\0132\024.google.protobuf.Any\"\351\001\n\023DataLogVa"
      "lueIntOnly\022\030\n\020process_data_ddi\030\001 \001(\r\022\032\n\022"
      "process_data_value\030\002 \001(\022\022\035\n\025device_eleme"
      "nt_id_ref\030\003 \001(\022\022\024\n\014data_log_pgn\030\004 \001(\004\022\036\n"
      "\026data_log_pgn_start_bit\030\005 \001(\r\022\035\n\025data_lo"
      "g_pgn_stop_bit\030\006 \001(\r\022(\n\textension\030\200\020 \003(\013"
      "2\024.google.protobuf.Any\"\326\003\n\006Device\022\034\n\tdev"
      "ice_id\030\001 \001(\0132\t.efdi.UID\022\031\n\021device_design"
      "ator\030\002 \001(\t\022\037\n\027device_software_version\030\003 "
      "\001(\t\022\023\n\013client_name\030\004 \001(\014\022\034\n\024device_seria"
      "l_number\030\005 \001(\t\022\036\n\026device_structure_label"
      "\030\006 \001(\014\022!\n\031device_localization_label\030\007 \001("
      "\014\022+\n\016device_element\030\010 \003(\0132\023.efdi.DeviceE"
      "lement\0224\n\023device_process_data\030\t \003(\0132\027.ef"
      "di.DeviceProcessData\022-\n\017device_property\030"
      "\n \003(\0132\024.efdi.DeviceProperty\022@\n\031device_va"
      "lue_presentation\030\013 \003(\0132\035.efdi.DeviceValu"
      "ePresentation\022(\n\textension\030\200\020 \003(\0132\024.goog"
      "le.protobuf.Any\"\304\001\n\020DeviceAllocation\022\031\n\021"
      "client_name_value\030\001 \001(\014\022\030\n\020client_name_m"
      "ask\030\002 \001(\014\022 \n\rdevice_id_ref\030\003 \001(\0132\t.efdi."
      "UID\022/\n\020allocation_stamp\030\004 \001(\0132\025.efdi.All"
      "ocationStamp\022(\n\textension\030\200\020 \003(\0132\024.googl"
      "e.protobuf.Any\"\352\003\n\rDeviceElement\022$\n\021devi"
      "ce_element_id\030\001 \001(\0132\t.efdi.UID\022 \n\030device"
      "_element_object_id\030\002 \001(\r\022B\n\023device_eleme"
      "nt_type\030\003 \001(\0162%.efdi.DeviceElement.Devic"
      "eElementType\022!\n\031device_element_designato"
      "r\030\004 \001(\t\022\035\n\025device_element_number\030\005 \001(\r\022\030"
      "\n\020parent_object_id\030\006 \001(\r\022<\n\027device_objec"
      "t_reference\030\007 \003(\0132\033.efdi.DeviceObjectRef"
      "erence\022(\n\textension\030\200\020 \003(\0132\024.google.prot"
      "obuf.Any\"\210\001\n\021DeviceElementType\022\014\n\010C_NOTS"
      "ET\020\000\022\014\n\010C_DEVICE\020\001\022\016\n\nC_FUNCTION\020\002\022\t\n\005C_"
      "BIN\020\003\022\r\n\tC_SECTION\020\004\022\n\n\006C_UNIT\020\005\022\017\n\013C_CO"
      "NNECTOR\020\006\022\020\n\014C_NAVIGATION\020\007\"[\n\025DeviceObj"
      "ectReference\022\030\n\020device_object_id\030\001 \001(\r\022("
      "\n\textension\030\200\020 \003(\0132\024.google.protobuf.Any"
      "\"\255\002\n\021DeviceProcessData\022%\n\035device_process"
      "_data_object_id\030\001 \001(\r\022\037\n\027device_process_"
      "data_ddi\030\002 \001(\r\022$\n\034device_process_data_pr"
      "operty\030\003 \001(\r\022+\n#device_process_data_trig"
      "ger_methods\030\004 \001(\r\022&\n\036device_process_data"
      "_designator\030\005 \001(\t\022+\n#device_value_presen"
      "tation_object_id\030\006 \001(\r\022(\n\textension\030\200\020 \003"
      "(\0132\024.google.protobuf.Any\"\352\001\n\016DevicePrope"
      "rty\022!\n\031device_property_object_id\030\001 \001(\r\022\033"
      "\n\023device_property_ddi\030\002 \001(\r\022\035\n\025device_pr"
      "operty_value\030\003 \001(\022\022\"\n\032device_property_de"
      "signator\030\004 \001(\t\022+\n#device_value_presentat"
      "ion_object_id\030\005 \001(\r\022(\n\textension\030\200\020 \003(\0132"
      "\024.google.protobuf.Any\"\304\001\n\027DeviceValuePre"
      "sentation\022+\n#device_value_presentation_o"
      "bject_id\030\001 \001(\r\022\016\n\006offset\030\002 \001(\022\022\r\n\005scale\030"
      "\003 \001(\001\022\032\n\022number_of_decimals\030\004 \001(\r\022\027\n\017uni"
      "t_designator\030\005 \001(\t\022(\n\textension\030\200\020 \003(\0132\024"
      ".google.protobuf.Any\"\212\002\n\004Farm\022\032\n\007farm_id"
      "\030\001 \001(\0132\t.efdi.UID\022\027\n\017farm_designator\030\002 \001"
      "(\t\022\023\n\013farm_street\030\003 \001(\t\022\023\n\013farm_po_box\030\004"
      " \001(\t\022\030\n\020farm_postal_code\030\005 \001(\t\022\021\n\tfarm_c"
      "ity\030\006 \001(\t\022\022\n\nfarm_state\030\007 \001(\t\022\024\n\014farm_co"
      "untry\030\010 \001(\t\022\"\n\017customer_id_ref\030\t \001(\0132\t.e"
      "fdi.UID\022(\n\textension\030\200\020 \003(\0132\024.google.pro"
      "tobuf.Any\"\241\003\n\004Grid\022#\n\033grid_minimum_north"
      "_position\030\001 \001(\001\022\"\n\032grid_minimum_east_pos"
      "ition\030\002 \001(\001\022\034\n\024grid_cell_north_size\030\003 \001("
      "\001\022\033\n\023grid_cell_east_size\030\004 \001(\001\022\033\n\023grid_m"
      "aximum_column\030\005 \001(\004\022\030\n\020grid_maximum_row\030"
      "\006 \001(\004\022\033\n\010filename\030\007 \001(\0132\t.efdi.UID\022\022\n\nfi"
      "lelength\030\010 \001(\004\022&\n\tgrid_type\030\t \001(\0162\023.efdi"
      ".Grid.GridType\022\033\n\023treatment_zone_code\030\n "
      "\001(\r\022(\n\textension\030\200\020 \003(\0132\024.google.protobu"
      "f.Any\">\n\010GridType\022\014\n\010I_NOTSET\020\000\022\021\n\rI_GRI"
      "D_TYPE_1\020\001\022\021\n\rI_GRID_TYPE_2\020\002\"\306\001\n\022Guidan"
      "ceAllocation\022(\n\025guidance_group_id_ref\030\001 "
      "\001(\0132\t.efdi.UID\022/\n\020allocation_stamp\030\002 \001(\013"
      "2\025.efdi.AllocationStamp\022+\n\016guidance_shif"
      "t\030\003 \003(\0132\023.efdi.GuidanceShift\022(\n\textensio"
      "n\030\200\020 \003(\0132\024.google.protobuf.Any\"\334\001\n\rGuida"
      "nceGroup\022$\n\021guidance_group_id\030\001 \001(\0132\t.ef"
      "di.UID\022!\n\031guidance_group_designator\030\002 \001("
      "\t\022/\n\020guidance_pattern\030\003 \003(\0132\025.efdi.Guida"
      "ncePattern\022\'\n\020boundary_polygon\030\004 \003(\0132\r.e"
      "fdi.Polygon\022(\n\textension\030\200\020 \003(\0132\024.google"
      ".protobuf.Any\"\265\014\n\017GuidancePattern\022&\n\023gui"
      "dance_pattern_id\030\001 \001(\0132\t.efdi.UID\022#\n\033gui"
      "dance_pattern_designator\030\002 \001(\t\022H\n\025guidan"
      "ce_pattern_type\030\003 \001(\0162).efdi.GuidancePat"
      "tern.GuidancePatternType\022N\n\030guidance_pat"
      "tern_options\030\004 \001(\0162,.efdi.GuidancePatter"
      "n.GuidancePatternOptions\022i\n&guidance_pat"
      "tern_propagation_direction\030\005 \001(\01629.efdi."
      "GuidancePattern.GuidancePatternPropagati"
      "onDirection\022R\n\032guidance_pattern_extensio"
      "n\030\006 \001(\0162..efdi.GuidancePattern.GuidanceP"
      "atternExtension\022 \n\030guidance_pattern_head"
      "ing\030\007 \001(\001\022\037\n\027guidance_pattern_radius\030\010 \001"
      "(\004\022U\n\034guidance_pattern_gnss_method\030\t \001(\016"
      "2/.efdi.GuidancePattern.GuidancePatternG"
      "NSSMethod\022,\n$guidance_pattern_horizontal"
      "_accuracy\030\n \001(\001\022*\n\"guidance_pattern_vert"
      "ical_accuracy\030\013 \001(\001\022&\n\023base_station_id_r"
      "ef\030\014 \001(\0132\t.efdi.UID\022\025\n\roriginal_srid\030\r \001"
      "(\t\022\035\n\025number_of_swaths_left\030\016 \001(\004\022\036\n\026num"
      "ber_of_swaths_right\030\017 \001(\004\022%\n\013line_string"
      "\030\020 \001(\0132\020.efdi.LineString\022\'\n\020boundary_pol"
      "ygon\030\021 \003(\0132\r.efdi.Polygon\022(\n\textension\030\200"
      "\020 \003(\0132\024.google.protobuf.Any\"c\n\023GuidanceP"
      "atternType\022\014\n\010C_NOTSET\020\000\022\010\n\004C_AB\020\001\022\014\n\010C_"
      "A_PLUS\020\002\022\013\n\007C_CURVE\020\003\022\013\n\007C_PIVOT\020\004\022\014\n\010C_"
      "SPIRAL\020\005\"c\n\026GuidancePatternOptions\022\014\n\010D_"
      "NOTSET\020\000\022\017\n\013D_CLOCKWISE\020\001\022\027\n\023D_COUNTER_C"
      "LOCKWISE\020\002\022\021\n\rD_FULL_CIRCLE\020\003\"g\n#Guidanc"
      "ePatternPropagationDirection\022\014\n\010E_NOTSET"
      "\020\000\022\n\n\006E_BOTH\020\001\022\n\n\006E_LEFT\020\002\022\013\n\007E_RIGHT\020\003\022"
      "\r\n\tE_NO_PROP\020\004\"e\n\030GuidancePatternExtensi"
      "on\022\014\n\010F_NOTSET\020\000\022\n\n\006F_BOTH\020\001\022\020\n\014F_FIRST_"
      "ONLY\020\002\022\017\n\013F_LAST_ONLY\020\003\022\014\n\010F_NO_EXT\020\004\"\365\001"
      "\n\031GuidancePatternGNSSMethod\022\014\n\010I_NOTSET\020"
      "\000\022\016\n\nI_GNSS_FIX\020\001\022\017\n\013I_DGNSS_FIX\020\002\022\022\n\016I_"
      "PRECISE_GNSS\020\003\022\027\n\023I_RTK_FIXED_INTEGER\020\004\022"
      "\017\n\013I_RTK_FLOAT\020\005\022\027\n\023I_ESTIMATED_DR_MODE\020"
      "\006\022\022\n\016I_MANUAL_INPUT\020\007\022\023\n\017I_SIMULATE_MODE"
      "\020\010\022\034\n\030I_DESKTOP_GENERATED_DATA\020\020\022\013\n\007I_OT"
      "HER\020\021\"\227\002\n\rGuidanceShift\022(\n\025guidance_grou"
      "p_id_ref\030\001 \001(\0132\t.efdi.UID\022*\n\027guidance_pa"
      "ttern_id_ref\030\002 \001(\0132\t.efdi.UID\022\033\n\023guidanc"
      "e_east_shift\030\003 \001(\022\022\034\n\024guidance_north_shi"
      "ft\030\004 \001(\022\022\032\n\022propagation_offset\030\005 \001(\022\022/\n\020"
      "allocation_stamp\030\006 \001(\0132\025.efdi.Allocation"
      "Stamp\022(\n\textension\030\200\020 \003(\0132\024.google.proto"
      "buf.Any\"\300\013\n\021ISO11783_TaskData\022;\n\rversion"
      "_major\030\001 \001(\0162$.efdi.ISO11783_TaskData.Ve"
      "rsionMajor\022\025\n\rversion_minor\030\002 \001(\r\022(\n man"
      "agement_software_manufacturer\030\003 \001(\t\022#\n\033m"
      "anagement_software_version\030\004 \001(\t\022$\n\034task"
      "_controller_manufacturer\030\005 \001(\t\022\037\n\027task_c"
      "ontroller_version\030\006 \001(\t\022H\n\024data_transfer"
      "_origin\030\007 \001(\0162*.efdi.ISO11783_TaskData.D"
      "ataTransferOrigin\022\036\n\026data_transfer_langu"
      "age\030\010 \001(\t\022)\n\rattached_file\030\t \003(\0132\022.efdi."
      "AttachedFile\022\'\n\014base_station\030\n \003(\0132\021.efd"
      "i.BaseStation\022)\n\rcoded_comment\030\013 \003(\0132\022.e"
      "fdi.CodedComment\0224\n\023coded_comment_group\030"
      "\014 \003(\0132\027.efdi.CodedCommentGroup\022)\n\rcolour"
      "_legend\030\r \003(\0132\022.efdi.ColourLegend\022!\n\tcro"
      "p_type\030\016 \003(\0132\016.efdi.CropType\0221\n\021cultural"
      "_practice\030\017 \003(\0132\026.efdi.CulturalPractice\022"
      " \n\010customer\030\020 \003(\0132\016.efdi.Customer\022\034\n\006dev"
      "ice\030\021 \003(\0132\014.efdi.Device\022\030\n\004farm\030\022 \003(\0132\n."
      "efdi.Farm\0225\n\023operation_technique\030\023 \003(\0132\030"
      ".efdi.OperationTechnique\022\"\n\tpartfield\030\024 "
      "\003(\0132\017.efdi.Partfield\022\036\n\007product\030\025 \003(\0132\r."
      "efdi.Product\022)\n\rproduct_group\030\026 \003(\0132\022.ef"
      "di.ProductGroup\022\030\n\004task\030\027 \003(\0132\n.efdi.Tas"
      "k\022F\n\034task_controller_capabilities\030\030 \003(\0132"
      " .efdi.TaskControllerCapabilities\0223\n\022val"
      "ue_presentation\030\031 \003(\0132\027.efdi.ValuePresen"
      "tation\022\034\n\006worker\030\032 \003(\0132\014.efdi.Worker\022<\n\027"
      "external_file_reference\030\033 \003(\0132\033.efdi.Ext"
      "ernalFileReference\022(\n\textension\030\200\020 \003(\0132\024"
      ".google.protobuf.Any\"\216\001\n\014VersionMajor\022\025\n"
      "\021VERSION_MAJOR_DIS\020\000\022\030\n\024VERSION_MAJOR_FD"
      "IS_1\020\001\022\030\n\024VERSION_MAJOR_FDIS_2\020\002\022\030\n\024VERS"
      "ION_MAJOR_E2_DIS\020\003\022\031\n\025VERSION_MAJOR_E2_F"
      "DIS\020\004\"s\n\022DataTransferOrigin\022\037\n\033DATA_TRAN"
      "SFER_ORIGIN_NOTSET\020\000\022\035\n\031DATA_TRANSFER_OR"
      "IGIN_FMIS\020\001\022\035\n\031DATA_TRANSFER_ORIGIN_MICS"
      "\020\002\"\354\003\n\nLineString\0229\n\020line_string_type\030\001 "
      "\001(\0162\037.efdi.LineString.LinestringType\022\036\n\026"
      "line_string_designator\030\002 \001(\t\022\031\n\021line_str"
      "ing_width\030\003 \001(\r\022\032\n\022line_string_length\030\004 "
      "\001(\r\022\032\n\022line_string_colour\030\005 \001(\r\022!\n\016line_"
      "string_id\030\006 \001(\0132\t.efdi.UID\022\032\n\005point\030\007 \003("
      "\0132\013.efdi.Point\022(\n\textension\030\200\020 \003(\0132\024.goo"
      "gle.protobuf.Any\"\306\001\n\016LinestringType\022\014\n\010A"
      "_NOTSET\020\000\022\026\n\022A_POLYGON_EXTERIOR\020\001\022\026\n\022A_P"
      "OLYGON_INTERIOR\020\002\022\017\n\013A_TRAM_LINE\020\003\022\024\n\020A_"
      "SAMPLING_ROUTE\020\004\022\026\n\022A_GUIDANCE_PATTERN\020\005"
      "\022\016\n\nA_DRAINAGE\020\006\022\013\n\007A_FENCE\020\007\022\n\n\006A_FLAG\020"
      "\010\022\016\n\nA_OBSTACLE\020\t\"\221\001\n\022OperationTechnique"
      "\022)\n\026operation_technique_id\030\001 \001(\0132\t.efdi."
      "UID\022&\n\036operation_technique_designator\030\002 "
      "\001(\t\022(\n\textension\030\200\020 \003(\0132\024.google.protobu"
      "f.Any\"v\n\033OperationTechniqueReference\022-\n\032"
      "operation_technique_id_ref\030\001 \001(\0132\t.efdi."
      "UID\022(\n\textension\030\200\020 \003(\0132\024.google.protobu"
      "f.Any\"\230\001\n\020OperTechPractice\022+\n\030cultural_p"
      "ractice_id_ref\030\001 \001(\0132\t.efdi.UID\022-\n\032opera"
      "tion_technique_id_ref\030\002 \001(\0132\t.efdi.UID\022("
      "\n\textension\030\200\020 \003(\0132\024.google.protobuf.Any"
      "\"\346\003\n\tPartfield\022\037\n\014partfield_id\030\001 \001(\0132\t.e"
      "fdi.UID\022\026\n\016partfield_code\030\002 \001(\t\022\034\n\024partf"
      "ield_designator\030\003 \001(\t\022\026\n\016partfield_area\030"
      "\004 \001(\004\022\"\n\017customer_id_ref\030\005 \001(\0132\t.efdi.UI"
      "D\022\036\n\013farm_id_ref\030\006 \001(\0132\t.efdi.UID\022#\n\020cro"
      "p_type_id_ref\030\007 \001(\0132\t.efdi.UID\022&\n\023crop_v"
      "ariety_id_ref\030\010 \001(\0132\t.efdi.UID\022\037\n\014field_"
      "id_ref\030\t \001(\0132\t.efdi.UID\022\036\n\007polygon\030\n \003(\013"
      "2\r.efdi.Polygon\022%\n\013line_string\030\013 \003(\0132\020.e"
      "fdi.LineString\022\032\n\005point\030\014 \003(\0132\013.efdi.Poi"
      "nt\022+\n\016guidance_group\030\r \003(\0132\023.efdi.Guidan"
      "ceGroup\022(\n\textension\030\200\020 \003(\0132\024.google.pro"
      "tobuf.Any\"\256\004\n\005Point\022)\n\npoint_type\030\001 \001(\0162"
      "\025.efdi.Point.PointType\022\030\n\020point_designat"
      "or\030\002 \001(\t\022\023\n\013point_north\030\003 \001(\001\022\022\n\npoint_e"
      "ast\030\004 \001(\001\022\020\n\010point_up\030\005 \001(\022\022\024\n\014point_col"
      "our\030\006 \001(\r\022\033\n\010point_id\030\007 \001(\0132\t.efdi.UID\022!"
      "\n\031point_horizontal_accuracy\030\010 \001(\001\022\037\n\027poi"
      "nt_vertical_accuracy\030\t \001(\001\022\020\n\010filename\030\n"
      " \001(\t\022\022\n\nfilelength\030\013 \001(\004\022(\n\textension\030\200\020"
      " \003(\0132\024.google.protobuf.Any\"\335\001\n\tPointType"
      "\022\014\n\010A_NOTSET\020\000\022\n\n\006A_FLAG\020\001\022\013\n\007A_OTHER\020\002\022"
      "\022\n\016A_FIELD_ACCESS\020\003\022\r\n\tA_STORAGE\020\004\022\016\n\nA_"
      "OBSTACLE\020\005\022\020\n\014A_GUID_REF_A\020\006\022\020\n\014A_GUID_R"
      "EF_B\020\007\022\025\n\021A_GUID_REF_CENTER\020\010\022\020\n\014A_GUID_"
      "POINT\020\t\022\031\n\025A_PARTFIELD_REF_POINT\020\n\022\016\n\nA_"
      "HOMEBASE\020\013\"\341\003\n\007Polygon\022/\n\014polygon_type\030\001"
      " \001(\0162\031.efdi.Polygon.PolygonType\022\032\n\022polyg"
      "on_designator\030\002 \001(\t\022\024\n\014polygon_area\030\003 \001("
      "\004\022\026\n\016polygon_colour\030\004 \001(\r\022\035\n\npolygon_id\030"
      "\005 \001(\0132\t.efdi.UID\022%\n\013line_string\030\006 \003(\0132\020."
      "efdi.LineString\022(\n\textension\030\200\020 \003(\0132\024.go"
      "ogle.protobuf.Any\"\352\001\n\013PolygonType\022\014\n\010A_N"
      "OTSET\020\000\022\030\n\024A_PARTFIELD_BOUNDARY\020\001\022\024\n\020A_T"
      "REATMENT_ZONE\020\002\022\023\n\017A_WATER_SURFACE\020\003\022\016\n\n"
      "A_BUILDING\020\004\022\n\n\006A_ROAD\020\005\022\016\n\nA_OBSTACLE\020\006"
      "\022\n\n\006A_FLAG\020\007\022\013\n\007A_OTHER\020\010\022\017\n\013A_MAINFIELD"
      "\020\t\022\016\n\nA_HEADLAND\020\n\022\021\n\rA_BUFFER_ZONE\020\013\022\017\n"
      "\013A_WINDBREAK\020\014\"\362\003\n\010Position\022\026\n\016position_"
      "north\030\001 \001(\001\022\025\n\rposition_east\030\002 \001(\001\022\023\n\013po"
      "sition_up\030\003 \001(\022\0226\n\017position_status\030\004 \001(\016"
      "2\035.efdi.Position.PositionStatus\022\014\n\004pdop\030"
      "\005 \001(\001\022\014\n\004hdop\030\006 \001(\001\022\034\n\024number_of_satelli"
      "tes\030\007 \001(\r\0225\n\021gps_utc_timestamp\030\010 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022(\n\textension\030\200\020"
      " \003(\0132\024.google.protobuf.Any\"\316\001\n\016PositionS"
      "tatus\022\014\n\010D_NO_GPS\020\000\022\n\n\006D_GNSS\020\001\022\013\n\007D_DGN"
      "SS\020\002\022\022\n\016D_PRECISE_GNSS\020\003\022\022\n\016D_RTK_FINTEG"
      "ER\020\004\022\017\n\013D_RTK_FLOAT\020\005\022\021\n\rD_EST_DR_MODE\020\006"
      "\022\022\n\016D_MANUAL_INPUT\020\007\022\023\n\017D_SIMULATE_MODE\020"
      "\010\022\013\n\007D_ERROR\020\016\022\023\n\017D_NOT_AVAILABLE\020\017\"\367\002\n\023"
      "ProcessDataVariable\022\030\n\020process_data_ddi\030"
      "\001 \001(\r\022\032\n\022process_data_value\030\002 \001(\022\022!\n\016pro"
      "duct_id_ref\030\003 \001(\0132\t.efdi.UID\022(\n\025device_e"
      "lement_id_ref\030\004 \001(\0132\t.efdi.UID\022,\n\031value_"
      "presentation_id_ref\030\005 \001(\0132\t.efdi.UID\022&\n\036"
      "actual_cultural_practice_value\030\006 \001(\022\022#\n\033"
      "element_type_instance_value\030\007 \001(\022\0228\n\025pro"
      "cess_data_variable\030\010 \003(\0132\031.efdi.ProcessD"
      "ataVariable\022(\n\textension\030\200\020 \003(\0132\024.google"
      ".protobuf.Any\"\222\004\n\007Product\022\035\n\nproduct_id\030"
      "\001 \001(\0132\t.efdi.UID\022\032\n\022product_designator\030\002"
      " \001(\t\022\'\n\024product_group_id_ref\030\003 \001(\0132\t.efd"
      "i.UID\022*\n\027value_presention_id_ref\030\004 \001(\0132\t"
      ".efdi.UID\022\024\n\014quantity_ddi\030\005 \001(\r\022/\n\014produ"
      "ct_type\030\006 \001(\0162\031.efdi.Product.ProductType"
      "\022\037\n\027mixture_recipe_quantity\030\007 \001(\022\022\037\n\027den"
      "sity_mass_per_volume\030\010 \001(\022\022\036\n\026density_ma"
      "ss_per_count\030\t \001(\022\022 \n\030density_volume_per"
      "_count\030\n \001(\022\022/\n\020product_relation\030\013 \003(\0132\025"
      ".efdi.ProductRelation\022(\n\textension\030\200\020 \003("
      "\0132\024.google.protobuf.Any\"Q\n\013ProductType\022\014"
      "\n\010F_NOTSET\020\000\022\014\n\010F_SINGLE\020\001\022\r\n\tF_MIXTURE\020"
      "\002\022\027\n\023F_TEMPORARY_MIXTURE\020\003\"\316\003\n\021ProductAl"
      "location\022!\n\016product_id_ref\030\001 \001(\0132\t.efdi."
      "UID\022\024\n\014quantity_ddi\030\002 \001(\r\022\026\n\016quantity_va"
      "lue\030\003 \001(\022\022;\n\rtransfer_mode\030\004 \001(\0162$.efdi."
      "ProductAllocation.TransferMode\022(\n\025device"
      "_element_id_ref\030\005 \001(\0132\t.efdi.UID\022,\n\031valu"
      "e_presentation_id_ref\030\006 \001(\0132\t.efdi.UID\022*"
      "\n\027product_sub_type_id_ref\030\007 \001(\0132\t.efdi.U"
      "ID\022/\n\020allocation_stamp\030\010 \001(\0132\025.efdi.Allo"
      "cationStamp\022(\n\textension\030\200\020 \003(\0132\024.google"
      ".protobuf.Any\"L\n\014TransferMode\022\014\n\010D_NOTSE"
      "T\020\000\022\r\n\tD_FILLING\020\001\022\016\n\nD_EMPTYING\020\002\022\017\n\013D_"
      "REMAINDER\020\003\"\210\002\n\014ProductGroup\022#\n\020product_"
      "group_id\030\001 \001(\0132\t.efdi.UID\022 \n\030product_gro"
      "up_designator\030\002 \001(\t\022\?\n\022product_group_typ"
      "e\030\003 \001(\0162#.efdi.ProductGroup.ProductGroup"
      "Type\022(\n\textension\030\200\020 \003(\0132\024.google.protob"
      "uf.Any\"F\n\020ProductGroupType\022\014\n\010C_NOTSET\020\000"
      "\022\023\n\017C_PRODUCT_GROUP\020\001\022\017\n\013C_CROP_TYPE\020\002\"v"
      "\n\017ProductRelation\022!\n\016product_id_ref\030\001 \001("
      "\0132\t.efdi.UID\022\026\n\016quantity_value\030\002 \001(\022\022(\n\t"
      "extension\030\200\020 \003(\0132\024.google.protobuf.Any\"\343"
      "\010\n\004Task\022\032\n\007task_id\030\001 \001(\0132\t.efdi.UID\022\027\n\017t"
      "ask_designator\030\002 \001(\t\022\"\n\017customer_id_ref\030"
      "\003 \001(\0132\t.efdi.UID\022\036\n\013farm_id_ref\030\004 \001(\0132\t."
      "efdi.UID\022#\n\020partfield_id_ref\030\005 \001(\0132\t.efd"
      "i.UID\022,\n\031responsible_worker_id_ref\030\006 \001(\013"
      "2\t.efdi.UID\022*\n\013task_status\030\007 \001(\0162\025.efdi."
      "Task.TaskStatus\022#\n\033default_treatment_zon"
      "e_code\030\010 \001(\r\022)\n!position_lost_treatment_"
      "zone_code\030\t \001(\r\022(\n out_of_field_treatmen"
      "t_zone_code\030\n \001(\r\022+\n\016treatment_zone\030\013 \003("
      "\0132\023.efdi.TreatmentZone\022\030\n\004time\030\014 \003(\0132\n.e"
      "fdi.Time\0222\n\022oper_tech_practice\030\r \001(\0132\026.e"
      "fdi.OperTechPractice\0221\n\021worker_allocatio"
      "n\030\016 \003(\0132\026.efdi.WorkerAllocation\0221\n\021devic"
      "e_allocation\030\017 \003(\0132\026.efdi.DeviceAllocati"
      "on\022$\n\nconnection\030\020 \003(\0132\020.efdi.Connection"
      "\0223\n\022product_allocation\030\021 \003(\0132\027.efdi.Prod"
      "uctAllocation\022.\n\020data_log_trigger\030\022 \003(\0132"
      "\024.efdi.DataLogTrigger\0223\n\022comment_allocat"
      "ion\030\023 \003(\0132\027.efdi.CommentAllocation\022\037\n\010ti"
      "me_log\030\024 \003(\0132\r.efdi.TimeLog\022\030\n\004grid\030\025 \001("
      "\0132\n.efdi.Grid\0223\n\022control_assignment\030\026 \003("
      "\0132\027.efdi.ControlAssignment\0225\n\023guidance_a"
      "llocation\030\027 \003(\0132\030.efdi.GuidanceAllocatio"
      "n\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf."
      "Any\"w\n\nTaskStatus\022\014\n\010G_NOTSET\020\000\022\r\n\tG_PLA"
      "NNED\020\001\022\r\n\tG_RUNNING\020\002\022\014\n\010G_PAUSED\020\003\022\017\n\013G"
      "_COMPLETED\020\004\022\016\n\nG_TEMPLATE\020\005\022\016\n\nG_CANCEL"
      "ED\020\006\"\316\003\n\032TaskControllerCapabilities\022-\n%t"
      "ask_controller_control_function_name\030\001 \001"
      "(\014\022\"\n\032task_controller_designator\030\002 \001(\t\022F"
      "\n\016version_number\030\003 \001(\0162..efdi.TaskContro"
      "llerCapabilities.VersionNumber\022\035\n\025provid"
      "ed_capabilities\030\004 \001(\r\022\'\n\037number_of_booms"
      "_section_control\030\005 \001(\r\022*\n\"number_of_sect"
      "ions_section_control\030\006 \001(\r\022\"\n\032number_of_"
      "control_channels\030\007 \001(\r\022(\n\textension\030\200\020 \003"
      "(\0132\024.google.protobuf.Any\"S\n\rVersionNumbe"
      "r\022\t\n\005C_DIS\020\000\022\014\n\010C_FDIS_1\020\001\022\014\n\010C_FDIS_2\020\002"
      "\022\014\n\010C_E2_DIS\020\003\022\r\n\tC_E2_FDIS\020\004\"\310\003\n\004Time\022)"
      "\n\005start\030\001 \001(\0132\032.google.protobuf.Timestam"
      "p\022(\n\004stop\030\002 \001(\0132\032.google.protobuf.Timest"
      "amp\022\020\n\010duration\030\003 \001(\004\022!\n\004type\030\004 \001(\0162\023.ef"
      "di.Time.TimeType\022&\n\016position_start\030\005 \001(\013"
      "2\016.efdi.Position\022%\n\rposition_stop\030\006 \001(\0132"
      "\016.efdi.Position\022*\n\016data_log_value\030\007 \003(\0132"
      "\022.efdi.DataLogValue\022(\n\textension\030\200\020 \003(\0132"
      "\024.google.protobuf.Any\"\220\001\n\010TimeType\022\014\n\010D_"
      "NOTSET\020\000\022\r\n\tD_PLANNED\020\001\022\021\n\rD_PRELIMINARY"
      "\020\002\022\017\n\013D_EFFECTIVE\020\004\022\021\n\rD_INEFFECTIVE\020\005\022\014"
      "\n\010D_REPAIR\020\006\022\016\n\nD_CLEARING\020\007\022\022\n\016D_POWERE"
      "D_DOWN\020\010\"\360\003\n\013TimeIntOnly\022)\n\005start\030\001 \001(\0132"
      "\032.google.protobuf.Timestamp\022(\n\004stop\030\002 \001("
      "\0132\032.google.protobuf.Timestamp\022\020\n\010duratio"
      "n\030\003 \001(\004\022(\n\004type\030\004 \001(\0162\032.efdi.TimeIntOnly"
      ".TimeType\022&\n\016position_start\030\005 \001(\0132\016.efdi"
      ".Position\022%\n\rposition_stop\030\006 \001(\0132\016.efdi."
      "Position\0221\n\016data_log_value\030\007 \003(\0132\031.efdi."
      "DataLogValueIntOnly\022(\n\textension\030\200\020 \001(\0132"
      "\024.google.protobuf.Any\"\243\001\n\010TimeType\022\014\n\010D_"
      "NOTSET\020\000\022\r\n\tD_PLANNED\020\001\022\021\n\rD_PRELIMINARY"
      "\020\002\022\021\n\rD_PREPARATION\020\003\022\017\n\013D_EFFECTIVE\020\004\022\021"
      "\n\rD_INEFFECTIVE\020\005\022\014\n\010D_REPAIR\020\006\022\016\n\nD_CLE"
      "ARING\020\007\022\022\n\016D_POWERED_DOWN\020\010\"\363\003\n\013TimeDetH"
      "ier\022)\n\005start\030\001 \001(\0132\032.google.protobuf.Tim"
      "estamp\022(\n\004stop\030\002 \001(\0132\032.google.protobuf.T"
      "imestamp\022\020\n\010duration\030\003 \001(\004\022(\n\004type\030\004 \001(\016"
      "2\032.efdi.TimeDetHier.TimeType\022&\n\016position"
      "_start\030\005 \001(\0132\016.efdi.Position\022%\n\rposition"
      "_stop\030\006 \001(\0132\016.efdi.Position\0224\n\023device_el"
      "ement_data\030\007 \003(\0132\027.efdi.DeviceElementDat"
      "a\022(\n\textension\030\200\020 \001(\0132\024.google.protobuf."
      "Any\"\243\001\n\010TimeType\022\014\n\010D_NOTSET\020\000\022\r\n\tD_PLAN"
      "NED\020\001\022\021\n\rD_PRELIMINARY\020\002\022\021\n\rD_PREPARATIO"
      "N\020\003\022\017\n\013D_EFFECTIVE\020\004\022\021\n\rD_INEFFECTIVE\020\005\022"
      "\014\n\010D_REPAIR\020\006\022\016\n\nD_CLEARING\020\007\022\022\n\016D_POWER"
      "ED_DOWN\020\010\"e\n\021DeviceElementData\022\035\n\025device"
      "_element_id_ref\030\001 \001(\022\0221\n\016data_log_value\030"
      "\002 \003(\0132\031.efdi.DataLogValueIntOnly\"\330\001\n\007Tim"
      "eLog\022\020\n\010filename\030\002 \001(\t\022\022\n\nfilelength\030\003 \001"
      "(\004\0220\n\rtime_log_type\030\001 \001(\0162\031.efdi.TimeLog"
      ".TimeLogType\022\030\n\004time\030\004 \003(\0132\n.efdi.Time\022("
      "\n\textension\030\200\020 \003(\0132\024.google.protobuf.Any"
      "\"1\n\013TimeLogType\022\014\n\010C_NOTSET\020\000\022\024\n\020C_BINAR"
      "Y_TIMELOG\020\001\"\362\001\n\rTreatmentZone\022\033\n\023treatme"
      "nt_zone_code\030\001 \001(\r\022!\n\031treatment_zone_des"
      "ignator\030\002 \001(\t\022\035\n\025treatment_zone_colour\030\003"
      " \001(\r\022\036\n\007polygon\030\004 \003(\0132\r.efdi.Polygon\0228\n\025"
      "process_data_variable\030\005 \003(\0132\031.efdi.Proce"
      "ssDataVariable\022(\n\textension\030\200\020 \003(\0132\024.goo"
      "gle.protobuf.Any\"\344\001\n\021ValuePresentation\022("
      "\n\025value_presentation_id\030\001 \001(\0132\t.efdi.UID"
      "\022\016\n\006offset\030\002 \001(\022\022\r\n\005scale\030\003 \001(\001\022\032\n\022numbe"
      "r_of_decimals\030\004 \001(\r\022\027\n\017unit_designator\030\005"
      " \001(\t\022\'\n\024colour_legend_id_ref\030\006 \001(\0132\t.efd"
      "i.UID\022(\n\textension\030\200\020 \003(\0132\024.google.proto"
      "buf.Any\"\364\002\n\006Worker\022\034\n\tworker_id\030\001 \001(\0132\t."
      "efdi.UID\022\030\n\020worker_last_name\030\002 \001(\t\022\031\n\021wo"
      "rker_first_name\030\003 \001(\t\022\025\n\rworker_street\030\004"
      " \001(\t\022\025\n\rworker_po_box\030\005 \001(\t\022\032\n\022worker_po"
      "stal_code\030\006 \001(\t\022\023\n\013worker_city\030\007 \001(\t\022\024\n\014"
      "worker_state\030\010 \001(\t\022\026\n\016worker_country\030\t \001"
      "(\t\022\024\n\014worker_phone\030\n \001(\t\022\025\n\rworker_mobil"
      "e\030\013 \001(\t\022\035\n\025worker_license_number\030\014 \001(\t\022\024"
      "\n\014worker_email\030\r \001(\t\022(\n\textension\030\200\020 \003(\013"
      "2\024.google.protobuf.Any\"\217\001\n\020WorkerAllocat"
      "ion\022 \n\rworker_id_ref\030\001 \001(\0132\t.efdi.UID\022/\n"
      "\020allocation_stamp\030\002 \001(\0132\025.efdi.Allocatio"
      "nStamp\022(\n\textension\030\200\020 \003(\0132\024.google.prot"
      "obuf.Any\"\274\001\n\025ExternalFileReference\022\033\n\010fi"
      "lename\030\001 \001(\0132\t.efdi.UID\0227\n\tfile_type\030\002 \001"
      "(\0162$.efdi.ExternalFileReference.FileType"
      "\022(\n\textension\030\200\020 \003(\0132\024.google.protobuf.A"
      "ny\"#\n\010FileType\022\014\n\010B_NOTSET\020\000\022\t\n\005B_XML\020\001*"
      "\377\001\n\007UIDHead\022\n\n\006NOTSET\020\000\022\007\n\003BSN\020\001\022\007\n\003CCG\020"
      "\002\022\007\n\003CCL\020\003\022\007\n\003CCT\020\004\022\007\n\003CLD\020\005\022\007\n\003CPC\020\006\022\007\n"
      "\003CTP\020\007\022\007\n\003CTR\020\010\022\007\n\003CVT\020\t\022\007\n\003DET\020\n\022\007\n\003DVC"
      "\020\013\022\007\n\003FRM\020\014\022\007\n\003GGP\020\r\022\007\n\003GPN\020\016\022\007\n\003GRD\020\017\022\007"
      "\n\003LGP\020\020\022\007\n\003LSG\020\021\022\007\n\003OTQ\020\022\022\007\n\003PDT\020\023\022\007\n\003PF"
      "D\020\024\022\007\n\003PGP\020\025\022\007\n\003PLN\020\026\022\007\n\003PNT\020\027\022\007\n\003TSK\020\030\022"
      "\007\n\003VPN\020\031\022\007\n\003WKR\020\032b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 20625);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging/request/payload/efdi/grpc-efdi.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto
namespace efdi {
const ::google::protobuf::EnumDescriptor* AllocationStamp_AllocationStampType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[0];
}
bool AllocationStamp_AllocationStampType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AllocationStamp_AllocationStampType AllocationStamp::D_NOTSET;
const AllocationStamp_AllocationStampType AllocationStamp::D_PLANNED;
const AllocationStamp_AllocationStampType AllocationStamp::D_EFFECTIVE;
const AllocationStamp_AllocationStampType AllocationStamp::AllocationStampType_MIN;
const AllocationStamp_AllocationStampType AllocationStamp::AllocationStampType_MAX;
const int AllocationStamp::AllocationStampType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AttachedFile_Preserve_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[1];
}
bool AttachedFile_Preserve_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AttachedFile_Preserve AttachedFile::B_NOTSET;
const AttachedFile_Preserve AttachedFile::B_PRESERVE_NO;
const AttachedFile_Preserve AttachedFile::B_PRESERVE_YES;
const AttachedFile_Preserve AttachedFile::Preserve_MIN;
const AttachedFile_Preserve AttachedFile::Preserve_MAX;
const int AttachedFile::Preserve_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CodedComment_CodedCommentScope_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[2];
}
bool CodedComment_CodedCommentScope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CodedComment_CodedCommentScope CodedComment::C_NOTSET;
const CodedComment_CodedCommentScope CodedComment::C_POINT;
const CodedComment_CodedCommentScope CodedComment::C_GLOBAL;
const CodedComment_CodedCommentScope CodedComment::C_CONTINUOUS;
const CodedComment_CodedCommentScope CodedComment::CodedCommentScope_MIN;
const CodedComment_CodedCommentScope CodedComment::CodedCommentScope_MAX;
const int CodedComment::CodedCommentScope_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeviceElement_DeviceElementType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[3];
}
bool DeviceElement_DeviceElementType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeviceElement_DeviceElementType DeviceElement::C_NOTSET;
const DeviceElement_DeviceElementType DeviceElement::C_DEVICE;
const DeviceElement_DeviceElementType DeviceElement::C_FUNCTION;
const DeviceElement_DeviceElementType DeviceElement::C_BIN;
const DeviceElement_DeviceElementType DeviceElement::C_SECTION;
const DeviceElement_DeviceElementType DeviceElement::C_UNIT;
const DeviceElement_DeviceElementType DeviceElement::C_CONNECTOR;
const DeviceElement_DeviceElementType DeviceElement::C_NAVIGATION;
const DeviceElement_DeviceElementType DeviceElement::DeviceElementType_MIN;
const DeviceElement_DeviceElementType DeviceElement::DeviceElementType_MAX;
const int DeviceElement::DeviceElementType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Grid_GridType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[4];
}
bool Grid_GridType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Grid_GridType Grid::I_NOTSET;
const Grid_GridType Grid::I_GRID_TYPE_1;
const Grid_GridType Grid::I_GRID_TYPE_2;
const Grid_GridType Grid::GridType_MIN;
const Grid_GridType Grid::GridType_MAX;
const int Grid::GridType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GuidancePattern_GuidancePatternType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[5];
}
bool GuidancePattern_GuidancePatternType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuidancePattern_GuidancePatternType GuidancePattern::C_NOTSET;
const GuidancePattern_GuidancePatternType GuidancePattern::C_AB;
const GuidancePattern_GuidancePatternType GuidancePattern::C_A_PLUS;
const GuidancePattern_GuidancePatternType GuidancePattern::C_CURVE;
const GuidancePattern_GuidancePatternType GuidancePattern::C_PIVOT;
const GuidancePattern_GuidancePatternType GuidancePattern::C_SPIRAL;
const GuidancePattern_GuidancePatternType GuidancePattern::GuidancePatternType_MIN;
const GuidancePattern_GuidancePatternType GuidancePattern::GuidancePatternType_MAX;
const int GuidancePattern::GuidancePatternType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GuidancePattern_GuidancePatternOptions_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[6];
}
bool GuidancePattern_GuidancePatternOptions_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuidancePattern_GuidancePatternOptions GuidancePattern::D_NOTSET;
const GuidancePattern_GuidancePatternOptions GuidancePattern::D_CLOCKWISE;
const GuidancePattern_GuidancePatternOptions GuidancePattern::D_COUNTER_CLOCKWISE;
const GuidancePattern_GuidancePatternOptions GuidancePattern::D_FULL_CIRCLE;
const GuidancePattern_GuidancePatternOptions GuidancePattern::GuidancePatternOptions_MIN;
const GuidancePattern_GuidancePatternOptions GuidancePattern::GuidancePatternOptions_MAX;
const int GuidancePattern::GuidancePatternOptions_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GuidancePattern_GuidancePatternPropagationDirection_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[7];
}
bool GuidancePattern_GuidancePatternPropagationDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::E_NOTSET;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::E_BOTH;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::E_LEFT;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::E_RIGHT;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::E_NO_PROP;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::GuidancePatternPropagationDirection_MIN;
const GuidancePattern_GuidancePatternPropagationDirection GuidancePattern::GuidancePatternPropagationDirection_MAX;
const int GuidancePattern::GuidancePatternPropagationDirection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GuidancePattern_GuidancePatternExtension_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[8];
}
bool GuidancePattern_GuidancePatternExtension_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuidancePattern_GuidancePatternExtension GuidancePattern::F_NOTSET;
const GuidancePattern_GuidancePatternExtension GuidancePattern::F_BOTH;
const GuidancePattern_GuidancePatternExtension GuidancePattern::F_FIRST_ONLY;
const GuidancePattern_GuidancePatternExtension GuidancePattern::F_LAST_ONLY;
const GuidancePattern_GuidancePatternExtension GuidancePattern::F_NO_EXT;
const GuidancePattern_GuidancePatternExtension GuidancePattern::GuidancePatternExtension_MIN;
const GuidancePattern_GuidancePatternExtension GuidancePattern::GuidancePatternExtension_MAX;
const int GuidancePattern::GuidancePatternExtension_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GuidancePattern_GuidancePatternGNSSMethod_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[9];
}
bool GuidancePattern_GuidancePatternGNSSMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_NOTSET;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_GNSS_FIX;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_DGNSS_FIX;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_PRECISE_GNSS;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_RTK_FIXED_INTEGER;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_RTK_FLOAT;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_ESTIMATED_DR_MODE;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_MANUAL_INPUT;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_SIMULATE_MODE;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_DESKTOP_GENERATED_DATA;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::I_OTHER;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::GuidancePatternGNSSMethod_MIN;
const GuidancePattern_GuidancePatternGNSSMethod GuidancePattern::GuidancePatternGNSSMethod_MAX;
const int GuidancePattern::GuidancePatternGNSSMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ISO11783_TaskData_VersionMajor_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[10];
}
bool ISO11783_TaskData_VersionMajor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VERSION_MAJOR_DIS;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VERSION_MAJOR_FDIS_1;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VERSION_MAJOR_FDIS_2;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VERSION_MAJOR_E2_DIS;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VERSION_MAJOR_E2_FDIS;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VersionMajor_MIN;
const ISO11783_TaskData_VersionMajor ISO11783_TaskData::VersionMajor_MAX;
const int ISO11783_TaskData::VersionMajor_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ISO11783_TaskData_DataTransferOrigin_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[11];
}
bool ISO11783_TaskData_DataTransferOrigin_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ISO11783_TaskData_DataTransferOrigin ISO11783_TaskData::DATA_TRANSFER_ORIGIN_NOTSET;
const ISO11783_TaskData_DataTransferOrigin ISO11783_TaskData::DATA_TRANSFER_ORIGIN_FMIS;
const ISO11783_TaskData_DataTransferOrigin ISO11783_TaskData::DATA_TRANSFER_ORIGIN_MICS;
const ISO11783_TaskData_DataTransferOrigin ISO11783_TaskData::DataTransferOrigin_MIN;
const ISO11783_TaskData_DataTransferOrigin ISO11783_TaskData::DataTransferOrigin_MAX;
const int ISO11783_TaskData::DataTransferOrigin_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LineString_LinestringType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[12];
}
bool LineString_LinestringType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LineString_LinestringType LineString::A_NOTSET;
const LineString_LinestringType LineString::A_POLYGON_EXTERIOR;
const LineString_LinestringType LineString::A_POLYGON_INTERIOR;
const LineString_LinestringType LineString::A_TRAM_LINE;
const LineString_LinestringType LineString::A_SAMPLING_ROUTE;
const LineString_LinestringType LineString::A_GUIDANCE_PATTERN;
const LineString_LinestringType LineString::A_DRAINAGE;
const LineString_LinestringType LineString::A_FENCE;
const LineString_LinestringType LineString::A_FLAG;
const LineString_LinestringType LineString::A_OBSTACLE;
const LineString_LinestringType LineString::LinestringType_MIN;
const LineString_LinestringType LineString::LinestringType_MAX;
const int LineString::LinestringType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Point_PointType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[13];
}
bool Point_PointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Point_PointType Point::A_NOTSET;
const Point_PointType Point::A_FLAG;
const Point_PointType Point::A_OTHER;
const Point_PointType Point::A_FIELD_ACCESS;
const Point_PointType Point::A_STORAGE;
const Point_PointType Point::A_OBSTACLE;
const Point_PointType Point::A_GUID_REF_A;
const Point_PointType Point::A_GUID_REF_B;
const Point_PointType Point::A_GUID_REF_CENTER;
const Point_PointType Point::A_GUID_POINT;
const Point_PointType Point::A_PARTFIELD_REF_POINT;
const Point_PointType Point::A_HOMEBASE;
const Point_PointType Point::PointType_MIN;
const Point_PointType Point::PointType_MAX;
const int Point::PointType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Polygon_PolygonType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[14];
}
bool Polygon_PolygonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Polygon_PolygonType Polygon::A_NOTSET;
const Polygon_PolygonType Polygon::A_PARTFIELD_BOUNDARY;
const Polygon_PolygonType Polygon::A_TREATMENT_ZONE;
const Polygon_PolygonType Polygon::A_WATER_SURFACE;
const Polygon_PolygonType Polygon::A_BUILDING;
const Polygon_PolygonType Polygon::A_ROAD;
const Polygon_PolygonType Polygon::A_OBSTACLE;
const Polygon_PolygonType Polygon::A_FLAG;
const Polygon_PolygonType Polygon::A_OTHER;
const Polygon_PolygonType Polygon::A_MAINFIELD;
const Polygon_PolygonType Polygon::A_HEADLAND;
const Polygon_PolygonType Polygon::A_BUFFER_ZONE;
const Polygon_PolygonType Polygon::A_WINDBREAK;
const Polygon_PolygonType Polygon::PolygonType_MIN;
const Polygon_PolygonType Polygon::PolygonType_MAX;
const int Polygon::PolygonType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Position_PositionStatus_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[15];
}
bool Position_PositionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Position_PositionStatus Position::D_NO_GPS;
const Position_PositionStatus Position::D_GNSS;
const Position_PositionStatus Position::D_DGNSS;
const Position_PositionStatus Position::D_PRECISE_GNSS;
const Position_PositionStatus Position::D_RTK_FINTEGER;
const Position_PositionStatus Position::D_RTK_FLOAT;
const Position_PositionStatus Position::D_EST_DR_MODE;
const Position_PositionStatus Position::D_MANUAL_INPUT;
const Position_PositionStatus Position::D_SIMULATE_MODE;
const Position_PositionStatus Position::D_ERROR;
const Position_PositionStatus Position::D_NOT_AVAILABLE;
const Position_PositionStatus Position::PositionStatus_MIN;
const Position_PositionStatus Position::PositionStatus_MAX;
const int Position::PositionStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Product_ProductType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[16];
}
bool Product_ProductType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Product_ProductType Product::F_NOTSET;
const Product_ProductType Product::F_SINGLE;
const Product_ProductType Product::F_MIXTURE;
const Product_ProductType Product::F_TEMPORARY_MIXTURE;
const Product_ProductType Product::ProductType_MIN;
const Product_ProductType Product::ProductType_MAX;
const int Product::ProductType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProductAllocation_TransferMode_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[17];
}
bool ProductAllocation_TransferMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProductAllocation_TransferMode ProductAllocation::D_NOTSET;
const ProductAllocation_TransferMode ProductAllocation::D_FILLING;
const ProductAllocation_TransferMode ProductAllocation::D_EMPTYING;
const ProductAllocation_TransferMode ProductAllocation::D_REMAINDER;
const ProductAllocation_TransferMode ProductAllocation::TransferMode_MIN;
const ProductAllocation_TransferMode ProductAllocation::TransferMode_MAX;
const int ProductAllocation::TransferMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProductGroup_ProductGroupType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[18];
}
bool ProductGroup_ProductGroupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProductGroup_ProductGroupType ProductGroup::C_NOTSET;
const ProductGroup_ProductGroupType ProductGroup::C_PRODUCT_GROUP;
const ProductGroup_ProductGroupType ProductGroup::C_CROP_TYPE;
const ProductGroup_ProductGroupType ProductGroup::ProductGroupType_MIN;
const ProductGroup_ProductGroupType ProductGroup::ProductGroupType_MAX;
const int ProductGroup::ProductGroupType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Task_TaskStatus_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[19];
}
bool Task_TaskStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Task_TaskStatus Task::G_NOTSET;
const Task_TaskStatus Task::G_PLANNED;
const Task_TaskStatus Task::G_RUNNING;
const Task_TaskStatus Task::G_PAUSED;
const Task_TaskStatus Task::G_COMPLETED;
const Task_TaskStatus Task::G_TEMPLATE;
const Task_TaskStatus Task::G_CANCELED;
const Task_TaskStatus Task::TaskStatus_MIN;
const Task_TaskStatus Task::TaskStatus_MAX;
const int Task::TaskStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TaskControllerCapabilities_VersionNumber_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[20];
}
bool TaskControllerCapabilities_VersionNumber_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::C_DIS;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::C_FDIS_1;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::C_FDIS_2;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::C_E2_DIS;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::C_E2_FDIS;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::VersionNumber_MIN;
const TaskControllerCapabilities_VersionNumber TaskControllerCapabilities::VersionNumber_MAX;
const int TaskControllerCapabilities::VersionNumber_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Time_TimeType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[21];
}
bool Time_TimeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Time_TimeType Time::D_NOTSET;
const Time_TimeType Time::D_PLANNED;
const Time_TimeType Time::D_PRELIMINARY;
const Time_TimeType Time::D_EFFECTIVE;
const Time_TimeType Time::D_INEFFECTIVE;
const Time_TimeType Time::D_REPAIR;
const Time_TimeType Time::D_CLEARING;
const Time_TimeType Time::D_POWERED_DOWN;
const Time_TimeType Time::TimeType_MIN;
const Time_TimeType Time::TimeType_MAX;
const int Time::TimeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TimeIntOnly_TimeType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[22];
}
bool TimeIntOnly_TimeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TimeIntOnly_TimeType TimeIntOnly::D_NOTSET;
const TimeIntOnly_TimeType TimeIntOnly::D_PLANNED;
const TimeIntOnly_TimeType TimeIntOnly::D_PRELIMINARY;
const TimeIntOnly_TimeType TimeIntOnly::D_PREPARATION;
const TimeIntOnly_TimeType TimeIntOnly::D_EFFECTIVE;
const TimeIntOnly_TimeType TimeIntOnly::D_INEFFECTIVE;
const TimeIntOnly_TimeType TimeIntOnly::D_REPAIR;
const TimeIntOnly_TimeType TimeIntOnly::D_CLEARING;
const TimeIntOnly_TimeType TimeIntOnly::D_POWERED_DOWN;
const TimeIntOnly_TimeType TimeIntOnly::TimeType_MIN;
const TimeIntOnly_TimeType TimeIntOnly::TimeType_MAX;
const int TimeIntOnly::TimeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TimeDetHier_TimeType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[23];
}
bool TimeDetHier_TimeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TimeDetHier_TimeType TimeDetHier::D_NOTSET;
const TimeDetHier_TimeType TimeDetHier::D_PLANNED;
const TimeDetHier_TimeType TimeDetHier::D_PRELIMINARY;
const TimeDetHier_TimeType TimeDetHier::D_PREPARATION;
const TimeDetHier_TimeType TimeDetHier::D_EFFECTIVE;
const TimeDetHier_TimeType TimeDetHier::D_INEFFECTIVE;
const TimeDetHier_TimeType TimeDetHier::D_REPAIR;
const TimeDetHier_TimeType TimeDetHier::D_CLEARING;
const TimeDetHier_TimeType TimeDetHier::D_POWERED_DOWN;
const TimeDetHier_TimeType TimeDetHier::TimeType_MIN;
const TimeDetHier_TimeType TimeDetHier::TimeType_MAX;
const int TimeDetHier::TimeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TimeLog_TimeLogType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[24];
}
bool TimeLog_TimeLogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TimeLog_TimeLogType TimeLog::C_NOTSET;
const TimeLog_TimeLogType TimeLog::C_BINARY_TIMELOG;
const TimeLog_TimeLogType TimeLog::TimeLogType_MIN;
const TimeLog_TimeLogType TimeLog::TimeLogType_MAX;
const int TimeLog::TimeLogType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExternalFileReference_FileType_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[25];
}
bool ExternalFileReference_FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExternalFileReference_FileType ExternalFileReference::B_NOTSET;
const ExternalFileReference_FileType ExternalFileReference::B_XML;
const ExternalFileReference_FileType ExternalFileReference::FileType_MIN;
const ExternalFileReference_FileType ExternalFileReference::FileType_MAX;
const int ExternalFileReference::FileType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UIDHead_descriptor() {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_enum_descriptors[26];
}
bool UIDHead_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UID::kHeadFieldNumber;
const int UID::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UID::UID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.UID)
}
UID::UID(const UID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&head_) -
    reinterpret_cast<char*>(&number_)) + sizeof(head_));
  // @@protoc_insertion_point(copy_constructor:efdi.UID)
}

void UID::SharedCtor() {
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&head_) -
      reinterpret_cast<char*>(&number_)) + sizeof(head_));
  _cached_size_ = 0;
}

UID::~UID() {
  // @@protoc_insertion_point(destructor:efdi.UID)
  SharedDtor();
}

void UID::SharedDtor() {
}

void UID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UID::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UID& UID::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsUID();
  return *internal_default_instance();
}

UID* UID::New(::google::protobuf::Arena* arena) const {
  UID* n = new UID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UID::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.UID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&head_) -
      reinterpret_cast<char*>(&number_)) + sizeof(head_));
  _internal_metadata_.Clear();
}

bool UID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.UID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UIDHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_head(static_cast< ::efdi::UIDHead >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.UID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.UID)
  return false;
#undef DO_
}

void UID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.UID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UIDHead head = 1;
  if (this->head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->head(), output);
  }

  // sint64 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.UID)
}

::google::protobuf::uint8* UID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.UID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UIDHead head = 1;
  if (this->head() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->head(), target);
  }

  // sint64 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.UID)
  return target;
}

size_t UID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.UID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->number());
  }

  // .efdi.UIDHead head = 1;
  if (this->head() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->head());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.UID)
  GOOGLE_DCHECK_NE(&from, this);
  const UID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.UID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.UID)
    MergeFrom(*source);
  }
}

void UID::MergeFrom(const UID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.UID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.head() != 0) {
    set_head(from.head());
  }
}

void UID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.UID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UID::CopyFrom(const UID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.UID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UID::IsInitialized() const {
  return true;
}

void UID::Swap(UID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UID::InternalSwap(UID* other) {
  using std::swap;
  swap(number_, other->number_);
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UID::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocationStamp::InitAsDefaultInstance() {
  ::efdi::_AllocationStamp_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_AllocationStamp_default_instance_._instance.get_mutable()->stop_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void AllocationStamp::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
}
void AllocationStamp::clear_stop() {
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
}
void AllocationStamp::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocationStamp::kStartFieldNumber;
const int AllocationStamp::kStopFieldNumber;
const int AllocationStamp::kDurationFieldNumber;
const int AllocationStamp::kTypeFieldNumber;
const int AllocationStamp::kPositionFieldNumber;
const int AllocationStamp::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocationStamp::AllocationStamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.AllocationStamp)
}
AllocationStamp::AllocationStamp(const AllocationStamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      position_(from.position_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::google::protobuf::Timestamp(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_stop()) {
    stop_ = new ::google::protobuf::Timestamp(*from.stop_);
  } else {
    stop_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:efdi.AllocationStamp)
}

void AllocationStamp::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
  _cached_size_ = 0;
}

AllocationStamp::~AllocationStamp() {
  // @@protoc_insertion_point(destructor:efdi.AllocationStamp)
  SharedDtor();
}

void AllocationStamp::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete stop_;
}

void AllocationStamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocationStamp::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocationStamp& AllocationStamp::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAllocationStamp();
  return *internal_default_instance();
}

AllocationStamp* AllocationStamp::New(::google::protobuf::Arena* arena) const {
  AllocationStamp* n = new AllocationStamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocationStamp::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.AllocationStamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool AllocationStamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.AllocationStamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp.AllocationStampType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::efdi::AllocationStamp_AllocationStampType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Position position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.AllocationStamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.AllocationStamp)
  return false;
#undef DO_
}

void AllocationStamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.AllocationStamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_, output);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stop_, output);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->duration(), output);
  }

  // .efdi.AllocationStamp.AllocationStampType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // repeated .efdi.Position position = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->position_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->position(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.AllocationStamp)
}

::google::protobuf::uint8* AllocationStamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.AllocationStamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_, deterministic, target);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->stop_, deterministic, target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->duration(), target);
  }

  // .efdi.AllocationStamp.AllocationStampType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // repeated .efdi.Position position = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->position_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->position(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.AllocationStamp)
  return target;
}

size_t AllocationStamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.AllocationStamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Position position = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->position_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->position(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stop_);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  // .efdi.AllocationStamp.AllocationStampType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocationStamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.AllocationStamp)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocationStamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocationStamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.AllocationStamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.AllocationStamp)
    MergeFrom(*source);
  }
}

void AllocationStamp::MergeFrom(const AllocationStamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.AllocationStamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_.MergeFrom(from.position_);
  extension_.MergeFrom(from.extension_);
  if (from.has_start()) {
    mutable_start()->::google::protobuf::Timestamp::MergeFrom(from.start());
  }
  if (from.has_stop()) {
    mutable_stop()->::google::protobuf::Timestamp::MergeFrom(from.stop());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void AllocationStamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.AllocationStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocationStamp::CopyFrom(const AllocationStamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.AllocationStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocationStamp::IsInitialized() const {
  return true;
}

void AllocationStamp::Swap(AllocationStamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocationStamp::InternalSwap(AllocationStamp* other) {
  using std::swap;
  position_.InternalSwap(&other->position_);
  extension_.InternalSwap(&other->extension_);
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  swap(duration_, other->duration_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocationStamp::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachedFile::InitAsDefaultInstance() {
  ::efdi::_AttachedFile_default_instance_._instance.get_mutable()->filename_with_extension_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void AttachedFile::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachedFile::kFilenameWithExtensionFieldNumber;
const int AttachedFile::kPreserveFieldNumber;
const int AttachedFile::kManufacturerGlnFieldNumber;
const int AttachedFile::kFileTypeFieldNumber;
const int AttachedFile::kFileVersionFieldNumber;
const int AttachedFile::kFileLengthFieldNumber;
const int AttachedFile::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachedFile::AttachedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAttachedFile();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.AttachedFile)
}
AttachedFile::AttachedFile(const AttachedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manufacturer_gln_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manufacturer_gln().size() > 0) {
    manufacturer_gln_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_gln_);
  }
  file_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_version().size() > 0) {
    file_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_version_);
  }
  if (from.has_filename_with_extension()) {
    filename_with_extension_ = new ::efdi::UID(*from.filename_with_extension_);
  } else {
    filename_with_extension_ = NULL;
  }
  ::memcpy(&preserve_, &from.preserve_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_length_) -
    reinterpret_cast<char*>(&preserve_)) + sizeof(file_length_));
  // @@protoc_insertion_point(copy_constructor:efdi.AttachedFile)
}

void AttachedFile::SharedCtor() {
  manufacturer_gln_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filename_with_extension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_length_) -
      reinterpret_cast<char*>(&filename_with_extension_)) + sizeof(file_length_));
  _cached_size_ = 0;
}

AttachedFile::~AttachedFile() {
  // @@protoc_insertion_point(destructor:efdi.AttachedFile)
  SharedDtor();
}

void AttachedFile::SharedDtor() {
  manufacturer_gln_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete filename_with_extension_;
}

void AttachedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachedFile::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachedFile& AttachedFile::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsAttachedFile();
  return *internal_default_instance();
}

AttachedFile* AttachedFile::New(::google::protobuf::Arena* arena) const {
  AttachedFile* n = new AttachedFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttachedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.AttachedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  manufacturer_gln_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && filename_with_extension_ != NULL) {
    delete filename_with_extension_;
  }
  filename_with_extension_ = NULL;
  ::memset(&preserve_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_length_) -
      reinterpret_cast<char*>(&preserve_)) + sizeof(file_length_));
  _internal_metadata_.Clear();
}

bool AttachedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.AttachedFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID filename_with_extension = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filename_with_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AttachedFile.Preserve preserve = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_preserve(static_cast< ::efdi::AttachedFile_Preserve >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string manufacturer_gln = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufacturer_gln()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manufacturer_gln().data(), static_cast<int>(this->manufacturer_gln().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.AttachedFile.manufacturer_gln"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_version().data(), static_cast<int>(this->file_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.AttachedFile.file_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.AttachedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.AttachedFile)
  return false;
#undef DO_
}

void AttachedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.AttachedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID filename_with_extension = 1;
  if (this->has_filename_with_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filename_with_extension_, output);
  }

  // .efdi.AttachedFile.Preserve preserve = 2;
  if (this->preserve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->preserve(), output);
  }

  // string manufacturer_gln = 3;
  if (this->manufacturer_gln().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturer_gln().data(), static_cast<int>(this->manufacturer_gln().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.AttachedFile.manufacturer_gln");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->manufacturer_gln(), output);
  }

  // uint32 file_type = 4;
  if (this->file_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_type(), output);
  }

  // string file_version = 5;
  if (this->file_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_version().data(), static_cast<int>(this->file_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.AttachedFile.file_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->file_version(), output);
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->file_length(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.AttachedFile)
}

::google::protobuf::uint8* AttachedFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.AttachedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID filename_with_extension = 1;
  if (this->has_filename_with_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filename_with_extension_, deterministic, target);
  }

  // .efdi.AttachedFile.Preserve preserve = 2;
  if (this->preserve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->preserve(), target);
  }

  // string manufacturer_gln = 3;
  if (this->manufacturer_gln().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturer_gln().data(), static_cast<int>(this->manufacturer_gln().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.AttachedFile.manufacturer_gln");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->manufacturer_gln(), target);
  }

  // uint32 file_type = 4;
  if (this->file_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_type(), target);
  }

  // string file_version = 5;
  if (this->file_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_version().data(), static_cast<int>(this->file_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.AttachedFile.file_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->file_version(), target);
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->file_length(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.AttachedFile)
  return target;
}

size_t AttachedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.AttachedFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string manufacturer_gln = 3;
  if (this->manufacturer_gln().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manufacturer_gln());
  }

  // string file_version = 5;
  if (this->file_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_version());
  }

  // .efdi.UID filename_with_extension = 1;
  if (this->has_filename_with_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filename_with_extension_);
  }

  // .efdi.AttachedFile.Preserve preserve = 2;
  if (this->preserve() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->preserve());
  }

  // uint32 file_type = 4;
  if (this->file_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_type());
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.AttachedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachedFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachedFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.AttachedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.AttachedFile)
    MergeFrom(*source);
  }
}

void AttachedFile::MergeFrom(const AttachedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.AttachedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.manufacturer_gln().size() > 0) {

    manufacturer_gln_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_gln_);
  }
  if (from.file_version().size() > 0) {

    file_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_version_);
  }
  if (from.has_filename_with_extension()) {
    mutable_filename_with_extension()->::efdi::UID::MergeFrom(from.filename_with_extension());
  }
  if (from.preserve() != 0) {
    set_preserve(from.preserve());
  }
  if (from.file_type() != 0) {
    set_file_type(from.file_type());
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
}

void AttachedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.AttachedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachedFile::CopyFrom(const AttachedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.AttachedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachedFile::IsInitialized() const {
  return true;
}

void AttachedFile::Swap(AttachedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachedFile::InternalSwap(AttachedFile* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  manufacturer_gln_.Swap(&other->manufacturer_gln_);
  file_version_.Swap(&other->file_version_);
  swap(filename_with_extension_, other->filename_with_extension_);
  swap(preserve_, other->preserve_);
  swap(file_type_, other->file_type_);
  swap(file_length_, other->file_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttachedFile::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BaseStation::InitAsDefaultInstance() {
  ::efdi::_BaseStation_default_instance_._instance.get_mutable()->base_station_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void BaseStation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseStation::kBaseStationIdFieldNumber;
const int BaseStation::kBaseStationDesignatorFieldNumber;
const int BaseStation::kBaseStationNorthFieldNumber;
const int BaseStation::kBaseStationEastFieldNumber;
const int BaseStation::kBaseStationUpFieldNumber;
const int BaseStation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseStation::BaseStation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsBaseStation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.BaseStation)
}
BaseStation::BaseStation(const BaseStation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_station_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_station_designator().size() > 0) {
    base_station_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_station_designator_);
  }
  if (from.has_base_station_id()) {
    base_station_id_ = new ::efdi::UID(*from.base_station_id_);
  } else {
    base_station_id_ = NULL;
  }
  ::memcpy(&base_station_north_, &from.base_station_north_,
    static_cast<size_t>(reinterpret_cast<char*>(&base_station_up_) -
    reinterpret_cast<char*>(&base_station_north_)) + sizeof(base_station_up_));
  // @@protoc_insertion_point(copy_constructor:efdi.BaseStation)
}

void BaseStation::SharedCtor() {
  base_station_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_station_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_station_up_) -
      reinterpret_cast<char*>(&base_station_id_)) + sizeof(base_station_up_));
  _cached_size_ = 0;
}

BaseStation::~BaseStation() {
  // @@protoc_insertion_point(destructor:efdi.BaseStation)
  SharedDtor();
}

void BaseStation::SharedDtor() {
  base_station_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_station_id_;
}

void BaseStation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseStation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseStation& BaseStation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsBaseStation();
  return *internal_default_instance();
}

BaseStation* BaseStation::New(::google::protobuf::Arena* arena) const {
  BaseStation* n = new BaseStation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseStation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.BaseStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  base_station_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_station_id_ != NULL) {
    delete base_station_id_;
  }
  base_station_id_ = NULL;
  ::memset(&base_station_north_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_station_up_) -
      reinterpret_cast<char*>(&base_station_north_)) + sizeof(base_station_up_));
  _internal_metadata_.Clear();
}

bool BaseStation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.BaseStation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID base_station_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_station_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_station_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_station_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_station_designator().data(), static_cast<int>(this->base_station_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.BaseStation.base_station_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double base_station_north = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &base_station_north_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double base_station_east = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &base_station_east_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 base_station_up = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &base_station_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.BaseStation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.BaseStation)
  return false;
#undef DO_
}

void BaseStation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.BaseStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID base_station_id = 1;
  if (this->has_base_station_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_station_id_, output);
  }

  // string base_station_designator = 2;
  if (this->base_station_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_station_designator().data(), static_cast<int>(this->base_station_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.BaseStation.base_station_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base_station_designator(), output);
  }

  // double base_station_north = 3;
  if (this->base_station_north() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->base_station_north(), output);
  }

  // double base_station_east = 4;
  if (this->base_station_east() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->base_station_east(), output);
  }

  // sint64 base_station_up = 5;
  if (this->base_station_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->base_station_up(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.BaseStation)
}

::google::protobuf::uint8* BaseStation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.BaseStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID base_station_id = 1;
  if (this->has_base_station_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->base_station_id_, deterministic, target);
  }

  // string base_station_designator = 2;
  if (this->base_station_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_station_designator().data(), static_cast<int>(this->base_station_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.BaseStation.base_station_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_station_designator(), target);
  }

  // double base_station_north = 3;
  if (this->base_station_north() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->base_station_north(), target);
  }

  // double base_station_east = 4;
  if (this->base_station_east() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->base_station_east(), target);
  }

  // sint64 base_station_up = 5;
  if (this->base_station_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->base_station_up(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.BaseStation)
  return target;
}

size_t BaseStation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.BaseStation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string base_station_designator = 2;
  if (this->base_station_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_station_designator());
  }

  // .efdi.UID base_station_id = 1;
  if (this->has_base_station_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_station_id_);
  }

  // double base_station_north = 3;
  if (this->base_station_north() != 0) {
    total_size += 1 + 8;
  }

  // double base_station_east = 4;
  if (this->base_station_east() != 0) {
    total_size += 1 + 8;
  }

  // sint64 base_station_up = 5;
  if (this->base_station_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->base_station_up());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseStation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.BaseStation)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseStation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseStation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.BaseStation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.BaseStation)
    MergeFrom(*source);
  }
}

void BaseStation::MergeFrom(const BaseStation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.BaseStation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.base_station_designator().size() > 0) {

    base_station_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_station_designator_);
  }
  if (from.has_base_station_id()) {
    mutable_base_station_id()->::efdi::UID::MergeFrom(from.base_station_id());
  }
  if (from.base_station_north() != 0) {
    set_base_station_north(from.base_station_north());
  }
  if (from.base_station_east() != 0) {
    set_base_station_east(from.base_station_east());
  }
  if (from.base_station_up() != 0) {
    set_base_station_up(from.base_station_up());
  }
}

void BaseStation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.BaseStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseStation::CopyFrom(const BaseStation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.BaseStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseStation::IsInitialized() const {
  return true;
}

void BaseStation::Swap(BaseStation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseStation::InternalSwap(BaseStation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  base_station_designator_.Swap(&other->base_station_designator_);
  swap(base_station_id_, other->base_station_id_);
  swap(base_station_north_, other->base_station_north_);
  swap(base_station_east_, other->base_station_east_);
  swap(base_station_up_, other->base_station_up_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseStation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodedComment::InitAsDefaultInstance() {
  ::efdi::_CodedComment_default_instance_._instance.get_mutable()->coded_comment_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_CodedComment_default_instance_._instance.get_mutable()->coded_comment_group_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void CodedComment::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodedComment::kCodedCommentIdFieldNumber;
const int CodedComment::kCodedCommentDesignatorFieldNumber;
const int CodedComment::kCodedCommentScopeFieldNumber;
const int CodedComment::kCodedCommentGroupIdRefFieldNumber;
const int CodedComment::kCodedCommentListValueFieldNumber;
const int CodedComment::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodedComment::CodedComment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedComment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CodedComment)
}
CodedComment::CodedComment(const CodedComment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coded_comment_list_value_(from.coded_comment_list_value_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coded_comment_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coded_comment_designator().size() > 0) {
    coded_comment_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_designator_);
  }
  if (from.has_coded_comment_id()) {
    coded_comment_id_ = new ::efdi::UID(*from.coded_comment_id_);
  } else {
    coded_comment_id_ = NULL;
  }
  if (from.has_coded_comment_group_id_ref()) {
    coded_comment_group_id_ref_ = new ::efdi::UID(*from.coded_comment_group_id_ref_);
  } else {
    coded_comment_group_id_ref_ = NULL;
  }
  coded_comment_scope_ = from.coded_comment_scope_;
  // @@protoc_insertion_point(copy_constructor:efdi.CodedComment)
}

void CodedComment::SharedCtor() {
  coded_comment_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coded_comment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coded_comment_scope_) -
      reinterpret_cast<char*>(&coded_comment_id_)) + sizeof(coded_comment_scope_));
  _cached_size_ = 0;
}

CodedComment::~CodedComment() {
  // @@protoc_insertion_point(destructor:efdi.CodedComment)
  SharedDtor();
}

void CodedComment::SharedDtor() {
  coded_comment_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coded_comment_id_;
  if (this != internal_default_instance()) delete coded_comment_group_id_ref_;
}

void CodedComment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodedComment::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodedComment& CodedComment::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedComment();
  return *internal_default_instance();
}

CodedComment* CodedComment::New(::google::protobuf::Arena* arena) const {
  CodedComment* n = new CodedComment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodedComment::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CodedComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coded_comment_list_value_.Clear();
  extension_.Clear();
  coded_comment_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coded_comment_id_ != NULL) {
    delete coded_comment_id_;
  }
  coded_comment_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && coded_comment_group_id_ref_ != NULL) {
    delete coded_comment_group_id_ref_;
  }
  coded_comment_group_id_ref_ = NULL;
  coded_comment_scope_ = 0;
  _internal_metadata_.Clear();
}

bool CodedComment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CodedComment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID coded_comment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coded_comment_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coded_comment_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coded_comment_designator().data(), static_cast<int>(this->coded_comment_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CodedComment.coded_comment_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.CodedComment.CodedCommentScope coded_comment_scope = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_coded_comment_scope(static_cast< ::efdi::CodedComment_CodedCommentScope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID coded_comment_group_id_ref = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_group_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CodedCommentListValue coded_comment_list_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_coded_comment_list_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CodedComment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CodedComment)
  return false;
#undef DO_
}

void CodedComment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CodedComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_id = 1;
  if (this->has_coded_comment_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coded_comment_id_, output);
  }

  // string coded_comment_designator = 2;
  if (this->coded_comment_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_designator().data(), static_cast<int>(this->coded_comment_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedComment.coded_comment_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->coded_comment_designator(), output);
  }

  // .efdi.CodedComment.CodedCommentScope coded_comment_scope = 3;
  if (this->coded_comment_scope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->coded_comment_scope(), output);
  }

  // .efdi.UID coded_comment_group_id_ref = 4;
  if (this->has_coded_comment_group_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->coded_comment_group_id_ref_, output);
  }

  // repeated .efdi.CodedCommentListValue coded_comment_list_value = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_list_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->coded_comment_list_value(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CodedComment)
}

::google::protobuf::uint8* CodedComment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CodedComment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_id = 1;
  if (this->has_coded_comment_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coded_comment_id_, deterministic, target);
  }

  // string coded_comment_designator = 2;
  if (this->coded_comment_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_designator().data(), static_cast<int>(this->coded_comment_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedComment.coded_comment_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->coded_comment_designator(), target);
  }

  // .efdi.CodedComment.CodedCommentScope coded_comment_scope = 3;
  if (this->coded_comment_scope() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->coded_comment_scope(), target);
  }

  // .efdi.UID coded_comment_group_id_ref = 4;
  if (this->has_coded_comment_group_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->coded_comment_group_id_ref_, deterministic, target);
  }

  // repeated .efdi.CodedCommentListValue coded_comment_list_value = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_list_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->coded_comment_list_value(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CodedComment)
  return target;
}

size_t CodedComment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CodedComment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.CodedCommentListValue coded_comment_list_value = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->coded_comment_list_value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coded_comment_list_value(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string coded_comment_designator = 2;
  if (this->coded_comment_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coded_comment_designator());
  }

  // .efdi.UID coded_comment_id = 1;
  if (this->has_coded_comment_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_id_);
  }

  // .efdi.UID coded_comment_group_id_ref = 4;
  if (this->has_coded_comment_group_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_group_id_ref_);
  }

  // .efdi.CodedComment.CodedCommentScope coded_comment_scope = 3;
  if (this->coded_comment_scope() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->coded_comment_scope());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodedComment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CodedComment)
  GOOGLE_DCHECK_NE(&from, this);
  const CodedComment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodedComment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CodedComment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CodedComment)
    MergeFrom(*source);
  }
}

void CodedComment::MergeFrom(const CodedComment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CodedComment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coded_comment_list_value_.MergeFrom(from.coded_comment_list_value_);
  extension_.MergeFrom(from.extension_);
  if (from.coded_comment_designator().size() > 0) {

    coded_comment_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_designator_);
  }
  if (from.has_coded_comment_id()) {
    mutable_coded_comment_id()->::efdi::UID::MergeFrom(from.coded_comment_id());
  }
  if (from.has_coded_comment_group_id_ref()) {
    mutable_coded_comment_group_id_ref()->::efdi::UID::MergeFrom(from.coded_comment_group_id_ref());
  }
  if (from.coded_comment_scope() != 0) {
    set_coded_comment_scope(from.coded_comment_scope());
  }
}

void CodedComment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CodedComment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodedComment::CopyFrom(const CodedComment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CodedComment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodedComment::IsInitialized() const {
  return true;
}

void CodedComment::Swap(CodedComment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodedComment::InternalSwap(CodedComment* other) {
  using std::swap;
  coded_comment_list_value_.InternalSwap(&other->coded_comment_list_value_);
  extension_.InternalSwap(&other->extension_);
  coded_comment_designator_.Swap(&other->coded_comment_designator_);
  swap(coded_comment_id_, other->coded_comment_id_);
  swap(coded_comment_group_id_ref_, other->coded_comment_group_id_ref_);
  swap(coded_comment_scope_, other->coded_comment_scope_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodedComment::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodedCommentGroup::InitAsDefaultInstance() {
  ::efdi::_CodedCommentGroup_default_instance_._instance.get_mutable()->coded_comment_group_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void CodedCommentGroup::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodedCommentGroup::kCodedCommentGroupIdFieldNumber;
const int CodedCommentGroup::kCodedCommentGroupDesignatorFieldNumber;
const int CodedCommentGroup::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodedCommentGroup::CodedCommentGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CodedCommentGroup)
}
CodedCommentGroup::CodedCommentGroup(const CodedCommentGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coded_comment_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coded_comment_group_designator().size() > 0) {
    coded_comment_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_group_designator_);
  }
  if (from.has_coded_comment_group_id()) {
    coded_comment_group_id_ = new ::efdi::UID(*from.coded_comment_group_id_);
  } else {
    coded_comment_group_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CodedCommentGroup)
}

void CodedCommentGroup::SharedCtor() {
  coded_comment_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coded_comment_group_id_ = NULL;
  _cached_size_ = 0;
}

CodedCommentGroup::~CodedCommentGroup() {
  // @@protoc_insertion_point(destructor:efdi.CodedCommentGroup)
  SharedDtor();
}

void CodedCommentGroup::SharedDtor() {
  coded_comment_group_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coded_comment_group_id_;
}

void CodedCommentGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodedCommentGroup::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodedCommentGroup& CodedCommentGroup::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentGroup();
  return *internal_default_instance();
}

CodedCommentGroup* CodedCommentGroup::New(::google::protobuf::Arena* arena) const {
  CodedCommentGroup* n = new CodedCommentGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodedCommentGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CodedCommentGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  coded_comment_group_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coded_comment_group_id_ != NULL) {
    delete coded_comment_group_id_;
  }
  coded_comment_group_id_ = NULL;
  _internal_metadata_.Clear();
}

bool CodedCommentGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CodedCommentGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID coded_comment_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coded_comment_group_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coded_comment_group_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coded_comment_group_designator().data(), static_cast<int>(this->coded_comment_group_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CodedCommentGroup.coded_comment_group_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CodedCommentGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CodedCommentGroup)
  return false;
#undef DO_
}

void CodedCommentGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CodedCommentGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_group_id = 1;
  if (this->has_coded_comment_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coded_comment_group_id_, output);
  }

  // string coded_comment_group_designator = 2;
  if (this->coded_comment_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_group_designator().data(), static_cast<int>(this->coded_comment_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedCommentGroup.coded_comment_group_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->coded_comment_group_designator(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CodedCommentGroup)
}

::google::protobuf::uint8* CodedCommentGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CodedCommentGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_group_id = 1;
  if (this->has_coded_comment_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coded_comment_group_id_, deterministic, target);
  }

  // string coded_comment_group_designator = 2;
  if (this->coded_comment_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_group_designator().data(), static_cast<int>(this->coded_comment_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedCommentGroup.coded_comment_group_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->coded_comment_group_designator(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CodedCommentGroup)
  return target;
}

size_t CodedCommentGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CodedCommentGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string coded_comment_group_designator = 2;
  if (this->coded_comment_group_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coded_comment_group_designator());
  }

  // .efdi.UID coded_comment_group_id = 1;
  if (this->has_coded_comment_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_group_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodedCommentGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CodedCommentGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const CodedCommentGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodedCommentGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CodedCommentGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CodedCommentGroup)
    MergeFrom(*source);
  }
}

void CodedCommentGroup::MergeFrom(const CodedCommentGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CodedCommentGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.coded_comment_group_designator().size() > 0) {

    coded_comment_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_group_designator_);
  }
  if (from.has_coded_comment_group_id()) {
    mutable_coded_comment_group_id()->::efdi::UID::MergeFrom(from.coded_comment_group_id());
  }
}

void CodedCommentGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CodedCommentGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodedCommentGroup::CopyFrom(const CodedCommentGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CodedCommentGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodedCommentGroup::IsInitialized() const {
  return true;
}

void CodedCommentGroup::Swap(CodedCommentGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodedCommentGroup::InternalSwap(CodedCommentGroup* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  coded_comment_group_designator_.Swap(&other->coded_comment_group_designator_);
  swap(coded_comment_group_id_, other->coded_comment_group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodedCommentGroup::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodedCommentListValue::InitAsDefaultInstance() {
  ::efdi::_CodedCommentListValue_default_instance_._instance.get_mutable()->coded_comment_list_value_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void CodedCommentListValue::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodedCommentListValue::kCodedCommentListValueIdFieldNumber;
const int CodedCommentListValue::kCodedCommentListValueDesignatorFieldNumber;
const int CodedCommentListValue::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodedCommentListValue::CodedCommentListValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentListValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CodedCommentListValue)
}
CodedCommentListValue::CodedCommentListValue(const CodedCommentListValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  coded_comment_list_value_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coded_comment_list_value_designator().size() > 0) {
    coded_comment_list_value_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_list_value_designator_);
  }
  if (from.has_coded_comment_list_value_id()) {
    coded_comment_list_value_id_ = new ::efdi::UID(*from.coded_comment_list_value_id_);
  } else {
    coded_comment_list_value_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CodedCommentListValue)
}

void CodedCommentListValue::SharedCtor() {
  coded_comment_list_value_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coded_comment_list_value_id_ = NULL;
  _cached_size_ = 0;
}

CodedCommentListValue::~CodedCommentListValue() {
  // @@protoc_insertion_point(destructor:efdi.CodedCommentListValue)
  SharedDtor();
}

void CodedCommentListValue::SharedDtor() {
  coded_comment_list_value_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coded_comment_list_value_id_;
}

void CodedCommentListValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodedCommentListValue::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodedCommentListValue& CodedCommentListValue::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCodedCommentListValue();
  return *internal_default_instance();
}

CodedCommentListValue* CodedCommentListValue::New(::google::protobuf::Arena* arena) const {
  CodedCommentListValue* n = new CodedCommentListValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodedCommentListValue::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CodedCommentListValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  coded_comment_list_value_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coded_comment_list_value_id_ != NULL) {
    delete coded_comment_list_value_id_;
  }
  coded_comment_list_value_id_ = NULL;
  _internal_metadata_.Clear();
}

bool CodedCommentListValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CodedCommentListValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID coded_comment_list_value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_list_value_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coded_comment_list_value_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coded_comment_list_value_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coded_comment_list_value_designator().data(), static_cast<int>(this->coded_comment_list_value_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CodedCommentListValue.coded_comment_list_value_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CodedCommentListValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CodedCommentListValue)
  return false;
#undef DO_
}

void CodedCommentListValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CodedCommentListValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_list_value_id = 1;
  if (this->has_coded_comment_list_value_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coded_comment_list_value_id_, output);
  }

  // string coded_comment_list_value_designator = 2;
  if (this->coded_comment_list_value_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_list_value_designator().data(), static_cast<int>(this->coded_comment_list_value_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedCommentListValue.coded_comment_list_value_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->coded_comment_list_value_designator(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CodedCommentListValue)
}

::google::protobuf::uint8* CodedCommentListValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CodedCommentListValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_list_value_id = 1;
  if (this->has_coded_comment_list_value_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coded_comment_list_value_id_, deterministic, target);
  }

  // string coded_comment_list_value_designator = 2;
  if (this->coded_comment_list_value_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coded_comment_list_value_designator().data(), static_cast<int>(this->coded_comment_list_value_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CodedCommentListValue.coded_comment_list_value_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->coded_comment_list_value_designator(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CodedCommentListValue)
  return target;
}

size_t CodedCommentListValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CodedCommentListValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string coded_comment_list_value_designator = 2;
  if (this->coded_comment_list_value_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coded_comment_list_value_designator());
  }

  // .efdi.UID coded_comment_list_value_id = 1;
  if (this->has_coded_comment_list_value_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_list_value_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodedCommentListValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CodedCommentListValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CodedCommentListValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodedCommentListValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CodedCommentListValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CodedCommentListValue)
    MergeFrom(*source);
  }
}

void CodedCommentListValue::MergeFrom(const CodedCommentListValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CodedCommentListValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.coded_comment_list_value_designator().size() > 0) {

    coded_comment_list_value_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coded_comment_list_value_designator_);
  }
  if (from.has_coded_comment_list_value_id()) {
    mutable_coded_comment_list_value_id()->::efdi::UID::MergeFrom(from.coded_comment_list_value_id());
  }
}

void CodedCommentListValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CodedCommentListValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodedCommentListValue::CopyFrom(const CodedCommentListValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CodedCommentListValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodedCommentListValue::IsInitialized() const {
  return true;
}

void CodedCommentListValue::Swap(CodedCommentListValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodedCommentListValue::InternalSwap(CodedCommentListValue* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  coded_comment_list_value_designator_.Swap(&other->coded_comment_list_value_designator_);
  swap(coded_comment_list_value_id_, other->coded_comment_list_value_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodedCommentListValue::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColourLegend::InitAsDefaultInstance() {
  ::efdi::_ColourLegend_default_instance_._instance.get_mutable()->colour_legend_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ColourLegend::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColourLegend::kColourLegendIdFieldNumber;
const int ColourLegend::kDefaultColourFieldNumber;
const int ColourLegend::kColourRangeFieldNumber;
const int ColourLegend::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColourLegend::ColourLegend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourLegend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ColourLegend)
}
ColourLegend::ColourLegend(const ColourLegend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      colour_range_(from.colour_range_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_colour_legend_id()) {
    colour_legend_id_ = new ::efdi::UID(*from.colour_legend_id_);
  } else {
    colour_legend_id_ = NULL;
  }
  default_colour_ = from.default_colour_;
  // @@protoc_insertion_point(copy_constructor:efdi.ColourLegend)
}

void ColourLegend::SharedCtor() {
  ::memset(&colour_legend_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_colour_) -
      reinterpret_cast<char*>(&colour_legend_id_)) + sizeof(default_colour_));
  _cached_size_ = 0;
}

ColourLegend::~ColourLegend() {
  // @@protoc_insertion_point(destructor:efdi.ColourLegend)
  SharedDtor();
}

void ColourLegend::SharedDtor() {
  if (this != internal_default_instance()) delete colour_legend_id_;
}

void ColourLegend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColourLegend::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColourLegend& ColourLegend::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourLegend();
  return *internal_default_instance();
}

ColourLegend* ColourLegend::New(::google::protobuf::Arena* arena) const {
  ColourLegend* n = new ColourLegend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColourLegend::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ColourLegend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  colour_range_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && colour_legend_id_ != NULL) {
    delete colour_legend_id_;
  }
  colour_legend_id_ = NULL;
  default_colour_ = 0u;
  _internal_metadata_.Clear();
}

bool ColourLegend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ColourLegend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID colour_legend_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colour_legend_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 default_colour = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ColourRange colour_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_colour_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ColourLegend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ColourLegend)
  return false;
#undef DO_
}

void ColourLegend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ColourLegend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID colour_legend_id = 1;
  if (this->has_colour_legend_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->colour_legend_id_, output);
  }

  // uint32 default_colour = 2;
  if (this->default_colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->default_colour(), output);
  }

  // repeated .efdi.ColourRange colour_range = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colour_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->colour_range(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ColourLegend)
}

::google::protobuf::uint8* ColourLegend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ColourLegend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID colour_legend_id = 1;
  if (this->has_colour_legend_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->colour_legend_id_, deterministic, target);
  }

  // uint32 default_colour = 2;
  if (this->default_colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->default_colour(), target);
  }

  // repeated .efdi.ColourRange colour_range = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colour_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->colour_range(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ColourLegend)
  return target;
}

size_t ColourLegend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ColourLegend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.ColourRange colour_range = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->colour_range_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->colour_range(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID colour_legend_id = 1;
  if (this->has_colour_legend_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->colour_legend_id_);
  }

  // uint32 default_colour = 2;
  if (this->default_colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->default_colour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColourLegend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ColourLegend)
  GOOGLE_DCHECK_NE(&from, this);
  const ColourLegend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColourLegend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ColourLegend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ColourLegend)
    MergeFrom(*source);
  }
}

void ColourLegend::MergeFrom(const ColourLegend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ColourLegend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  colour_range_.MergeFrom(from.colour_range_);
  extension_.MergeFrom(from.extension_);
  if (from.has_colour_legend_id()) {
    mutable_colour_legend_id()->::efdi::UID::MergeFrom(from.colour_legend_id());
  }
  if (from.default_colour() != 0) {
    set_default_colour(from.default_colour());
  }
}

void ColourLegend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ColourLegend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColourLegend::CopyFrom(const ColourLegend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ColourLegend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColourLegend::IsInitialized() const {
  return true;
}

void ColourLegend::Swap(ColourLegend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColourLegend::InternalSwap(ColourLegend* other) {
  using std::swap;
  colour_range_.InternalSwap(&other->colour_range_);
  extension_.InternalSwap(&other->extension_);
  swap(colour_legend_id_, other->colour_legend_id_);
  swap(default_colour_, other->default_colour_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColourLegend::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColourRange::InitAsDefaultInstance() {
}
void ColourRange::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColourRange::kMinimumValueFieldNumber;
const int ColourRange::kMaximumValueFieldNumber;
const int ColourRange::kColourFieldNumber;
const int ColourRange::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColourRange::ColourRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ColourRange)
}
ColourRange::ColourRange(const ColourRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minimum_value_, &from.minimum_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&colour_) -
    reinterpret_cast<char*>(&minimum_value_)) + sizeof(colour_));
  // @@protoc_insertion_point(copy_constructor:efdi.ColourRange)
}

void ColourRange::SharedCtor() {
  ::memset(&minimum_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colour_) -
      reinterpret_cast<char*>(&minimum_value_)) + sizeof(colour_));
  _cached_size_ = 0;
}

ColourRange::~ColourRange() {
  // @@protoc_insertion_point(destructor:efdi.ColourRange)
  SharedDtor();
}

void ColourRange::SharedDtor() {
}

void ColourRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColourRange::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColourRange& ColourRange::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsColourRange();
  return *internal_default_instance();
}

ColourRange* ColourRange::New(::google::protobuf::Arena* arena) const {
  ColourRange* n = new ColourRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColourRange::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ColourRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  ::memset(&minimum_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colour_) -
      reinterpret_cast<char*>(&minimum_value_)) + sizeof(colour_));
  _internal_metadata_.Clear();
}

bool ColourRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ColourRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 minimum_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &minimum_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 maximum_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &maximum_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 colour = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ColourRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ColourRange)
  return false;
#undef DO_
}

void ColourRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ColourRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 minimum_value = 1;
  if (this->minimum_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->minimum_value(), output);
  }

  // sint64 maximum_value = 2;
  if (this->maximum_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->maximum_value(), output);
  }

  // uint32 colour = 3;
  if (this->colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->colour(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ColourRange)
}

::google::protobuf::uint8* ColourRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ColourRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 minimum_value = 1;
  if (this->minimum_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->minimum_value(), target);
  }

  // sint64 maximum_value = 2;
  if (this->maximum_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->maximum_value(), target);
  }

  // uint32 colour = 3;
  if (this->colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->colour(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ColourRange)
  return target;
}

size_t ColourRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ColourRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // sint64 minimum_value = 1;
  if (this->minimum_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->minimum_value());
  }

  // sint64 maximum_value = 2;
  if (this->maximum_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->maximum_value());
  }

  // uint32 colour = 3;
  if (this->colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->colour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColourRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ColourRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ColourRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColourRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ColourRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ColourRange)
    MergeFrom(*source);
  }
}

void ColourRange::MergeFrom(const ColourRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ColourRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.minimum_value() != 0) {
    set_minimum_value(from.minimum_value());
  }
  if (from.maximum_value() != 0) {
    set_maximum_value(from.maximum_value());
  }
  if (from.colour() != 0) {
    set_colour(from.colour());
  }
}

void ColourRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ColourRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColourRange::CopyFrom(const ColourRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ColourRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColourRange::IsInitialized() const {
  return true;
}

void ColourRange::Swap(ColourRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColourRange::InternalSwap(ColourRange* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(minimum_value_, other->minimum_value_);
  swap(maximum_value_, other->maximum_value_);
  swap(colour_, other->colour_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColourRange::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommentAllocation::InitAsDefaultInstance() {
  ::efdi::_CommentAllocation_default_instance_._instance.get_mutable()->coded_comment_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_CommentAllocation_default_instance_._instance.get_mutable()->coded_comment_list_value_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_CommentAllocation_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void CommentAllocation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommentAllocation::kCodedCommentIdRefFieldNumber;
const int CommentAllocation::kCodedCommentListValueFieldNumber;
const int CommentAllocation::kFreeCommentTextFieldNumber;
const int CommentAllocation::kAllocationStampFieldNumber;
const int CommentAllocation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommentAllocation::CommentAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCommentAllocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CommentAllocation)
}
CommentAllocation::CommentAllocation(const CommentAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  free_comment_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.free_comment_text().size() > 0) {
    free_comment_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.free_comment_text_);
  }
  if (from.has_coded_comment_id_ref()) {
    coded_comment_id_ref_ = new ::efdi::UID(*from.coded_comment_id_ref_);
  } else {
    coded_comment_id_ref_ = NULL;
  }
  if (from.has_coded_comment_list_value()) {
    coded_comment_list_value_ = new ::efdi::UID(*from.coded_comment_list_value_);
  } else {
    coded_comment_list_value_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CommentAllocation)
}

void CommentAllocation::SharedCtor() {
  free_comment_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coded_comment_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allocation_stamp_) -
      reinterpret_cast<char*>(&coded_comment_id_ref_)) + sizeof(allocation_stamp_));
  _cached_size_ = 0;
}

CommentAllocation::~CommentAllocation() {
  // @@protoc_insertion_point(destructor:efdi.CommentAllocation)
  SharedDtor();
}

void CommentAllocation::SharedDtor() {
  free_comment_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coded_comment_id_ref_;
  if (this != internal_default_instance()) delete coded_comment_list_value_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void CommentAllocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommentAllocation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommentAllocation& CommentAllocation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCommentAllocation();
  return *internal_default_instance();
}

CommentAllocation* CommentAllocation::New(::google::protobuf::Arena* arena) const {
  CommentAllocation* n = new CommentAllocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommentAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CommentAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  free_comment_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coded_comment_id_ref_ != NULL) {
    delete coded_comment_id_ref_;
  }
  coded_comment_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && coded_comment_list_value_ != NULL) {
    delete coded_comment_list_value_;
  }
  coded_comment_list_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  _internal_metadata_.Clear();
}

bool CommentAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CommentAllocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID coded_comment_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID coded_comment_list_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coded_comment_list_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string free_comment_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_free_comment_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->free_comment_text().data(), static_cast<int>(this->free_comment_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CommentAllocation.free_comment_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CommentAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CommentAllocation)
  return false;
#undef DO_
}

void CommentAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CommentAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_id_ref = 1;
  if (this->has_coded_comment_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coded_comment_id_ref_, output);
  }

  // .efdi.UID coded_comment_list_value = 2;
  if (this->has_coded_comment_list_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->coded_comment_list_value_, output);
  }

  // string free_comment_text = 3;
  if (this->free_comment_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->free_comment_text().data(), static_cast<int>(this->free_comment_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CommentAllocation.free_comment_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->free_comment_text(), output);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CommentAllocation)
}

::google::protobuf::uint8* CommentAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CommentAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID coded_comment_id_ref = 1;
  if (this->has_coded_comment_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coded_comment_id_ref_, deterministic, target);
  }

  // .efdi.UID coded_comment_list_value = 2;
  if (this->has_coded_comment_list_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->coded_comment_list_value_, deterministic, target);
  }

  // string free_comment_text = 3;
  if (this->free_comment_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->free_comment_text().data(), static_cast<int>(this->free_comment_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CommentAllocation.free_comment_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->free_comment_text(), target);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CommentAllocation)
  return target;
}

size_t CommentAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CommentAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string free_comment_text = 3;
  if (this->free_comment_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->free_comment_text());
  }

  // .efdi.UID coded_comment_id_ref = 1;
  if (this->has_coded_comment_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_id_ref_);
  }

  // .efdi.UID coded_comment_list_value = 2;
  if (this->has_coded_comment_list_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coded_comment_list_value_);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommentAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CommentAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CommentAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommentAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CommentAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CommentAllocation)
    MergeFrom(*source);
  }
}

void CommentAllocation::MergeFrom(const CommentAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CommentAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.free_comment_text().size() > 0) {

    free_comment_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.free_comment_text_);
  }
  if (from.has_coded_comment_id_ref()) {
    mutable_coded_comment_id_ref()->::efdi::UID::MergeFrom(from.coded_comment_id_ref());
  }
  if (from.has_coded_comment_list_value()) {
    mutable_coded_comment_list_value()->::efdi::UID::MergeFrom(from.coded_comment_list_value());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
}

void CommentAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CommentAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommentAllocation::CopyFrom(const CommentAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CommentAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommentAllocation::IsInitialized() const {
  return true;
}

void CommentAllocation::Swap(CommentAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommentAllocation::InternalSwap(CommentAllocation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  free_comment_text_.Swap(&other->free_comment_text_);
  swap(coded_comment_id_ref_, other->coded_comment_id_ref_);
  swap(coded_comment_list_value_, other->coded_comment_list_value_);
  swap(allocation_stamp_, other->allocation_stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommentAllocation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Connection::InitAsDefaultInstance() {
  ::efdi::_Connection_default_instance_._instance.get_mutable()->device_id_ref_0_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Connection_default_instance_._instance.get_mutable()->device_element_id_ref_0_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Connection_default_instance_._instance.get_mutable()->device_id_ref_1_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Connection_default_instance_._instance.get_mutable()->device_element_id_ref_1_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Connection::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Connection::kDeviceIdRef0FieldNumber;
const int Connection::kDeviceElementIdRef0FieldNumber;
const int Connection::kDeviceIdRef1FieldNumber;
const int Connection::kDeviceElementIdRef1FieldNumber;
const int Connection::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Connection::Connection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsConnection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Connection)
}
Connection::Connection(const Connection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_id_ref_0()) {
    device_id_ref_0_ = new ::efdi::UID(*from.device_id_ref_0_);
  } else {
    device_id_ref_0_ = NULL;
  }
  if (from.has_device_element_id_ref_0()) {
    device_element_id_ref_0_ = new ::efdi::UID(*from.device_element_id_ref_0_);
  } else {
    device_element_id_ref_0_ = NULL;
  }
  if (from.has_device_id_ref_1()) {
    device_id_ref_1_ = new ::efdi::UID(*from.device_id_ref_1_);
  } else {
    device_id_ref_1_ = NULL;
  }
  if (from.has_device_element_id_ref_1()) {
    device_element_id_ref_1_ = new ::efdi::UID(*from.device_element_id_ref_1_);
  } else {
    device_element_id_ref_1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.Connection)
}

void Connection::SharedCtor() {
  ::memset(&device_id_ref_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_element_id_ref_1_) -
      reinterpret_cast<char*>(&device_id_ref_0_)) + sizeof(device_element_id_ref_1_));
  _cached_size_ = 0;
}

Connection::~Connection() {
  // @@protoc_insertion_point(destructor:efdi.Connection)
  SharedDtor();
}

void Connection::SharedDtor() {
  if (this != internal_default_instance()) delete device_id_ref_0_;
  if (this != internal_default_instance()) delete device_element_id_ref_0_;
  if (this != internal_default_instance()) delete device_id_ref_1_;
  if (this != internal_default_instance()) delete device_element_id_ref_1_;
}

void Connection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Connection::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Connection& Connection::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsConnection();
  return *internal_default_instance();
}

Connection* Connection::New(::google::protobuf::Arena* arena) const {
  Connection* n = new Connection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Connection::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && device_id_ref_0_ != NULL) {
    delete device_id_ref_0_;
  }
  device_id_ref_0_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_0_ != NULL) {
    delete device_element_id_ref_0_;
  }
  device_element_id_ref_0_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_id_ref_1_ != NULL) {
    delete device_id_ref_1_;
  }
  device_id_ref_1_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_1_ != NULL) {
    delete device_element_id_ref_1_;
  }
  device_element_id_ref_1_ = NULL;
  _internal_metadata_.Clear();
}

bool Connection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Connection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID device_id_ref_0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_id_ref_0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref_0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_id_ref_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_id_ref_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref_1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Connection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Connection)
  return false;
#undef DO_
}

void Connection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_id_ref_0 = 1;
  if (this->has_device_id_ref_0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->device_id_ref_0_, output);
  }

  // .efdi.UID device_element_id_ref_0 = 2;
  if (this->has_device_element_id_ref_0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->device_element_id_ref_0_, output);
  }

  // .efdi.UID device_id_ref_1 = 3;
  if (this->has_device_id_ref_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->device_id_ref_1_, output);
  }

  // .efdi.UID device_element_id_ref_1 = 4;
  if (this->has_device_element_id_ref_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->device_element_id_ref_1_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Connection)
}

::google::protobuf::uint8* Connection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_id_ref_0 = 1;
  if (this->has_device_id_ref_0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->device_id_ref_0_, deterministic, target);
  }

  // .efdi.UID device_element_id_ref_0 = 2;
  if (this->has_device_element_id_ref_0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->device_element_id_ref_0_, deterministic, target);
  }

  // .efdi.UID device_id_ref_1 = 3;
  if (this->has_device_id_ref_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->device_id_ref_1_, deterministic, target);
  }

  // .efdi.UID device_element_id_ref_1 = 4;
  if (this->has_device_element_id_ref_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->device_element_id_ref_1_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Connection)
  return target;
}

size_t Connection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Connection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID device_id_ref_0 = 1;
  if (this->has_device_id_ref_0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_id_ref_0_);
  }

  // .efdi.UID device_element_id_ref_0 = 2;
  if (this->has_device_element_id_ref_0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_0_);
  }

  // .efdi.UID device_id_ref_1 = 3;
  if (this->has_device_id_ref_1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_id_ref_1_);
  }

  // .efdi.UID device_element_id_ref_1 = 4;
  if (this->has_device_element_id_ref_1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Connection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Connection)
  GOOGLE_DCHECK_NE(&from, this);
  const Connection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Connection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Connection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Connection)
    MergeFrom(*source);
  }
}

void Connection::MergeFrom(const Connection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Connection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_device_id_ref_0()) {
    mutable_device_id_ref_0()->::efdi::UID::MergeFrom(from.device_id_ref_0());
  }
  if (from.has_device_element_id_ref_0()) {
    mutable_device_element_id_ref_0()->::efdi::UID::MergeFrom(from.device_element_id_ref_0());
  }
  if (from.has_device_id_ref_1()) {
    mutable_device_id_ref_1()->::efdi::UID::MergeFrom(from.device_id_ref_1());
  }
  if (from.has_device_element_id_ref_1()) {
    mutable_device_element_id_ref_1()->::efdi::UID::MergeFrom(from.device_element_id_ref_1());
  }
}

void Connection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Connection::CopyFrom(const Connection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Connection::IsInitialized() const {
  return true;
}

void Connection::Swap(Connection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Connection::InternalSwap(Connection* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(device_id_ref_0_, other->device_id_ref_0_);
  swap(device_element_id_ref_0_, other->device_element_id_ref_0_);
  swap(device_id_ref_1_, other->device_id_ref_1_);
  swap(device_element_id_ref_1_, other->device_element_id_ref_1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Connection::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControlAssignment::InitAsDefaultInstance() {
  ::efdi::_ControlAssignment_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void ControlAssignment::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlAssignment::kSourceClientNameFieldNumber;
const int ControlAssignment::kUserClientNameFieldNumber;
const int ControlAssignment::kSourceDeviceStructureLabelFieldNumber;
const int ControlAssignment::kUserDeviceStructureLabelFieldNumber;
const int ControlAssignment::kSourceDeviceElementNumberFieldNumber;
const int ControlAssignment::kUserDeviceElementNumberFieldNumber;
const int ControlAssignment::kProcessDataDdiFieldNumber;
const int ControlAssignment::kAllocationStampFieldNumber;
const int ControlAssignment::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlAssignment::ControlAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsControlAssignment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ControlAssignment)
}
ControlAssignment::ControlAssignment(const ControlAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_client_name().size() > 0) {
    source_client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_client_name_);
  }
  user_client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_name().size() > 0) {
    user_client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_name_);
  }
  source_device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_device_structure_label().size() > 0) {
    source_device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_device_structure_label_);
  }
  user_device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_device_structure_label().size() > 0) {
    user_device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_device_structure_label_);
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  ::memcpy(&source_device_element_number_, &from.source_device_element_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&process_data_ddi_) -
    reinterpret_cast<char*>(&source_device_element_number_)) + sizeof(process_data_ddi_));
  // @@protoc_insertion_point(copy_constructor:efdi.ControlAssignment)
}

void ControlAssignment::SharedCtor() {
  source_client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allocation_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_data_ddi_) -
      reinterpret_cast<char*>(&allocation_stamp_)) + sizeof(process_data_ddi_));
  _cached_size_ = 0;
}

ControlAssignment::~ControlAssignment() {
  // @@protoc_insertion_point(destructor:efdi.ControlAssignment)
  SharedDtor();
}

void ControlAssignment::SharedDtor() {
  source_client_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_device_structure_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_device_structure_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void ControlAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlAssignment::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControlAssignment& ControlAssignment::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsControlAssignment();
  return *internal_default_instance();
}

ControlAssignment* ControlAssignment::New(::google::protobuf::Arena* arena) const {
  ControlAssignment* n = new ControlAssignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ControlAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  source_client_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_device_structure_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_device_structure_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  ::memset(&source_device_element_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_data_ddi_) -
      reinterpret_cast<char*>(&source_device_element_number_)) + sizeof(process_data_ddi_));
  _internal_metadata_.Clear();
}

bool ControlAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ControlAssignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes source_client_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source_client_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes user_client_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_client_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes source_device_structure_label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source_device_structure_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes user_device_structure_label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_device_structure_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_device_element_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_device_element_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_device_element_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_device_element_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 process_data_ddi = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_data_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ControlAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ControlAssignment)
  return false;
#undef DO_
}

void ControlAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ControlAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes source_client_name = 1;
  if (this->source_client_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->source_client_name(), output);
  }

  // bytes user_client_name = 2;
  if (this->user_client_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->user_client_name(), output);
  }

  // bytes source_device_structure_label = 3;
  if (this->source_device_structure_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->source_device_structure_label(), output);
  }

  // bytes user_device_structure_label = 4;
  if (this->user_device_structure_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->user_device_structure_label(), output);
  }

  // uint32 source_device_element_number = 5;
  if (this->source_device_element_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->source_device_element_number(), output);
  }

  // uint32 user_device_element_number = 6;
  if (this->user_device_element_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->user_device_element_number(), output);
  }

  // uint32 process_data_ddi = 7;
  if (this->process_data_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->process_data_ddi(), output);
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ControlAssignment)
}

::google::protobuf::uint8* ControlAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ControlAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes source_client_name = 1;
  if (this->source_client_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->source_client_name(), target);
  }

  // bytes user_client_name = 2;
  if (this->user_client_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->user_client_name(), target);
  }

  // bytes source_device_structure_label = 3;
  if (this->source_device_structure_label().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->source_device_structure_label(), target);
  }

  // bytes user_device_structure_label = 4;
  if (this->user_device_structure_label().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->user_device_structure_label(), target);
  }

  // uint32 source_device_element_number = 5;
  if (this->source_device_element_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->source_device_element_number(), target);
  }

  // uint32 user_device_element_number = 6;
  if (this->user_device_element_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->user_device_element_number(), target);
  }

  // uint32 process_data_ddi = 7;
  if (this->process_data_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->process_data_ddi(), target);
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ControlAssignment)
  return target;
}

size_t ControlAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ControlAssignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // bytes source_client_name = 1;
  if (this->source_client_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source_client_name());
  }

  // bytes user_client_name = 2;
  if (this->user_client_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->user_client_name());
  }

  // bytes source_device_structure_label = 3;
  if (this->source_device_structure_label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source_device_structure_label());
  }

  // bytes user_device_structure_label = 4;
  if (this->user_device_structure_label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->user_device_structure_label());
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  // uint32 source_device_element_number = 5;
  if (this->source_device_element_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_device_element_number());
  }

  // uint32 user_device_element_number = 6;
  if (this->user_device_element_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_device_element_number());
  }

  // uint32 process_data_ddi = 7;
  if (this->process_data_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->process_data_ddi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ControlAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ControlAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ControlAssignment)
    MergeFrom(*source);
  }
}

void ControlAssignment::MergeFrom(const ControlAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ControlAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.source_client_name().size() > 0) {

    source_client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_client_name_);
  }
  if (from.user_client_name().size() > 0) {

    user_client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_name_);
  }
  if (from.source_device_structure_label().size() > 0) {

    source_device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_device_structure_label_);
  }
  if (from.user_device_structure_label().size() > 0) {

    user_device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_device_structure_label_);
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
  if (from.source_device_element_number() != 0) {
    set_source_device_element_number(from.source_device_element_number());
  }
  if (from.user_device_element_number() != 0) {
    set_user_device_element_number(from.user_device_element_number());
  }
  if (from.process_data_ddi() != 0) {
    set_process_data_ddi(from.process_data_ddi());
  }
}

void ControlAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ControlAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlAssignment::CopyFrom(const ControlAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ControlAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlAssignment::IsInitialized() const {
  return true;
}

void ControlAssignment::Swap(ControlAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlAssignment::InternalSwap(ControlAssignment* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  source_client_name_.Swap(&other->source_client_name_);
  user_client_name_.Swap(&other->user_client_name_);
  source_device_structure_label_.Swap(&other->source_device_structure_label_);
  user_device_structure_label_.Swap(&other->user_device_structure_label_);
  swap(allocation_stamp_, other->allocation_stamp_);
  swap(source_device_element_number_, other->source_device_element_number_);
  swap(user_device_element_number_, other->user_device_element_number_);
  swap(process_data_ddi_, other->process_data_ddi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlAssignment::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CropType::InitAsDefaultInstance() {
  ::efdi::_CropType_default_instance_._instance.get_mutable()->crop_type_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_CropType_default_instance_._instance.get_mutable()->product_group_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void CropType::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CropType::kCropTypeIdFieldNumber;
const int CropType::kCropTypeDesignatorFieldNumber;
const int CropType::kProductGroupIdRefFieldNumber;
const int CropType::kCropVarietyFieldNumber;
const int CropType::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CropType::CropType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CropType)
}
CropType::CropType(const CropType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      crop_variety_(from.crop_variety_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crop_type_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crop_type_designator().size() > 0) {
    crop_type_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crop_type_designator_);
  }
  if (from.has_crop_type_id()) {
    crop_type_id_ = new ::efdi::UID(*from.crop_type_id_);
  } else {
    crop_type_id_ = NULL;
  }
  if (from.has_product_group_id_ref()) {
    product_group_id_ref_ = new ::efdi::UID(*from.product_group_id_ref_);
  } else {
    product_group_id_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CropType)
}

void CropType::SharedCtor() {
  crop_type_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&crop_type_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_group_id_ref_) -
      reinterpret_cast<char*>(&crop_type_id_)) + sizeof(product_group_id_ref_));
  _cached_size_ = 0;
}

CropType::~CropType() {
  // @@protoc_insertion_point(destructor:efdi.CropType)
  SharedDtor();
}

void CropType::SharedDtor() {
  crop_type_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete crop_type_id_;
  if (this != internal_default_instance()) delete product_group_id_ref_;
}

void CropType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CropType::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CropType& CropType::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropType();
  return *internal_default_instance();
}

CropType* CropType::New(::google::protobuf::Arena* arena) const {
  CropType* n = new CropType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CropType::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CropType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crop_variety_.Clear();
  extension_.Clear();
  crop_type_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && crop_type_id_ != NULL) {
    delete crop_type_id_;
  }
  crop_type_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_group_id_ref_ != NULL) {
    delete product_group_id_ref_;
  }
  product_group_id_ref_ = NULL;
  _internal_metadata_.Clear();
}

bool CropType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CropType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID crop_type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_type_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crop_type_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crop_type_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crop_type_designator().data(), static_cast<int>(this->crop_type_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CropType.crop_type_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID product_group_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_group_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CropVariety crop_variety = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_crop_variety()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CropType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CropType)
  return false;
#undef DO_
}

void CropType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CropType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID crop_type_id = 1;
  if (this->has_crop_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->crop_type_id_, output);
  }

  // string crop_type_designator = 2;
  if (this->crop_type_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crop_type_designator().data(), static_cast<int>(this->crop_type_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CropType.crop_type_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->crop_type_designator(), output);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->product_group_id_ref_, output);
  }

  // repeated .efdi.CropVariety crop_variety = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_variety_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->crop_variety(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CropType)
}

::google::protobuf::uint8* CropType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CropType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID crop_type_id = 1;
  if (this->has_crop_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->crop_type_id_, deterministic, target);
  }

  // string crop_type_designator = 2;
  if (this->crop_type_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crop_type_designator().data(), static_cast<int>(this->crop_type_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CropType.crop_type_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->crop_type_designator(), target);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->product_group_id_ref_, deterministic, target);
  }

  // repeated .efdi.CropVariety crop_variety = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_variety_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->crop_variety(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CropType)
  return target;
}

size_t CropType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CropType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.CropVariety crop_variety = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->crop_variety_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crop_variety(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string crop_type_designator = 2;
  if (this->crop_type_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crop_type_designator());
  }

  // .efdi.UID crop_type_id = 1;
  if (this->has_crop_type_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->crop_type_id_);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_group_id_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CropType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CropType)
  GOOGLE_DCHECK_NE(&from, this);
  const CropType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CropType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CropType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CropType)
    MergeFrom(*source);
  }
}

void CropType::MergeFrom(const CropType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CropType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crop_variety_.MergeFrom(from.crop_variety_);
  extension_.MergeFrom(from.extension_);
  if (from.crop_type_designator().size() > 0) {

    crop_type_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crop_type_designator_);
  }
  if (from.has_crop_type_id()) {
    mutable_crop_type_id()->::efdi::UID::MergeFrom(from.crop_type_id());
  }
  if (from.has_product_group_id_ref()) {
    mutable_product_group_id_ref()->::efdi::UID::MergeFrom(from.product_group_id_ref());
  }
}

void CropType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CropType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropType::CopyFrom(const CropType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CropType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropType::IsInitialized() const {
  return true;
}

void CropType::Swap(CropType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CropType::InternalSwap(CropType* other) {
  using std::swap;
  crop_variety_.InternalSwap(&other->crop_variety_);
  extension_.InternalSwap(&other->extension_);
  crop_type_designator_.Swap(&other->crop_type_designator_);
  swap(crop_type_id_, other->crop_type_id_);
  swap(product_group_id_ref_, other->product_group_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CropType::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CropVariety::InitAsDefaultInstance() {
  ::efdi::_CropVariety_default_instance_._instance.get_mutable()->crop_variety_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_CropVariety_default_instance_._instance.get_mutable()->product_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void CropVariety::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CropVariety::kCropVarietyIdFieldNumber;
const int CropVariety::kCropVarietyDesignatorFieldNumber;
const int CropVariety::kProductIdRefFieldNumber;
const int CropVariety::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CropVariety::CropVariety()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropVariety();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CropVariety)
}
CropVariety::CropVariety(const CropVariety& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crop_variety_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crop_variety_designator().size() > 0) {
    crop_variety_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crop_variety_designator_);
  }
  if (from.has_crop_variety_id()) {
    crop_variety_id_ = new ::efdi::UID(*from.crop_variety_id_);
  } else {
    crop_variety_id_ = NULL;
  }
  if (from.has_product_id_ref()) {
    product_id_ref_ = new ::efdi::UID(*from.product_id_ref_);
  } else {
    product_id_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CropVariety)
}

void CropVariety::SharedCtor() {
  crop_variety_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&crop_variety_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_id_ref_) -
      reinterpret_cast<char*>(&crop_variety_id_)) + sizeof(product_id_ref_));
  _cached_size_ = 0;
}

CropVariety::~CropVariety() {
  // @@protoc_insertion_point(destructor:efdi.CropVariety)
  SharedDtor();
}

void CropVariety::SharedDtor() {
  crop_variety_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete crop_variety_id_;
  if (this != internal_default_instance()) delete product_id_ref_;
}

void CropVariety::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CropVariety::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CropVariety& CropVariety::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCropVariety();
  return *internal_default_instance();
}

CropVariety* CropVariety::New(::google::protobuf::Arena* arena) const {
  CropVariety* n = new CropVariety;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CropVariety::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CropVariety)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  crop_variety_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && crop_variety_id_ != NULL) {
    delete crop_variety_id_;
  }
  crop_variety_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_id_ref_ != NULL) {
    delete product_id_ref_;
  }
  product_id_ref_ = NULL;
  _internal_metadata_.Clear();
}

bool CropVariety::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CropVariety)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID crop_variety_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_variety_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crop_variety_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crop_variety_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crop_variety_designator().data(), static_cast<int>(this->crop_variety_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CropVariety.crop_variety_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID product_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CropVariety)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CropVariety)
  return false;
#undef DO_
}

void CropVariety::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CropVariety)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID crop_variety_id = 1;
  if (this->has_crop_variety_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->crop_variety_id_, output);
  }

  // string crop_variety_designator = 2;
  if (this->crop_variety_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crop_variety_designator().data(), static_cast<int>(this->crop_variety_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CropVariety.crop_variety_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->crop_variety_designator(), output);
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->product_id_ref_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CropVariety)
}

::google::protobuf::uint8* CropVariety::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CropVariety)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID crop_variety_id = 1;
  if (this->has_crop_variety_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->crop_variety_id_, deterministic, target);
  }

  // string crop_variety_designator = 2;
  if (this->crop_variety_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crop_variety_designator().data(), static_cast<int>(this->crop_variety_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CropVariety.crop_variety_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->crop_variety_designator(), target);
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->product_id_ref_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CropVariety)
  return target;
}

size_t CropVariety::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CropVariety)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string crop_variety_designator = 2;
  if (this->crop_variety_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crop_variety_designator());
  }

  // .efdi.UID crop_variety_id = 1;
  if (this->has_crop_variety_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->crop_variety_id_);
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_id_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CropVariety::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CropVariety)
  GOOGLE_DCHECK_NE(&from, this);
  const CropVariety* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CropVariety>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CropVariety)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CropVariety)
    MergeFrom(*source);
  }
}

void CropVariety::MergeFrom(const CropVariety& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CropVariety)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.crop_variety_designator().size() > 0) {

    crop_variety_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crop_variety_designator_);
  }
  if (from.has_crop_variety_id()) {
    mutable_crop_variety_id()->::efdi::UID::MergeFrom(from.crop_variety_id());
  }
  if (from.has_product_id_ref()) {
    mutable_product_id_ref()->::efdi::UID::MergeFrom(from.product_id_ref());
  }
}

void CropVariety::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CropVariety)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CropVariety::CopyFrom(const CropVariety& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CropVariety)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CropVariety::IsInitialized() const {
  return true;
}

void CropVariety::Swap(CropVariety* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CropVariety::InternalSwap(CropVariety* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  crop_variety_designator_.Swap(&other->crop_variety_designator_);
  swap(crop_variety_id_, other->crop_variety_id_);
  swap(product_id_ref_, other->product_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CropVariety::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CulturalPractice::InitAsDefaultInstance() {
  ::efdi::_CulturalPractice_default_instance_._instance.get_mutable()->cultural_practice_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CulturalPractice::kCulturalPracticeIdFieldNumber;
const int CulturalPractice::kCulturalPracticeDesignatorFieldNumber;
const int CulturalPractice::kOperationTechniqueReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CulturalPractice::CulturalPractice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCulturalPractice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.CulturalPractice)
}
CulturalPractice::CulturalPractice(const CulturalPractice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operation_technique_reference_(from.operation_technique_reference_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cultural_practice_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cultural_practice_designator().size() > 0) {
    cultural_practice_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cultural_practice_designator_);
  }
  if (from.has_cultural_practice_id()) {
    cultural_practice_id_ = new ::efdi::UID(*from.cultural_practice_id_);
  } else {
    cultural_practice_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.CulturalPractice)
}

void CulturalPractice::SharedCtor() {
  cultural_practice_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cultural_practice_id_ = NULL;
  _cached_size_ = 0;
}

CulturalPractice::~CulturalPractice() {
  // @@protoc_insertion_point(destructor:efdi.CulturalPractice)
  SharedDtor();
}

void CulturalPractice::SharedDtor() {
  cultural_practice_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cultural_practice_id_;
}

void CulturalPractice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CulturalPractice::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CulturalPractice& CulturalPractice::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCulturalPractice();
  return *internal_default_instance();
}

CulturalPractice* CulturalPractice::New(::google::protobuf::Arena* arena) const {
  CulturalPractice* n = new CulturalPractice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CulturalPractice::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.CulturalPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_technique_reference_.Clear();
  cultural_practice_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cultural_practice_id_ != NULL) {
    delete cultural_practice_id_;
  }
  cultural_practice_id_ = NULL;
  _internal_metadata_.Clear();
}

bool CulturalPractice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.CulturalPractice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID cultural_practice_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cultural_practice_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cultural_practice_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cultural_practice_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cultural_practice_designator().data(), static_cast<int>(this->cultural_practice_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.CulturalPractice.cultural_practice_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.OperationTechniqueReference operation_technique_reference = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_operation_technique_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.CulturalPractice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.CulturalPractice)
  return false;
#undef DO_
}

void CulturalPractice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.CulturalPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID cultural_practice_id = 1;
  if (this->has_cultural_practice_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cultural_practice_id_, output);
  }

  // string cultural_practice_designator = 2;
  if (this->cultural_practice_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cultural_practice_designator().data(), static_cast<int>(this->cultural_practice_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CulturalPractice.cultural_practice_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cultural_practice_designator(), output);
  }

  // repeated .efdi.OperationTechniqueReference operation_technique_reference = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operation_technique_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->operation_technique_reference(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.CulturalPractice)
}

::google::protobuf::uint8* CulturalPractice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.CulturalPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID cultural_practice_id = 1;
  if (this->has_cultural_practice_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->cultural_practice_id_, deterministic, target);
  }

  // string cultural_practice_designator = 2;
  if (this->cultural_practice_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cultural_practice_designator().data(), static_cast<int>(this->cultural_practice_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.CulturalPractice.cultural_practice_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cultural_practice_designator(), target);
  }

  // repeated .efdi.OperationTechniqueReference operation_technique_reference = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operation_technique_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->operation_technique_reference(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.CulturalPractice)
  return target;
}

size_t CulturalPractice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.CulturalPractice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.OperationTechniqueReference operation_technique_reference = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->operation_technique_reference_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operation_technique_reference(static_cast<int>(i)));
    }
  }

  // string cultural_practice_designator = 2;
  if (this->cultural_practice_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cultural_practice_designator());
  }

  // .efdi.UID cultural_practice_id = 1;
  if (this->has_cultural_practice_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cultural_practice_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CulturalPractice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.CulturalPractice)
  GOOGLE_DCHECK_NE(&from, this);
  const CulturalPractice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CulturalPractice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.CulturalPractice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.CulturalPractice)
    MergeFrom(*source);
  }
}

void CulturalPractice::MergeFrom(const CulturalPractice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.CulturalPractice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operation_technique_reference_.MergeFrom(from.operation_technique_reference_);
  if (from.cultural_practice_designator().size() > 0) {

    cultural_practice_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cultural_practice_designator_);
  }
  if (from.has_cultural_practice_id()) {
    mutable_cultural_practice_id()->::efdi::UID::MergeFrom(from.cultural_practice_id());
  }
}

void CulturalPractice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.CulturalPractice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CulturalPractice::CopyFrom(const CulturalPractice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.CulturalPractice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CulturalPractice::IsInitialized() const {
  return true;
}

void CulturalPractice::Swap(CulturalPractice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CulturalPractice::InternalSwap(CulturalPractice* other) {
  using std::swap;
  operation_technique_reference_.InternalSwap(&other->operation_technique_reference_);
  cultural_practice_designator_.Swap(&other->cultural_practice_designator_);
  swap(cultural_practice_id_, other->cultural_practice_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CulturalPractice::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Customer::InitAsDefaultInstance() {
  ::efdi::_Customer_default_instance_._instance.get_mutable()->customer_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Customer::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Customer::kCustomerIdFieldNumber;
const int Customer::kCustomerLastNameFieldNumber;
const int Customer::kCustomerFirstNameFieldNumber;
const int Customer::kCustomerStreetFieldNumber;
const int Customer::kCustomerPoBoxFieldNumber;
const int Customer::kCustomerPostalCodeFieldNumber;
const int Customer::kCustomerCityFieldNumber;
const int Customer::kCustomerStateFieldNumber;
const int Customer::kCustomerCountryFieldNumber;
const int Customer::kCustomerPhoneFieldNumber;
const int Customer::kCustomerMobileFieldNumber;
const int Customer::kCustomerFaxFieldNumber;
const int Customer::kCustomerEmailFieldNumber;
const int Customer::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Customer::Customer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCustomer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Customer)
}
Customer::Customer(const Customer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  customer_last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_last_name().size() > 0) {
    customer_last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_last_name_);
  }
  customer_first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_first_name().size() > 0) {
    customer_first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_first_name_);
  }
  customer_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_street().size() > 0) {
    customer_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_street_);
  }
  customer_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_po_box().size() > 0) {
    customer_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_po_box_);
  }
  customer_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_postal_code().size() > 0) {
    customer_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_postal_code_);
  }
  customer_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_city().size() > 0) {
    customer_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_city_);
  }
  customer_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_state().size() > 0) {
    customer_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_state_);
  }
  customer_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_country().size() > 0) {
    customer_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_country_);
  }
  customer_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_phone().size() > 0) {
    customer_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_phone_);
  }
  customer_mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_mobile().size() > 0) {
    customer_mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_mobile_);
  }
  customer_fax_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_fax().size() > 0) {
    customer_fax_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_fax_);
  }
  customer_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer_email().size() > 0) {
    customer_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_email_);
  }
  if (from.has_customer_id()) {
    customer_id_ = new ::efdi::UID(*from.customer_id_);
  } else {
    customer_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.Customer)
}

void Customer::SharedCtor() {
  customer_last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_fax_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_id_ = NULL;
  _cached_size_ = 0;
}

Customer::~Customer() {
  // @@protoc_insertion_point(destructor:efdi.Customer)
  SharedDtor();
}

void Customer::SharedDtor() {
  customer_last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_po_box_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_fax_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_id_;
}

void Customer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Customer::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Customer& Customer::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsCustomer();
  return *internal_default_instance();
}

Customer* Customer::New(::google::protobuf::Arena* arena) const {
  Customer* n = new Customer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Customer::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  customer_last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_po_box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_fax_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && customer_id_ != NULL) {
    delete customer_id_;
  }
  customer_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Customer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Customer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID customer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_last_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_last_name().data(), static_cast<int>(this->customer_last_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_last_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_first_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_first_name().data(), static_cast<int>(this->customer_first_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_first_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_street = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_street()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_street().data(), static_cast<int>(this->customer_street().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_street"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_po_box = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_po_box()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_po_box().data(), static_cast<int>(this->customer_po_box().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_po_box"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_postal_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_postal_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_postal_code().data(), static_cast<int>(this->customer_postal_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_postal_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_city = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_city().data(), static_cast<int>(this->customer_city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_state = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_state().data(), static_cast<int>(this->customer_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_country = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_country().data(), static_cast<int>(this->customer_country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_phone().data(), static_cast<int>(this->customer_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_mobile = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_mobile().data(), static_cast<int>(this->customer_mobile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_fax = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_fax()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_fax().data(), static_cast<int>(this->customer_fax().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_fax"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string customer_email = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer_email().data(), static_cast<int>(this->customer_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Customer.customer_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Customer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Customer)
  return false;
#undef DO_
}

void Customer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID customer_id = 1;
  if (this->has_customer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->customer_id_, output);
  }

  // string customer_last_name = 2;
  if (this->customer_last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_last_name().data(), static_cast<int>(this->customer_last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->customer_last_name(), output);
  }

  // string customer_first_name = 3;
  if (this->customer_first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_first_name().data(), static_cast<int>(this->customer_first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->customer_first_name(), output);
  }

  // string customer_street = 4;
  if (this->customer_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_street().data(), static_cast<int>(this->customer_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->customer_street(), output);
  }

  // string customer_po_box = 5;
  if (this->customer_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_po_box().data(), static_cast<int>(this->customer_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_po_box");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->customer_po_box(), output);
  }

  // string customer_postal_code = 6;
  if (this->customer_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_postal_code().data(), static_cast<int>(this->customer_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_postal_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->customer_postal_code(), output);
  }

  // string customer_city = 7;
  if (this->customer_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_city().data(), static_cast<int>(this->customer_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->customer_city(), output);
  }

  // string customer_state = 8;
  if (this->customer_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_state().data(), static_cast<int>(this->customer_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->customer_state(), output);
  }

  // string customer_country = 9;
  if (this->customer_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_country().data(), static_cast<int>(this->customer_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->customer_country(), output);
  }

  // string customer_phone = 10;
  if (this->customer_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_phone().data(), static_cast<int>(this->customer_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->customer_phone(), output);
  }

  // string customer_mobile = 11;
  if (this->customer_mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_mobile().data(), static_cast<int>(this->customer_mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->customer_mobile(), output);
  }

  // string customer_fax = 12;
  if (this->customer_fax().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_fax().data(), static_cast<int>(this->customer_fax().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_fax");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->customer_fax(), output);
  }

  // string customer_email = 13;
  if (this->customer_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_email().data(), static_cast<int>(this->customer_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->customer_email(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Customer)
}

::google::protobuf::uint8* Customer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID customer_id = 1;
  if (this->has_customer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->customer_id_, deterministic, target);
  }

  // string customer_last_name = 2;
  if (this->customer_last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_last_name().data(), static_cast<int>(this->customer_last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->customer_last_name(), target);
  }

  // string customer_first_name = 3;
  if (this->customer_first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_first_name().data(), static_cast<int>(this->customer_first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->customer_first_name(), target);
  }

  // string customer_street = 4;
  if (this->customer_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_street().data(), static_cast<int>(this->customer_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->customer_street(), target);
  }

  // string customer_po_box = 5;
  if (this->customer_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_po_box().data(), static_cast<int>(this->customer_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_po_box");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->customer_po_box(), target);
  }

  // string customer_postal_code = 6;
  if (this->customer_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_postal_code().data(), static_cast<int>(this->customer_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_postal_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->customer_postal_code(), target);
  }

  // string customer_city = 7;
  if (this->customer_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_city().data(), static_cast<int>(this->customer_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->customer_city(), target);
  }

  // string customer_state = 8;
  if (this->customer_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_state().data(), static_cast<int>(this->customer_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customer_state(), target);
  }

  // string customer_country = 9;
  if (this->customer_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_country().data(), static_cast<int>(this->customer_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->customer_country(), target);
  }

  // string customer_phone = 10;
  if (this->customer_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_phone().data(), static_cast<int>(this->customer_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->customer_phone(), target);
  }

  // string customer_mobile = 11;
  if (this->customer_mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_mobile().data(), static_cast<int>(this->customer_mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->customer_mobile(), target);
  }

  // string customer_fax = 12;
  if (this->customer_fax().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_fax().data(), static_cast<int>(this->customer_fax().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_fax");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->customer_fax(), target);
  }

  // string customer_email = 13;
  if (this->customer_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer_email().data(), static_cast<int>(this->customer_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Customer.customer_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->customer_email(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Customer)
  return target;
}

size_t Customer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Customer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string customer_last_name = 2;
  if (this->customer_last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_last_name());
  }

  // string customer_first_name = 3;
  if (this->customer_first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_first_name());
  }

  // string customer_street = 4;
  if (this->customer_street().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_street());
  }

  // string customer_po_box = 5;
  if (this->customer_po_box().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_po_box());
  }

  // string customer_postal_code = 6;
  if (this->customer_postal_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_postal_code());
  }

  // string customer_city = 7;
  if (this->customer_city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_city());
  }

  // string customer_state = 8;
  if (this->customer_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_state());
  }

  // string customer_country = 9;
  if (this->customer_country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_country());
  }

  // string customer_phone = 10;
  if (this->customer_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_phone());
  }

  // string customer_mobile = 11;
  if (this->customer_mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_mobile());
  }

  // string customer_fax = 12;
  if (this->customer_fax().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_fax());
  }

  // string customer_email = 13;
  if (this->customer_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer_email());
  }

  // .efdi.UID customer_id = 1;
  if (this->has_customer_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->customer_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Customer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  const Customer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Customer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Customer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Customer)
    MergeFrom(*source);
  }
}

void Customer::MergeFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.customer_last_name().size() > 0) {

    customer_last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_last_name_);
  }
  if (from.customer_first_name().size() > 0) {

    customer_first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_first_name_);
  }
  if (from.customer_street().size() > 0) {

    customer_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_street_);
  }
  if (from.customer_po_box().size() > 0) {

    customer_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_po_box_);
  }
  if (from.customer_postal_code().size() > 0) {

    customer_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_postal_code_);
  }
  if (from.customer_city().size() > 0) {

    customer_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_city_);
  }
  if (from.customer_state().size() > 0) {

    customer_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_state_);
  }
  if (from.customer_country().size() > 0) {

    customer_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_country_);
  }
  if (from.customer_phone().size() > 0) {

    customer_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_phone_);
  }
  if (from.customer_mobile().size() > 0) {

    customer_mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_mobile_);
  }
  if (from.customer_fax().size() > 0) {

    customer_fax_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_fax_);
  }
  if (from.customer_email().size() > 0) {

    customer_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_email_);
  }
  if (from.has_customer_id()) {
    mutable_customer_id()->::efdi::UID::MergeFrom(from.customer_id());
  }
}

void Customer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Customer::CopyFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Customer::IsInitialized() const {
  return true;
}

void Customer::Swap(Customer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Customer::InternalSwap(Customer* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  customer_last_name_.Swap(&other->customer_last_name_);
  customer_first_name_.Swap(&other->customer_first_name_);
  customer_street_.Swap(&other->customer_street_);
  customer_po_box_.Swap(&other->customer_po_box_);
  customer_postal_code_.Swap(&other->customer_postal_code_);
  customer_city_.Swap(&other->customer_city_);
  customer_state_.Swap(&other->customer_state_);
  customer_country_.Swap(&other->customer_country_);
  customer_phone_.Swap(&other->customer_phone_);
  customer_mobile_.Swap(&other->customer_mobile_);
  customer_fax_.Swap(&other->customer_fax_);
  customer_email_.Swap(&other->customer_email_);
  swap(customer_id_, other->customer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Customer::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataLogTrigger::InitAsDefaultInstance() {
  ::efdi::_DataLogTrigger_default_instance_._instance.get_mutable()->device_element_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_DataLogTrigger_default_instance_._instance.get_mutable()->value_presentation_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void DataLogTrigger::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataLogTrigger::kDataLogDdiFieldNumber;
const int DataLogTrigger::kDataLogMethodFieldNumber;
const int DataLogTrigger::kDataLogDistanceIntervalFieldNumber;
const int DataLogTrigger::kDataLogTimeIntervalFieldNumber;
const int DataLogTrigger::kDataLogThresholdMinumumFieldNumber;
const int DataLogTrigger::kDataLogThresholdMaximumFieldNumber;
const int DataLogTrigger::kDataLogThresholdChangeFieldNumber;
const int DataLogTrigger::kDeviceElementIdRefFieldNumber;
const int DataLogTrigger::kValuePresentationIdRefFieldNumber;
const int DataLogTrigger::kDataLogPgnFieldNumber;
const int DataLogTrigger::kDataLogPgnStartBitFieldNumber;
const int DataLogTrigger::kDataLogPgnStopBitFieldNumber;
const int DataLogTrigger::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataLogTrigger::DataLogTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogTrigger();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DataLogTrigger)
}
DataLogTrigger::DataLogTrigger(const DataLogTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_element_id_ref()) {
    device_element_id_ref_ = new ::efdi::UID(*from.device_element_id_ref_);
  } else {
    device_element_id_ref_ = NULL;
  }
  if (from.has_value_presentation_id_ref()) {
    value_presentation_id_ref_ = new ::efdi::UID(*from.value_presentation_id_ref_);
  } else {
    value_presentation_id_ref_ = NULL;
  }
  ::memcpy(&data_log_ddi_, &from.data_log_ddi_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
    reinterpret_cast<char*>(&data_log_ddi_)) + sizeof(data_log_pgn_stop_bit_));
  // @@protoc_insertion_point(copy_constructor:efdi.DataLogTrigger)
}

void DataLogTrigger::SharedCtor() {
  ::memset(&device_element_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&device_element_id_ref_)) + sizeof(data_log_pgn_stop_bit_));
  _cached_size_ = 0;
}

DataLogTrigger::~DataLogTrigger() {
  // @@protoc_insertion_point(destructor:efdi.DataLogTrigger)
  SharedDtor();
}

void DataLogTrigger::SharedDtor() {
  if (this != internal_default_instance()) delete device_element_id_ref_;
  if (this != internal_default_instance()) delete value_presentation_id_ref_;
}

void DataLogTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLogTrigger::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataLogTrigger& DataLogTrigger::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogTrigger();
  return *internal_default_instance();
}

DataLogTrigger* DataLogTrigger::New(::google::protobuf::Arena* arena) const {
  DataLogTrigger* n = new DataLogTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataLogTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DataLogTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_ != NULL) {
    delete device_element_id_ref_;
  }
  device_element_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_presentation_id_ref_ != NULL) {
    delete value_presentation_id_ref_;
  }
  value_presentation_id_ref_ = NULL;
  ::memset(&data_log_ddi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&data_log_ddi_)) + sizeof(data_log_pgn_stop_bit_));
  _internal_metadata_.Clear();
}

bool DataLogTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DataLogTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data_log_ddi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_log_distance_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_log_distance_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_log_time_interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_log_time_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_log_threshold_minumum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_log_threshold_minumum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_log_threshold_maximum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_log_threshold_maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_log_threshold_change = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_log_threshold_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID value_presentation_id_ref = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_presentation_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_log_pgn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_log_pgn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_start_bit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_start_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_stop_bit = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_stop_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DataLogTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DataLogTrigger)
  return false;
#undef DO_
}

void DataLogTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DataLogTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_log_ddi = 1;
  if (this->data_log_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data_log_ddi(), output);
  }

  // uint32 data_log_method = 2;
  if (this->data_log_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_log_method(), output);
  }

  // sint64 data_log_distance_interval = 3;
  if (this->data_log_distance_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->data_log_distance_interval(), output);
  }

  // sint64 data_log_time_interval = 4;
  if (this->data_log_time_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->data_log_time_interval(), output);
  }

  // sint64 data_log_threshold_minumum = 5;
  if (this->data_log_threshold_minumum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->data_log_threshold_minumum(), output);
  }

  // sint64 data_log_threshold_maximum = 6;
  if (this->data_log_threshold_maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->data_log_threshold_maximum(), output);
  }

  // sint64 data_log_threshold_change = 7;
  if (this->data_log_threshold_change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->data_log_threshold_change(), output);
  }

  // .efdi.UID device_element_id_ref = 8;
  if (this->has_device_element_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->device_element_id_ref_, output);
  }

  // .efdi.UID value_presentation_id_ref = 9;
  if (this->has_value_presentation_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->value_presentation_id_ref_, output);
  }

  // uint64 data_log_pgn = 10;
  if (this->data_log_pgn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->data_log_pgn(), output);
  }

  // uint32 data_log_pgn_start_bit = 11;
  if (this->data_log_pgn_start_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->data_log_pgn_start_bit(), output);
  }

  // uint32 data_log_pgn_stop_bit = 12;
  if (this->data_log_pgn_stop_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->data_log_pgn_stop_bit(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DataLogTrigger)
}

::google::protobuf::uint8* DataLogTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DataLogTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_log_ddi = 1;
  if (this->data_log_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data_log_ddi(), target);
  }

  // uint32 data_log_method = 2;
  if (this->data_log_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_log_method(), target);
  }

  // sint64 data_log_distance_interval = 3;
  if (this->data_log_distance_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->data_log_distance_interval(), target);
  }

  // sint64 data_log_time_interval = 4;
  if (this->data_log_time_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->data_log_time_interval(), target);
  }

  // sint64 data_log_threshold_minumum = 5;
  if (this->data_log_threshold_minumum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->data_log_threshold_minumum(), target);
  }

  // sint64 data_log_threshold_maximum = 6;
  if (this->data_log_threshold_maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->data_log_threshold_maximum(), target);
  }

  // sint64 data_log_threshold_change = 7;
  if (this->data_log_threshold_change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->data_log_threshold_change(), target);
  }

  // .efdi.UID device_element_id_ref = 8;
  if (this->has_device_element_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->device_element_id_ref_, deterministic, target);
  }

  // .efdi.UID value_presentation_id_ref = 9;
  if (this->has_value_presentation_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->value_presentation_id_ref_, deterministic, target);
  }

  // uint64 data_log_pgn = 10;
  if (this->data_log_pgn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->data_log_pgn(), target);
  }

  // uint32 data_log_pgn_start_bit = 11;
  if (this->data_log_pgn_start_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->data_log_pgn_start_bit(), target);
  }

  // uint32 data_log_pgn_stop_bit = 12;
  if (this->data_log_pgn_stop_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->data_log_pgn_stop_bit(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DataLogTrigger)
  return target;
}

size_t DataLogTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DataLogTrigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID device_element_id_ref = 8;
  if (this->has_device_element_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_);
  }

  // .efdi.UID value_presentation_id_ref = 9;
  if (this->has_value_presentation_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_presentation_id_ref_);
  }

  // uint32 data_log_ddi = 1;
  if (this->data_log_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_ddi());
  }

  // uint32 data_log_method = 2;
  if (this->data_log_method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_method());
  }

  // sint64 data_log_distance_interval = 3;
  if (this->data_log_distance_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_log_distance_interval());
  }

  // sint64 data_log_time_interval = 4;
  if (this->data_log_time_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_log_time_interval());
  }

  // sint64 data_log_threshold_minumum = 5;
  if (this->data_log_threshold_minumum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_log_threshold_minumum());
  }

  // sint64 data_log_threshold_maximum = 6;
  if (this->data_log_threshold_maximum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_log_threshold_maximum());
  }

  // sint64 data_log_threshold_change = 7;
  if (this->data_log_threshold_change() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_log_threshold_change());
  }

  // uint64 data_log_pgn = 10;
  if (this->data_log_pgn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_log_pgn());
  }

  // uint32 data_log_pgn_start_bit = 11;
  if (this->data_log_pgn_start_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_start_bit());
  }

  // uint32 data_log_pgn_stop_bit = 12;
  if (this->data_log_pgn_stop_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_stop_bit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLogTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DataLogTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const DataLogTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataLogTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DataLogTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DataLogTrigger)
    MergeFrom(*source);
  }
}

void DataLogTrigger::MergeFrom(const DataLogTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DataLogTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_device_element_id_ref()) {
    mutable_device_element_id_ref()->::efdi::UID::MergeFrom(from.device_element_id_ref());
  }
  if (from.has_value_presentation_id_ref()) {
    mutable_value_presentation_id_ref()->::efdi::UID::MergeFrom(from.value_presentation_id_ref());
  }
  if (from.data_log_ddi() != 0) {
    set_data_log_ddi(from.data_log_ddi());
  }
  if (from.data_log_method() != 0) {
    set_data_log_method(from.data_log_method());
  }
  if (from.data_log_distance_interval() != 0) {
    set_data_log_distance_interval(from.data_log_distance_interval());
  }
  if (from.data_log_time_interval() != 0) {
    set_data_log_time_interval(from.data_log_time_interval());
  }
  if (from.data_log_threshold_minumum() != 0) {
    set_data_log_threshold_minumum(from.data_log_threshold_minumum());
  }
  if (from.data_log_threshold_maximum() != 0) {
    set_data_log_threshold_maximum(from.data_log_threshold_maximum());
  }
  if (from.data_log_threshold_change() != 0) {
    set_data_log_threshold_change(from.data_log_threshold_change());
  }
  if (from.data_log_pgn() != 0) {
    set_data_log_pgn(from.data_log_pgn());
  }
  if (from.data_log_pgn_start_bit() != 0) {
    set_data_log_pgn_start_bit(from.data_log_pgn_start_bit());
  }
  if (from.data_log_pgn_stop_bit() != 0) {
    set_data_log_pgn_stop_bit(from.data_log_pgn_stop_bit());
  }
}

void DataLogTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DataLogTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLogTrigger::CopyFrom(const DataLogTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DataLogTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLogTrigger::IsInitialized() const {
  return true;
}

void DataLogTrigger::Swap(DataLogTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataLogTrigger::InternalSwap(DataLogTrigger* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  swap(value_presentation_id_ref_, other->value_presentation_id_ref_);
  swap(data_log_ddi_, other->data_log_ddi_);
  swap(data_log_method_, other->data_log_method_);
  swap(data_log_distance_interval_, other->data_log_distance_interval_);
  swap(data_log_time_interval_, other->data_log_time_interval_);
  swap(data_log_threshold_minumum_, other->data_log_threshold_minumum_);
  swap(data_log_threshold_maximum_, other->data_log_threshold_maximum_);
  swap(data_log_threshold_change_, other->data_log_threshold_change_);
  swap(data_log_pgn_, other->data_log_pgn_);
  swap(data_log_pgn_start_bit_, other->data_log_pgn_start_bit_);
  swap(data_log_pgn_stop_bit_, other->data_log_pgn_stop_bit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataLogTrigger::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataLogValue::InitAsDefaultInstance() {
  ::efdi::_DataLogValue_default_instance_._instance.get_mutable()->device_element_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void DataLogValue::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataLogValue::kProcessDataDdiFieldNumber;
const int DataLogValue::kProcessDataValueFieldNumber;
const int DataLogValue::kDeviceElementIdRefFieldNumber;
const int DataLogValue::kDataLogPgnFieldNumber;
const int DataLogValue::kDataLogPgnStartBitFieldNumber;
const int DataLogValue::kDataLogPgnStopBitFieldNumber;
const int DataLogValue::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataLogValue::DataLogValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DataLogValue)
}
DataLogValue::DataLogValue(const DataLogValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_element_id_ref()) {
    device_element_id_ref_ = new ::efdi::UID(*from.device_element_id_ref_);
  } else {
    device_element_id_ref_ = NULL;
  }
  ::memcpy(&process_data_value_, &from.process_data_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
    reinterpret_cast<char*>(&process_data_value_)) + sizeof(data_log_pgn_stop_bit_));
  // @@protoc_insertion_point(copy_constructor:efdi.DataLogValue)
}

void DataLogValue::SharedCtor() {
  ::memset(&device_element_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&device_element_id_ref_)) + sizeof(data_log_pgn_stop_bit_));
  _cached_size_ = 0;
}

DataLogValue::~DataLogValue() {
  // @@protoc_insertion_point(destructor:efdi.DataLogValue)
  SharedDtor();
}

void DataLogValue::SharedDtor() {
  if (this != internal_default_instance()) delete device_element_id_ref_;
}

void DataLogValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLogValue::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataLogValue& DataLogValue::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValue();
  return *internal_default_instance();
}

DataLogValue* DataLogValue::New(::google::protobuf::Arena* arena) const {
  DataLogValue* n = new DataLogValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataLogValue::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DataLogValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_ != NULL) {
    delete device_element_id_ref_;
  }
  device_element_id_ref_ = NULL;
  ::memset(&process_data_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&process_data_value_)) + sizeof(data_log_pgn_stop_bit_));
  _internal_metadata_.Clear();
}

bool DataLogValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DataLogValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 process_data_ddi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_data_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 process_data_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &process_data_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_log_pgn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_log_pgn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_start_bit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_start_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_stop_bit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_stop_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DataLogValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DataLogValue)
  return false;
#undef DO_
}

void DataLogValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DataLogValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->process_data_ddi(), output);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->process_data_value(), output);
  }

  // .efdi.UID device_element_id_ref = 3;
  if (this->has_device_element_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->device_element_id_ref_, output);
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->data_log_pgn(), output);
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_log_pgn_start_bit(), output);
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_log_pgn_stop_bit(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DataLogValue)
}

::google::protobuf::uint8* DataLogValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DataLogValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->process_data_ddi(), target);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->process_data_value(), target);
  }

  // .efdi.UID device_element_id_ref = 3;
  if (this->has_device_element_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->device_element_id_ref_, deterministic, target);
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->data_log_pgn(), target);
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_log_pgn_start_bit(), target);
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_log_pgn_stop_bit(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DataLogValue)
  return target;
}

size_t DataLogValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DataLogValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID device_element_id_ref = 3;
  if (this->has_device_element_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->process_data_value());
  }

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->process_data_ddi());
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_start_bit());
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_log_pgn());
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_stop_bit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLogValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DataLogValue)
  GOOGLE_DCHECK_NE(&from, this);
  const DataLogValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataLogValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DataLogValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DataLogValue)
    MergeFrom(*source);
  }
}

void DataLogValue::MergeFrom(const DataLogValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DataLogValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_device_element_id_ref()) {
    mutable_device_element_id_ref()->::efdi::UID::MergeFrom(from.device_element_id_ref());
  }
  if (from.process_data_value() != 0) {
    set_process_data_value(from.process_data_value());
  }
  if (from.process_data_ddi() != 0) {
    set_process_data_ddi(from.process_data_ddi());
  }
  if (from.data_log_pgn_start_bit() != 0) {
    set_data_log_pgn_start_bit(from.data_log_pgn_start_bit());
  }
  if (from.data_log_pgn() != 0) {
    set_data_log_pgn(from.data_log_pgn());
  }
  if (from.data_log_pgn_stop_bit() != 0) {
    set_data_log_pgn_stop_bit(from.data_log_pgn_stop_bit());
  }
}

void DataLogValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DataLogValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLogValue::CopyFrom(const DataLogValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DataLogValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLogValue::IsInitialized() const {
  return true;
}

void DataLogValue::Swap(DataLogValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataLogValue::InternalSwap(DataLogValue* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  swap(process_data_value_, other->process_data_value_);
  swap(process_data_ddi_, other->process_data_ddi_);
  swap(data_log_pgn_start_bit_, other->data_log_pgn_start_bit_);
  swap(data_log_pgn_, other->data_log_pgn_);
  swap(data_log_pgn_stop_bit_, other->data_log_pgn_stop_bit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataLogValue::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataLogValueIntOnly::InitAsDefaultInstance() {
}
void DataLogValueIntOnly::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataLogValueIntOnly::kProcessDataDdiFieldNumber;
const int DataLogValueIntOnly::kProcessDataValueFieldNumber;
const int DataLogValueIntOnly::kDeviceElementIdRefFieldNumber;
const int DataLogValueIntOnly::kDataLogPgnFieldNumber;
const int DataLogValueIntOnly::kDataLogPgnStartBitFieldNumber;
const int DataLogValueIntOnly::kDataLogPgnStopBitFieldNumber;
const int DataLogValueIntOnly::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataLogValueIntOnly::DataLogValueIntOnly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValueIntOnly();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DataLogValueIntOnly)
}
DataLogValueIntOnly::DataLogValueIntOnly(const DataLogValueIntOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&process_data_value_, &from.process_data_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
    reinterpret_cast<char*>(&process_data_value_)) + sizeof(data_log_pgn_stop_bit_));
  // @@protoc_insertion_point(copy_constructor:efdi.DataLogValueIntOnly)
}

void DataLogValueIntOnly::SharedCtor() {
  ::memset(&process_data_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&process_data_value_)) + sizeof(data_log_pgn_stop_bit_));
  _cached_size_ = 0;
}

DataLogValueIntOnly::~DataLogValueIntOnly() {
  // @@protoc_insertion_point(destructor:efdi.DataLogValueIntOnly)
  SharedDtor();
}

void DataLogValueIntOnly::SharedDtor() {
}

void DataLogValueIntOnly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLogValueIntOnly::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataLogValueIntOnly& DataLogValueIntOnly::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDataLogValueIntOnly();
  return *internal_default_instance();
}

DataLogValueIntOnly* DataLogValueIntOnly::New(::google::protobuf::Arena* arena) const {
  DataLogValueIntOnly* n = new DataLogValueIntOnly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataLogValueIntOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DataLogValueIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  ::memset(&process_data_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_log_pgn_stop_bit_) -
      reinterpret_cast<char*>(&process_data_value_)) + sizeof(data_log_pgn_stop_bit_));
  _internal_metadata_.Clear();
}

bool DataLogValueIntOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DataLogValueIntOnly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 process_data_ddi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_data_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 process_data_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &process_data_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 device_element_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &device_element_id_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 data_log_pgn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_log_pgn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_start_bit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_start_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_log_pgn_stop_bit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_log_pgn_stop_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DataLogValueIntOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DataLogValueIntOnly)
  return false;
#undef DO_
}

void DataLogValueIntOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DataLogValueIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->process_data_ddi(), output);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->process_data_value(), output);
  }

  // sint64 device_element_id_ref = 3;
  if (this->device_element_id_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->device_element_id_ref(), output);
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->data_log_pgn(), output);
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_log_pgn_start_bit(), output);
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_log_pgn_stop_bit(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DataLogValueIntOnly)
}

::google::protobuf::uint8* DataLogValueIntOnly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DataLogValueIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->process_data_ddi(), target);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->process_data_value(), target);
  }

  // sint64 device_element_id_ref = 3;
  if (this->device_element_id_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->device_element_id_ref(), target);
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->data_log_pgn(), target);
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_log_pgn_start_bit(), target);
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_log_pgn_stop_bit(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DataLogValueIntOnly)
  return target;
}

size_t DataLogValueIntOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DataLogValueIntOnly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->process_data_value());
  }

  // sint64 device_element_id_ref = 3;
  if (this->device_element_id_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->device_element_id_ref());
  }

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->process_data_ddi());
  }

  // uint32 data_log_pgn_start_bit = 5;
  if (this->data_log_pgn_start_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_start_bit());
  }

  // uint64 data_log_pgn = 4;
  if (this->data_log_pgn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data_log_pgn());
  }

  // uint32 data_log_pgn_stop_bit = 6;
  if (this->data_log_pgn_stop_bit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_log_pgn_stop_bit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLogValueIntOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DataLogValueIntOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const DataLogValueIntOnly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataLogValueIntOnly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DataLogValueIntOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DataLogValueIntOnly)
    MergeFrom(*source);
  }
}

void DataLogValueIntOnly::MergeFrom(const DataLogValueIntOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DataLogValueIntOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.process_data_value() != 0) {
    set_process_data_value(from.process_data_value());
  }
  if (from.device_element_id_ref() != 0) {
    set_device_element_id_ref(from.device_element_id_ref());
  }
  if (from.process_data_ddi() != 0) {
    set_process_data_ddi(from.process_data_ddi());
  }
  if (from.data_log_pgn_start_bit() != 0) {
    set_data_log_pgn_start_bit(from.data_log_pgn_start_bit());
  }
  if (from.data_log_pgn() != 0) {
    set_data_log_pgn(from.data_log_pgn());
  }
  if (from.data_log_pgn_stop_bit() != 0) {
    set_data_log_pgn_stop_bit(from.data_log_pgn_stop_bit());
  }
}

void DataLogValueIntOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DataLogValueIntOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLogValueIntOnly::CopyFrom(const DataLogValueIntOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DataLogValueIntOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLogValueIntOnly::IsInitialized() const {
  return true;
}

void DataLogValueIntOnly::Swap(DataLogValueIntOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataLogValueIntOnly::InternalSwap(DataLogValueIntOnly* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(process_data_value_, other->process_data_value_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  swap(process_data_ddi_, other->process_data_ddi_);
  swap(data_log_pgn_start_bit_, other->data_log_pgn_start_bit_);
  swap(data_log_pgn_, other->data_log_pgn_);
  swap(data_log_pgn_stop_bit_, other->data_log_pgn_stop_bit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataLogValueIntOnly::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Device::InitAsDefaultInstance() {
  ::efdi::_Device_default_instance_._instance.get_mutable()->device_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Device::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kDeviceIdFieldNumber;
const int Device::kDeviceDesignatorFieldNumber;
const int Device::kDeviceSoftwareVersionFieldNumber;
const int Device::kClientNameFieldNumber;
const int Device::kDeviceSerialNumberFieldNumber;
const int Device::kDeviceStructureLabelFieldNumber;
const int Device::kDeviceLocalizationLabelFieldNumber;
const int Device::kDeviceElementFieldNumber;
const int Device::kDeviceProcessDataFieldNumber;
const int Device::kDevicePropertyFieldNumber;
const int Device::kDeviceValuePresentationFieldNumber;
const int Device::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDevice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_element_(from.device_element_),
      device_process_data_(from.device_process_data_),
      device_property_(from.device_property_),
      device_value_presentation_(from.device_value_presentation_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_designator().size() > 0) {
    device_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_designator_);
  }
  device_software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_software_version().size() > 0) {
    device_software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_software_version_);
  }
  client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_name().size() > 0) {
    client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_);
  }
  device_serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_serial_number().size() > 0) {
    device_serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_serial_number_);
  }
  device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_structure_label().size() > 0) {
    device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_structure_label_);
  }
  device_localization_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_localization_label().size() > 0) {
    device_localization_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_localization_label_);
  }
  if (from.has_device_id()) {
    device_id_ = new ::efdi::UID(*from.device_id_);
  } else {
    device_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.Device)
}

void Device::SharedCtor() {
  device_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_serial_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_structure_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_localization_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_ = NULL;
  _cached_size_ = 0;
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:efdi.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  device_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_software_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_serial_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_structure_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_localization_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_id_;
}

void Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Device& Device::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDevice();
  return *internal_default_instance();
}

Device* Device::New(::google::protobuf::Arena* arena) const {
  Device* n = new Device;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_element_.Clear();
  device_process_data_.Clear();
  device_property_.Clear();
  device_value_presentation_.Clear();
  extension_.Clear();
  device_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_software_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_structure_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_localization_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_id_ != NULL) {
    delete device_id_;
  }
  device_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Device)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_designator().data(), static_cast<int>(this->device_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Device.device_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_software_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_software_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_software_version().data(), static_cast<int>(this->device_software_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Device.device_software_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_serial_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_serial_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_serial_number().data(), static_cast<int>(this->device_serial_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Device.device_serial_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes device_structure_label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device_structure_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes device_localization_label = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device_localization_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceElement device_element = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceProcessData device_process_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_process_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceProperty device_property = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceValuePresentation device_value_presentation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_value_presentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_id = 1;
  if (this->has_device_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->device_id_, output);
  }

  // string device_designator = 2;
  if (this->device_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_designator().data(), static_cast<int>(this->device_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_designator(), output);
  }

  // string device_software_version = 3;
  if (this->device_software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_software_version().data(), static_cast<int>(this->device_software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_software_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_software_version(), output);
  }

  // bytes client_name = 4;
  if (this->client_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->client_name(), output);
  }

  // string device_serial_number = 5;
  if (this->device_serial_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_serial_number().data(), static_cast<int>(this->device_serial_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_serial_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_serial_number(), output);
  }

  // bytes device_structure_label = 6;
  if (this->device_structure_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->device_structure_label(), output);
  }

  // bytes device_localization_label = 7;
  if (this->device_localization_label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->device_localization_label(), output);
  }

  // repeated .efdi.DeviceElement device_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->device_element(static_cast<int>(i)), output);
  }

  // repeated .efdi.DeviceProcessData device_process_data = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_process_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->device_process_data(static_cast<int>(i)), output);
  }

  // repeated .efdi.DeviceProperty device_property = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->device_property(static_cast<int>(i)), output);
  }

  // repeated .efdi.DeviceValuePresentation device_value_presentation = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_value_presentation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->device_value_presentation(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_id = 1;
  if (this->has_device_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->device_id_, deterministic, target);
  }

  // string device_designator = 2;
  if (this->device_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_designator().data(), static_cast<int>(this->device_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_designator(), target);
  }

  // string device_software_version = 3;
  if (this->device_software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_software_version().data(), static_cast<int>(this->device_software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_software_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_software_version(), target);
  }

  // bytes client_name = 4;
  if (this->client_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->client_name(), target);
  }

  // string device_serial_number = 5;
  if (this->device_serial_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_serial_number().data(), static_cast<int>(this->device_serial_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Device.device_serial_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_serial_number(), target);
  }

  // bytes device_structure_label = 6;
  if (this->device_structure_label().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->device_structure_label(), target);
  }

  // bytes device_localization_label = 7;
  if (this->device_localization_label().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->device_localization_label(), target);
  }

  // repeated .efdi.DeviceElement device_element = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->device_element(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.DeviceProcessData device_process_data = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_process_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->device_process_data(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.DeviceProperty device_property = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->device_property(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.DeviceValuePresentation device_value_presentation = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_value_presentation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->device_value_presentation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Device)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DeviceElement device_element = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->device_element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_element(static_cast<int>(i)));
    }
  }

  // repeated .efdi.DeviceProcessData device_process_data = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->device_process_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_process_data(static_cast<int>(i)));
    }
  }

  // repeated .efdi.DeviceProperty device_property = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->device_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_property(static_cast<int>(i)));
    }
  }

  // repeated .efdi.DeviceValuePresentation device_value_presentation = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->device_value_presentation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_value_presentation(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string device_designator = 2;
  if (this->device_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_designator());
  }

  // string device_software_version = 3;
  if (this->device_software_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_software_version());
  }

  // bytes client_name = 4;
  if (this->client_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_name());
  }

  // string device_serial_number = 5;
  if (this->device_serial_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_serial_number());
  }

  // bytes device_structure_label = 6;
  if (this->device_structure_label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->device_structure_label());
  }

  // bytes device_localization_label = 7;
  if (this->device_localization_label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->device_localization_label());
  }

  // .efdi.UID device_id = 1;
  if (this->has_device_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_element_.MergeFrom(from.device_element_);
  device_process_data_.MergeFrom(from.device_process_data_);
  device_property_.MergeFrom(from.device_property_);
  device_value_presentation_.MergeFrom(from.device_value_presentation_);
  extension_.MergeFrom(from.extension_);
  if (from.device_designator().size() > 0) {

    device_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_designator_);
  }
  if (from.device_software_version().size() > 0) {

    device_software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_software_version_);
  }
  if (from.client_name().size() > 0) {

    client_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_);
  }
  if (from.device_serial_number().size() > 0) {

    device_serial_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_serial_number_);
  }
  if (from.device_structure_label().size() > 0) {

    device_structure_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_structure_label_);
  }
  if (from.device_localization_label().size() > 0) {

    device_localization_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_localization_label_);
  }
  if (from.has_device_id()) {
    mutable_device_id()->::efdi::UID::MergeFrom(from.device_id());
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  using std::swap;
  device_element_.InternalSwap(&other->device_element_);
  device_process_data_.InternalSwap(&other->device_process_data_);
  device_property_.InternalSwap(&other->device_property_);
  device_value_presentation_.InternalSwap(&other->device_value_presentation_);
  extension_.InternalSwap(&other->extension_);
  device_designator_.Swap(&other->device_designator_);
  device_software_version_.Swap(&other->device_software_version_);
  client_name_.Swap(&other->client_name_);
  device_serial_number_.Swap(&other->device_serial_number_);
  device_structure_label_.Swap(&other->device_structure_label_);
  device_localization_label_.Swap(&other->device_localization_label_);
  swap(device_id_, other->device_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAllocation::InitAsDefaultInstance() {
  ::efdi::_DeviceAllocation_default_instance_._instance.get_mutable()->device_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_DeviceAllocation_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void DeviceAllocation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAllocation::kClientNameValueFieldNumber;
const int DeviceAllocation::kClientNameMaskFieldNumber;
const int DeviceAllocation::kDeviceIdRefFieldNumber;
const int DeviceAllocation::kAllocationStampFieldNumber;
const int DeviceAllocation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAllocation::DeviceAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceAllocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceAllocation)
}
DeviceAllocation::DeviceAllocation(const DeviceAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_name_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_name_value().size() > 0) {
    client_name_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_value_);
  }
  client_name_mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_name_mask().size() > 0) {
    client_name_mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_mask_);
  }
  if (from.has_device_id_ref()) {
    device_id_ref_ = new ::efdi::UID(*from.device_id_ref_);
  } else {
    device_id_ref_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceAllocation)
}

void DeviceAllocation::SharedCtor() {
  client_name_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allocation_stamp_) -
      reinterpret_cast<char*>(&device_id_ref_)) + sizeof(allocation_stamp_));
  _cached_size_ = 0;
}

DeviceAllocation::~DeviceAllocation() {
  // @@protoc_insertion_point(destructor:efdi.DeviceAllocation)
  SharedDtor();
}

void DeviceAllocation::SharedDtor() {
  client_name_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_id_ref_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void DeviceAllocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceAllocation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAllocation& DeviceAllocation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceAllocation();
  return *internal_default_instance();
}

DeviceAllocation* DeviceAllocation::New(::google::protobuf::Arena* arena) const {
  DeviceAllocation* n = new DeviceAllocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  client_name_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_name_mask_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_id_ref_ != NULL) {
    delete device_id_ref_;
  }
  device_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  _internal_metadata_.Clear();
}

bool DeviceAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceAllocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes client_name_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_name_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_name_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_name_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceAllocation)
  return false;
#undef DO_
}

void DeviceAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes client_name_value = 1;
  if (this->client_name_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->client_name_value(), output);
  }

  // bytes client_name_mask = 2;
  if (this->client_name_mask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->client_name_mask(), output);
  }

  // .efdi.UID device_id_ref = 3;
  if (this->has_device_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->device_id_ref_, output);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceAllocation)
}

::google::protobuf::uint8* DeviceAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes client_name_value = 1;
  if (this->client_name_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->client_name_value(), target);
  }

  // bytes client_name_mask = 2;
  if (this->client_name_mask().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->client_name_mask(), target);
  }

  // .efdi.UID device_id_ref = 3;
  if (this->has_device_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->device_id_ref_, deterministic, target);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceAllocation)
  return target;
}

size_t DeviceAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // bytes client_name_value = 1;
  if (this->client_name_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_name_value());
  }

  // bytes client_name_mask = 2;
  if (this->client_name_mask().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_name_mask());
  }

  // .efdi.UID device_id_ref = 3;
  if (this->has_device_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_id_ref_);
  }

  // .efdi.AllocationStamp allocation_stamp = 4;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceAllocation)
    MergeFrom(*source);
  }
}

void DeviceAllocation::MergeFrom(const DeviceAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.client_name_value().size() > 0) {

    client_name_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_value_);
  }
  if (from.client_name_mask().size() > 0) {

    client_name_mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_name_mask_);
  }
  if (from.has_device_id_ref()) {
    mutable_device_id_ref()->::efdi::UID::MergeFrom(from.device_id_ref());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
}

void DeviceAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAllocation::CopyFrom(const DeviceAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAllocation::IsInitialized() const {
  return true;
}

void DeviceAllocation::Swap(DeviceAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAllocation::InternalSwap(DeviceAllocation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  client_name_value_.Swap(&other->client_name_value_);
  client_name_mask_.Swap(&other->client_name_mask_);
  swap(device_id_ref_, other->device_id_ref_);
  swap(allocation_stamp_, other->allocation_stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceAllocation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceElement::InitAsDefaultInstance() {
  ::efdi::_DeviceElement_default_instance_._instance.get_mutable()->device_element_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void DeviceElement::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceElement::kDeviceElementIdFieldNumber;
const int DeviceElement::kDeviceElementObjectIdFieldNumber;
const int DeviceElement::kDeviceElementTypeFieldNumber;
const int DeviceElement::kDeviceElementDesignatorFieldNumber;
const int DeviceElement::kDeviceElementNumberFieldNumber;
const int DeviceElement::kParentObjectIdFieldNumber;
const int DeviceElement::kDeviceObjectReferenceFieldNumber;
const int DeviceElement::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceElement::DeviceElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceElement)
}
DeviceElement::DeviceElement(const DeviceElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_object_reference_(from.device_object_reference_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_element_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_element_designator().size() > 0) {
    device_element_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_element_designator_);
  }
  if (from.has_device_element_id()) {
    device_element_id_ = new ::efdi::UID(*from.device_element_id_);
  } else {
    device_element_id_ = NULL;
  }
  ::memcpy(&device_element_object_id_, &from.device_element_object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_object_id_) -
    reinterpret_cast<char*>(&device_element_object_id_)) + sizeof(parent_object_id_));
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceElement)
}

void DeviceElement::SharedCtor() {
  device_element_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_element_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_object_id_) -
      reinterpret_cast<char*>(&device_element_id_)) + sizeof(parent_object_id_));
  _cached_size_ = 0;
}

DeviceElement::~DeviceElement() {
  // @@protoc_insertion_point(destructor:efdi.DeviceElement)
  SharedDtor();
}

void DeviceElement::SharedDtor() {
  device_element_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_element_id_;
}

void DeviceElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceElement::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceElement& DeviceElement::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElement();
  return *internal_default_instance();
}

DeviceElement* DeviceElement::New(::google::protobuf::Arena* arena) const {
  DeviceElement* n = new DeviceElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceElement::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_object_reference_.Clear();
  extension_.Clear();
  device_element_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_element_id_ != NULL) {
    delete device_element_id_;
  }
  device_element_id_ = NULL;
  ::memset(&device_element_object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_object_id_) -
      reinterpret_cast<char*>(&device_element_object_id_)) + sizeof(parent_object_id_));
  _internal_metadata_.Clear();
}

bool DeviceElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID device_element_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_element_object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_element_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.DeviceElement.DeviceElementType device_element_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device_element_type(static_cast< ::efdi::DeviceElement_DeviceElementType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_element_designator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_element_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_element_designator().data(), static_cast<int>(this->device_element_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.DeviceElement.device_element_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_element_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_element_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_object_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceObjectReference device_object_reference = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_object_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceElement)
  return false;
#undef DO_
}

void DeviceElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_element_id = 1;
  if (this->has_device_element_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->device_element_id_, output);
  }

  // uint32 device_element_object_id = 2;
  if (this->device_element_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->device_element_object_id(), output);
  }

  // .efdi.DeviceElement.DeviceElementType device_element_type = 3;
  if (this->device_element_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->device_element_type(), output);
  }

  // string device_element_designator = 4;
  if (this->device_element_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_element_designator().data(), static_cast<int>(this->device_element_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceElement.device_element_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_element_designator(), output);
  }

  // uint32 device_element_number = 5;
  if (this->device_element_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->device_element_number(), output);
  }

  // uint32 parent_object_id = 6;
  if (this->parent_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->parent_object_id(), output);
  }

  // repeated .efdi.DeviceObjectReference device_object_reference = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_object_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->device_object_reference(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceElement)
}

::google::protobuf::uint8* DeviceElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID device_element_id = 1;
  if (this->has_device_element_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->device_element_id_, deterministic, target);
  }

  // uint32 device_element_object_id = 2;
  if (this->device_element_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->device_element_object_id(), target);
  }

  // .efdi.DeviceElement.DeviceElementType device_element_type = 3;
  if (this->device_element_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->device_element_type(), target);
  }

  // string device_element_designator = 4;
  if (this->device_element_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_element_designator().data(), static_cast<int>(this->device_element_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceElement.device_element_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_element_designator(), target);
  }

  // uint32 device_element_number = 5;
  if (this->device_element_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->device_element_number(), target);
  }

  // uint32 parent_object_id = 6;
  if (this->parent_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->parent_object_id(), target);
  }

  // repeated .efdi.DeviceObjectReference device_object_reference = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_object_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->device_object_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceElement)
  return target;
}

size_t DeviceElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DeviceObjectReference device_object_reference = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->device_object_reference_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_object_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string device_element_designator = 4;
  if (this->device_element_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_element_designator());
  }

  // .efdi.UID device_element_id = 1;
  if (this->has_device_element_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_);
  }

  // uint32 device_element_object_id = 2;
  if (this->device_element_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_element_object_id());
  }

  // .efdi.DeviceElement.DeviceElementType device_element_type = 3;
  if (this->device_element_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device_element_type());
  }

  // uint32 device_element_number = 5;
  if (this->device_element_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_element_number());
  }

  // uint32 parent_object_id = 6;
  if (this->parent_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceElement)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceElement)
    MergeFrom(*source);
  }
}

void DeviceElement::MergeFrom(const DeviceElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_object_reference_.MergeFrom(from.device_object_reference_);
  extension_.MergeFrom(from.extension_);
  if (from.device_element_designator().size() > 0) {

    device_element_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_element_designator_);
  }
  if (from.has_device_element_id()) {
    mutable_device_element_id()->::efdi::UID::MergeFrom(from.device_element_id());
  }
  if (from.device_element_object_id() != 0) {
    set_device_element_object_id(from.device_element_object_id());
  }
  if (from.device_element_type() != 0) {
    set_device_element_type(from.device_element_type());
  }
  if (from.device_element_number() != 0) {
    set_device_element_number(from.device_element_number());
  }
  if (from.parent_object_id() != 0) {
    set_parent_object_id(from.parent_object_id());
  }
}

void DeviceElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceElement::CopyFrom(const DeviceElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceElement::IsInitialized() const {
  return true;
}

void DeviceElement::Swap(DeviceElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceElement::InternalSwap(DeviceElement* other) {
  using std::swap;
  device_object_reference_.InternalSwap(&other->device_object_reference_);
  extension_.InternalSwap(&other->extension_);
  device_element_designator_.Swap(&other->device_element_designator_);
  swap(device_element_id_, other->device_element_id_);
  swap(device_element_object_id_, other->device_element_object_id_);
  swap(device_element_type_, other->device_element_type_);
  swap(device_element_number_, other->device_element_number_);
  swap(parent_object_id_, other->parent_object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceElement::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceObjectReference::InitAsDefaultInstance() {
}
void DeviceObjectReference::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceObjectReference::kDeviceObjectIdFieldNumber;
const int DeviceObjectReference::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceObjectReference::DeviceObjectReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceObjectReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceObjectReference)
}
DeviceObjectReference::DeviceObjectReference(const DeviceObjectReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_object_id_ = from.device_object_id_;
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceObjectReference)
}

void DeviceObjectReference::SharedCtor() {
  device_object_id_ = 0u;
  _cached_size_ = 0;
}

DeviceObjectReference::~DeviceObjectReference() {
  // @@protoc_insertion_point(destructor:efdi.DeviceObjectReference)
  SharedDtor();
}

void DeviceObjectReference::SharedDtor() {
}

void DeviceObjectReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceObjectReference::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceObjectReference& DeviceObjectReference::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceObjectReference();
  return *internal_default_instance();
}

DeviceObjectReference* DeviceObjectReference::New(::google::protobuf::Arena* arena) const {
  DeviceObjectReference* n = new DeviceObjectReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceObjectReference::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  device_object_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DeviceObjectReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceObjectReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device_object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceObjectReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceObjectReference)
  return false;
#undef DO_
}

void DeviceObjectReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_object_id = 1;
  if (this->device_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->device_object_id(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceObjectReference)
}

::google::protobuf::uint8* DeviceObjectReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceObjectReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_object_id = 1;
  if (this->device_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->device_object_id(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceObjectReference)
  return target;
}

size_t DeviceObjectReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceObjectReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // uint32 device_object_id = 1;
  if (this->device_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceObjectReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceObjectReference)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceObjectReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceObjectReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceObjectReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceObjectReference)
    MergeFrom(*source);
  }
}

void DeviceObjectReference::MergeFrom(const DeviceObjectReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceObjectReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.device_object_id() != 0) {
    set_device_object_id(from.device_object_id());
  }
}

void DeviceObjectReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceObjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceObjectReference::CopyFrom(const DeviceObjectReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceObjectReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceObjectReference::IsInitialized() const {
  return true;
}

void DeviceObjectReference::Swap(DeviceObjectReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceObjectReference::InternalSwap(DeviceObjectReference* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(device_object_id_, other->device_object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceObjectReference::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceProcessData::InitAsDefaultInstance() {
}
void DeviceProcessData::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceProcessData::kDeviceProcessDataObjectIdFieldNumber;
const int DeviceProcessData::kDeviceProcessDataDdiFieldNumber;
const int DeviceProcessData::kDeviceProcessDataPropertyFieldNumber;
const int DeviceProcessData::kDeviceProcessDataTriggerMethodsFieldNumber;
const int DeviceProcessData::kDeviceProcessDataDesignatorFieldNumber;
const int DeviceProcessData::kDeviceValuePresentationObjectIdFieldNumber;
const int DeviceProcessData::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceProcessData::DeviceProcessData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProcessData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceProcessData)
}
DeviceProcessData::DeviceProcessData(const DeviceProcessData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_process_data_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_process_data_designator().size() > 0) {
    device_process_data_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_process_data_designator_);
  }
  ::memcpy(&device_process_data_object_id_, &from.device_process_data_object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_value_presentation_object_id_) -
    reinterpret_cast<char*>(&device_process_data_object_id_)) + sizeof(device_value_presentation_object_id_));
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceProcessData)
}

void DeviceProcessData::SharedCtor() {
  device_process_data_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_process_data_object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_value_presentation_object_id_) -
      reinterpret_cast<char*>(&device_process_data_object_id_)) + sizeof(device_value_presentation_object_id_));
  _cached_size_ = 0;
}

DeviceProcessData::~DeviceProcessData() {
  // @@protoc_insertion_point(destructor:efdi.DeviceProcessData)
  SharedDtor();
}

void DeviceProcessData::SharedDtor() {
  device_process_data_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceProcessData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceProcessData::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceProcessData& DeviceProcessData::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProcessData();
  return *internal_default_instance();
}

DeviceProcessData* DeviceProcessData::New(::google::protobuf::Arena* arena) const {
  DeviceProcessData* n = new DeviceProcessData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceProcessData::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceProcessData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  device_process_data_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_process_data_object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_value_presentation_object_id_) -
      reinterpret_cast<char*>(&device_process_data_object_id_)) + sizeof(device_value_presentation_object_id_));
  _internal_metadata_.Clear();
}

bool DeviceProcessData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceProcessData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device_process_data_object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_process_data_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_process_data_ddi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_process_data_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_process_data_property = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_process_data_property_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_process_data_trigger_methods = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_process_data_trigger_methods_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_process_data_designator = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_process_data_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_process_data_designator().data(), static_cast<int>(this->device_process_data_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.DeviceProcessData.device_process_data_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_value_presentation_object_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_value_presentation_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceProcessData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceProcessData)
  return false;
#undef DO_
}

void DeviceProcessData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceProcessData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_process_data_object_id = 1;
  if (this->device_process_data_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->device_process_data_object_id(), output);
  }

  // uint32 device_process_data_ddi = 2;
  if (this->device_process_data_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->device_process_data_ddi(), output);
  }

  // uint32 device_process_data_property = 3;
  if (this->device_process_data_property() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->device_process_data_property(), output);
  }

  // uint32 device_process_data_trigger_methods = 4;
  if (this->device_process_data_trigger_methods() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->device_process_data_trigger_methods(), output);
  }

  // string device_process_data_designator = 5;
  if (this->device_process_data_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_process_data_designator().data(), static_cast<int>(this->device_process_data_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceProcessData.device_process_data_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_process_data_designator(), output);
  }

  // uint32 device_value_presentation_object_id = 6;
  if (this->device_value_presentation_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->device_value_presentation_object_id(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceProcessData)
}

::google::protobuf::uint8* DeviceProcessData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceProcessData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_process_data_object_id = 1;
  if (this->device_process_data_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->device_process_data_object_id(), target);
  }

  // uint32 device_process_data_ddi = 2;
  if (this->device_process_data_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->device_process_data_ddi(), target);
  }

  // uint32 device_process_data_property = 3;
  if (this->device_process_data_property() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->device_process_data_property(), target);
  }

  // uint32 device_process_data_trigger_methods = 4;
  if (this->device_process_data_trigger_methods() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->device_process_data_trigger_methods(), target);
  }

  // string device_process_data_designator = 5;
  if (this->device_process_data_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_process_data_designator().data(), static_cast<int>(this->device_process_data_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceProcessData.device_process_data_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_process_data_designator(), target);
  }

  // uint32 device_value_presentation_object_id = 6;
  if (this->device_value_presentation_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->device_value_presentation_object_id(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceProcessData)
  return target;
}

size_t DeviceProcessData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceProcessData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string device_process_data_designator = 5;
  if (this->device_process_data_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_process_data_designator());
  }

  // uint32 device_process_data_object_id = 1;
  if (this->device_process_data_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_process_data_object_id());
  }

  // uint32 device_process_data_ddi = 2;
  if (this->device_process_data_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_process_data_ddi());
  }

  // uint32 device_process_data_property = 3;
  if (this->device_process_data_property() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_process_data_property());
  }

  // uint32 device_process_data_trigger_methods = 4;
  if (this->device_process_data_trigger_methods() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_process_data_trigger_methods());
  }

  // uint32 device_value_presentation_object_id = 6;
  if (this->device_value_presentation_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_value_presentation_object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceProcessData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceProcessData)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceProcessData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceProcessData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceProcessData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceProcessData)
    MergeFrom(*source);
  }
}

void DeviceProcessData::MergeFrom(const DeviceProcessData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceProcessData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.device_process_data_designator().size() > 0) {

    device_process_data_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_process_data_designator_);
  }
  if (from.device_process_data_object_id() != 0) {
    set_device_process_data_object_id(from.device_process_data_object_id());
  }
  if (from.device_process_data_ddi() != 0) {
    set_device_process_data_ddi(from.device_process_data_ddi());
  }
  if (from.device_process_data_property() != 0) {
    set_device_process_data_property(from.device_process_data_property());
  }
  if (from.device_process_data_trigger_methods() != 0) {
    set_device_process_data_trigger_methods(from.device_process_data_trigger_methods());
  }
  if (from.device_value_presentation_object_id() != 0) {
    set_device_value_presentation_object_id(from.device_value_presentation_object_id());
  }
}

void DeviceProcessData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceProcessData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceProcessData::CopyFrom(const DeviceProcessData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceProcessData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceProcessData::IsInitialized() const {
  return true;
}

void DeviceProcessData::Swap(DeviceProcessData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceProcessData::InternalSwap(DeviceProcessData* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  device_process_data_designator_.Swap(&other->device_process_data_designator_);
  swap(device_process_data_object_id_, other->device_process_data_object_id_);
  swap(device_process_data_ddi_, other->device_process_data_ddi_);
  swap(device_process_data_property_, other->device_process_data_property_);
  swap(device_process_data_trigger_methods_, other->device_process_data_trigger_methods_);
  swap(device_value_presentation_object_id_, other->device_value_presentation_object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceProcessData::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceProperty::InitAsDefaultInstance() {
}
void DeviceProperty::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceProperty::kDevicePropertyObjectIdFieldNumber;
const int DeviceProperty::kDevicePropertyDdiFieldNumber;
const int DeviceProperty::kDevicePropertyValueFieldNumber;
const int DeviceProperty::kDevicePropertyDesignatorFieldNumber;
const int DeviceProperty::kDeviceValuePresentationObjectIdFieldNumber;
const int DeviceProperty::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceProperty::DeviceProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProperty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceProperty)
}
DeviceProperty::DeviceProperty(const DeviceProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_property_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_property_designator().size() > 0) {
    device_property_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_property_designator_);
  }
  ::memcpy(&device_property_object_id_, &from.device_property_object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_value_presentation_object_id_) -
    reinterpret_cast<char*>(&device_property_object_id_)) + sizeof(device_value_presentation_object_id_));
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceProperty)
}

void DeviceProperty::SharedCtor() {
  device_property_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_property_object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_value_presentation_object_id_) -
      reinterpret_cast<char*>(&device_property_object_id_)) + sizeof(device_value_presentation_object_id_));
  _cached_size_ = 0;
}

DeviceProperty::~DeviceProperty() {
  // @@protoc_insertion_point(destructor:efdi.DeviceProperty)
  SharedDtor();
}

void DeviceProperty::SharedDtor() {
  device_property_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceProperty::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceProperty& DeviceProperty::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceProperty();
  return *internal_default_instance();
}

DeviceProperty* DeviceProperty::New(::google::protobuf::Arena* arena) const {
  DeviceProperty* n = new DeviceProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  device_property_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_property_object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_value_presentation_object_id_) -
      reinterpret_cast<char*>(&device_property_object_id_)) + sizeof(device_value_presentation_object_id_));
  _internal_metadata_.Clear();
}

bool DeviceProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device_property_object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_property_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_property_ddi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_property_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 device_property_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &device_property_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_property_designator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_property_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_property_designator().data(), static_cast<int>(this->device_property_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.DeviceProperty.device_property_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 device_value_presentation_object_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_value_presentation_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceProperty)
  return false;
#undef DO_
}

void DeviceProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_property_object_id = 1;
  if (this->device_property_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->device_property_object_id(), output);
  }

  // uint32 device_property_ddi = 2;
  if (this->device_property_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->device_property_ddi(), output);
  }

  // sint64 device_property_value = 3;
  if (this->device_property_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->device_property_value(), output);
  }

  // string device_property_designator = 4;
  if (this->device_property_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_property_designator().data(), static_cast<int>(this->device_property_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceProperty.device_property_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_property_designator(), output);
  }

  // uint32 device_value_presentation_object_id = 5;
  if (this->device_value_presentation_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->device_value_presentation_object_id(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceProperty)
}

::google::protobuf::uint8* DeviceProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_property_object_id = 1;
  if (this->device_property_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->device_property_object_id(), target);
  }

  // uint32 device_property_ddi = 2;
  if (this->device_property_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->device_property_ddi(), target);
  }

  // sint64 device_property_value = 3;
  if (this->device_property_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->device_property_value(), target);
  }

  // string device_property_designator = 4;
  if (this->device_property_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_property_designator().data(), static_cast<int>(this->device_property_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceProperty.device_property_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_property_designator(), target);
  }

  // uint32 device_value_presentation_object_id = 5;
  if (this->device_value_presentation_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->device_value_presentation_object_id(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceProperty)
  return target;
}

size_t DeviceProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string device_property_designator = 4;
  if (this->device_property_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_property_designator());
  }

  // uint32 device_property_object_id = 1;
  if (this->device_property_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_property_object_id());
  }

  // uint32 device_property_ddi = 2;
  if (this->device_property_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_property_ddi());
  }

  // sint64 device_property_value = 3;
  if (this->device_property_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->device_property_value());
  }

  // uint32 device_value_presentation_object_id = 5;
  if (this->device_value_presentation_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_value_presentation_object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceProperty)
    MergeFrom(*source);
  }
}

void DeviceProperty::MergeFrom(const DeviceProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.device_property_designator().size() > 0) {

    device_property_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_property_designator_);
  }
  if (from.device_property_object_id() != 0) {
    set_device_property_object_id(from.device_property_object_id());
  }
  if (from.device_property_ddi() != 0) {
    set_device_property_ddi(from.device_property_ddi());
  }
  if (from.device_property_value() != 0) {
    set_device_property_value(from.device_property_value());
  }
  if (from.device_value_presentation_object_id() != 0) {
    set_device_value_presentation_object_id(from.device_value_presentation_object_id());
  }
}

void DeviceProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceProperty::CopyFrom(const DeviceProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceProperty::IsInitialized() const {
  return true;
}

void DeviceProperty::Swap(DeviceProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceProperty::InternalSwap(DeviceProperty* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  device_property_designator_.Swap(&other->device_property_designator_);
  swap(device_property_object_id_, other->device_property_object_id_);
  swap(device_property_ddi_, other->device_property_ddi_);
  swap(device_property_value_, other->device_property_value_);
  swap(device_value_presentation_object_id_, other->device_value_presentation_object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceProperty::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceValuePresentation::InitAsDefaultInstance() {
}
void DeviceValuePresentation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceValuePresentation::kDeviceValuePresentationObjectIdFieldNumber;
const int DeviceValuePresentation::kOffsetFieldNumber;
const int DeviceValuePresentation::kScaleFieldNumber;
const int DeviceValuePresentation::kNumberOfDecimalsFieldNumber;
const int DeviceValuePresentation::kUnitDesignatorFieldNumber;
const int DeviceValuePresentation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceValuePresentation::DeviceValuePresentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceValuePresentation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceValuePresentation)
}
DeviceValuePresentation::DeviceValuePresentation(const DeviceValuePresentation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit_designator().size() > 0) {
    unit_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_designator_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(scale_));
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceValuePresentation)
}

void DeviceValuePresentation::SharedCtor() {
  unit_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(scale_));
  _cached_size_ = 0;
}

DeviceValuePresentation::~DeviceValuePresentation() {
  // @@protoc_insertion_point(destructor:efdi.DeviceValuePresentation)
  SharedDtor();
}

void DeviceValuePresentation::SharedDtor() {
  unit_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceValuePresentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceValuePresentation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceValuePresentation& DeviceValuePresentation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceValuePresentation();
  return *internal_default_instance();
}

DeviceValuePresentation* DeviceValuePresentation::New(::google::protobuf::Arena* arena) const {
  DeviceValuePresentation* n = new DeviceValuePresentation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceValuePresentation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  unit_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(scale_));
  _internal_metadata_.Clear();
}

bool DeviceValuePresentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceValuePresentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device_value_presentation_object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_value_presentation_object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_decimals = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_decimals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit_designator = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.DeviceValuePresentation.unit_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceValuePresentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceValuePresentation)
  return false;
#undef DO_
}

void DeviceValuePresentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_value_presentation_object_id = 1;
  if (this->device_value_presentation_object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->device_value_presentation_object_id(), output);
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->offset(), output);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->number_of_decimals(), output);
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceValuePresentation.unit_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->unit_designator(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceValuePresentation)
}

::google::protobuf::uint8* DeviceValuePresentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 device_value_presentation_object_id = 1;
  if (this->device_value_presentation_object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->device_value_presentation_object_id(), target);
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->offset(), target);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->number_of_decimals(), target);
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.DeviceValuePresentation.unit_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->unit_designator(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceValuePresentation)
  return target;
}

size_t DeviceValuePresentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceValuePresentation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit_designator());
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->offset());
  }

  // uint32 device_value_presentation_object_id = 1;
  if (this->device_value_presentation_object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device_value_presentation_object_id());
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_decimals());
  }

  // double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceValuePresentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceValuePresentation)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceValuePresentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceValuePresentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceValuePresentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceValuePresentation)
    MergeFrom(*source);
  }
}

void DeviceValuePresentation::MergeFrom(const DeviceValuePresentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceValuePresentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.unit_designator().size() > 0) {

    unit_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_designator_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.device_value_presentation_object_id() != 0) {
    set_device_value_presentation_object_id(from.device_value_presentation_object_id());
  }
  if (from.number_of_decimals() != 0) {
    set_number_of_decimals(from.number_of_decimals());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void DeviceValuePresentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceValuePresentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceValuePresentation::CopyFrom(const DeviceValuePresentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceValuePresentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceValuePresentation::IsInitialized() const {
  return true;
}

void DeviceValuePresentation::Swap(DeviceValuePresentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceValuePresentation::InternalSwap(DeviceValuePresentation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  unit_designator_.Swap(&other->unit_designator_);
  swap(offset_, other->offset_);
  swap(device_value_presentation_object_id_, other->device_value_presentation_object_id_);
  swap(number_of_decimals_, other->number_of_decimals_);
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceValuePresentation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Farm::InitAsDefaultInstance() {
  ::efdi::_Farm_default_instance_._instance.get_mutable()->farm_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Farm_default_instance_._instance.get_mutable()->customer_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Farm::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Farm::kFarmIdFieldNumber;
const int Farm::kFarmDesignatorFieldNumber;
const int Farm::kFarmStreetFieldNumber;
const int Farm::kFarmPoBoxFieldNumber;
const int Farm::kFarmPostalCodeFieldNumber;
const int Farm::kFarmCityFieldNumber;
const int Farm::kFarmStateFieldNumber;
const int Farm::kFarmCountryFieldNumber;
const int Farm::kCustomerIdRefFieldNumber;
const int Farm::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Farm::Farm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsFarm();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Farm)
}
Farm::Farm(const Farm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  farm_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_designator().size() > 0) {
    farm_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_designator_);
  }
  farm_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_street().size() > 0) {
    farm_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_street_);
  }
  farm_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_po_box().size() > 0) {
    farm_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_po_box_);
  }
  farm_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_postal_code().size() > 0) {
    farm_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_postal_code_);
  }
  farm_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_city().size() > 0) {
    farm_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_city_);
  }
  farm_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_state().size() > 0) {
    farm_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_state_);
  }
  farm_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.farm_country().size() > 0) {
    farm_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_country_);
  }
  if (from.has_farm_id()) {
    farm_id_ = new ::efdi::UID(*from.farm_id_);
  } else {
    farm_id_ = NULL;
  }
  if (from.has_customer_id_ref()) {
    customer_id_ref_ = new ::efdi::UID(*from.customer_id_ref_);
  } else {
    customer_id_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.Farm)
}

void Farm::SharedCtor() {
  farm_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&farm_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&customer_id_ref_) -
      reinterpret_cast<char*>(&farm_id_)) + sizeof(customer_id_ref_));
  _cached_size_ = 0;
}

Farm::~Farm() {
  // @@protoc_insertion_point(destructor:efdi.Farm)
  SharedDtor();
}

void Farm::SharedDtor() {
  farm_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_po_box_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete farm_id_;
  if (this != internal_default_instance()) delete customer_id_ref_;
}

void Farm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Farm::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Farm& Farm::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsFarm();
  return *internal_default_instance();
}

Farm* Farm::New(::google::protobuf::Arena* arena) const {
  Farm* n = new Farm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Farm::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Farm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  farm_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_po_box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  farm_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && farm_id_ != NULL) {
    delete farm_id_;
  }
  farm_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && customer_id_ref_ != NULL) {
    delete customer_id_ref_;
  }
  customer_id_ref_ = NULL;
  _internal_metadata_.Clear();
}

bool Farm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Farm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID farm_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_farm_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_designator().data(), static_cast<int>(this->farm_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_street = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_street()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_street().data(), static_cast<int>(this->farm_street().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_street"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_po_box = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_po_box()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_po_box().data(), static_cast<int>(this->farm_po_box().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_po_box"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_postal_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_postal_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_postal_code().data(), static_cast<int>(this->farm_postal_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_postal_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_city = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_city().data(), static_cast<int>(this->farm_city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_state().data(), static_cast<int>(this->farm_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string farm_country = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_farm_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->farm_country().data(), static_cast<int>(this->farm_country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Farm.farm_country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID customer_id_ref = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Farm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Farm)
  return false;
#undef DO_
}

void Farm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Farm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID farm_id = 1;
  if (this->has_farm_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->farm_id_, output);
  }

  // string farm_designator = 2;
  if (this->farm_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_designator().data(), static_cast<int>(this->farm_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->farm_designator(), output);
  }

  // string farm_street = 3;
  if (this->farm_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_street().data(), static_cast<int>(this->farm_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->farm_street(), output);
  }

  // string farm_po_box = 4;
  if (this->farm_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_po_box().data(), static_cast<int>(this->farm_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_po_box");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->farm_po_box(), output);
  }

  // string farm_postal_code = 5;
  if (this->farm_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_postal_code().data(), static_cast<int>(this->farm_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_postal_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->farm_postal_code(), output);
  }

  // string farm_city = 6;
  if (this->farm_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_city().data(), static_cast<int>(this->farm_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->farm_city(), output);
  }

  // string farm_state = 7;
  if (this->farm_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_state().data(), static_cast<int>(this->farm_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->farm_state(), output);
  }

  // string farm_country = 8;
  if (this->farm_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_country().data(), static_cast<int>(this->farm_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->farm_country(), output);
  }

  // .efdi.UID customer_id_ref = 9;
  if (this->has_customer_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->customer_id_ref_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Farm)
}

::google::protobuf::uint8* Farm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Farm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID farm_id = 1;
  if (this->has_farm_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->farm_id_, deterministic, target);
  }

  // string farm_designator = 2;
  if (this->farm_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_designator().data(), static_cast<int>(this->farm_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->farm_designator(), target);
  }

  // string farm_street = 3;
  if (this->farm_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_street().data(), static_cast<int>(this->farm_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->farm_street(), target);
  }

  // string farm_po_box = 4;
  if (this->farm_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_po_box().data(), static_cast<int>(this->farm_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_po_box");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->farm_po_box(), target);
  }

  // string farm_postal_code = 5;
  if (this->farm_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_postal_code().data(), static_cast<int>(this->farm_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_postal_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->farm_postal_code(), target);
  }

  // string farm_city = 6;
  if (this->farm_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_city().data(), static_cast<int>(this->farm_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->farm_city(), target);
  }

  // string farm_state = 7;
  if (this->farm_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_state().data(), static_cast<int>(this->farm_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->farm_state(), target);
  }

  // string farm_country = 8;
  if (this->farm_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->farm_country().data(), static_cast<int>(this->farm_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Farm.farm_country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->farm_country(), target);
  }

  // .efdi.UID customer_id_ref = 9;
  if (this->has_customer_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->customer_id_ref_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Farm)
  return target;
}

size_t Farm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Farm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string farm_designator = 2;
  if (this->farm_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_designator());
  }

  // string farm_street = 3;
  if (this->farm_street().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_street());
  }

  // string farm_po_box = 4;
  if (this->farm_po_box().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_po_box());
  }

  // string farm_postal_code = 5;
  if (this->farm_postal_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_postal_code());
  }

  // string farm_city = 6;
  if (this->farm_city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_city());
  }

  // string farm_state = 7;
  if (this->farm_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_state());
  }

  // string farm_country = 8;
  if (this->farm_country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->farm_country());
  }

  // .efdi.UID farm_id = 1;
  if (this->has_farm_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->farm_id_);
  }

  // .efdi.UID customer_id_ref = 9;
  if (this->has_customer_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->customer_id_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Farm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Farm)
  GOOGLE_DCHECK_NE(&from, this);
  const Farm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Farm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Farm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Farm)
    MergeFrom(*source);
  }
}

void Farm::MergeFrom(const Farm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Farm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.farm_designator().size() > 0) {

    farm_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_designator_);
  }
  if (from.farm_street().size() > 0) {

    farm_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_street_);
  }
  if (from.farm_po_box().size() > 0) {

    farm_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_po_box_);
  }
  if (from.farm_postal_code().size() > 0) {

    farm_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_postal_code_);
  }
  if (from.farm_city().size() > 0) {

    farm_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_city_);
  }
  if (from.farm_state().size() > 0) {

    farm_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_state_);
  }
  if (from.farm_country().size() > 0) {

    farm_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.farm_country_);
  }
  if (from.has_farm_id()) {
    mutable_farm_id()->::efdi::UID::MergeFrom(from.farm_id());
  }
  if (from.has_customer_id_ref()) {
    mutable_customer_id_ref()->::efdi::UID::MergeFrom(from.customer_id_ref());
  }
}

void Farm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Farm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Farm::CopyFrom(const Farm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Farm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Farm::IsInitialized() const {
  return true;
}

void Farm::Swap(Farm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Farm::InternalSwap(Farm* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  farm_designator_.Swap(&other->farm_designator_);
  farm_street_.Swap(&other->farm_street_);
  farm_po_box_.Swap(&other->farm_po_box_);
  farm_postal_code_.Swap(&other->farm_postal_code_);
  farm_city_.Swap(&other->farm_city_);
  farm_state_.Swap(&other->farm_state_);
  farm_country_.Swap(&other->farm_country_);
  swap(farm_id_, other->farm_id_);
  swap(customer_id_ref_, other->customer_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Farm::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Grid::InitAsDefaultInstance() {
  ::efdi::_Grid_default_instance_._instance.get_mutable()->filename_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Grid::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Grid::kGridMinimumNorthPositionFieldNumber;
const int Grid::kGridMinimumEastPositionFieldNumber;
const int Grid::kGridCellNorthSizeFieldNumber;
const int Grid::kGridCellEastSizeFieldNumber;
const int Grid::kGridMaximumColumnFieldNumber;
const int Grid::kGridMaximumRowFieldNumber;
const int Grid::kFilenameFieldNumber;
const int Grid::kFilelengthFieldNumber;
const int Grid::kGridTypeFieldNumber;
const int Grid::kTreatmentZoneCodeFieldNumber;
const int Grid::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Grid::Grid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGrid();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Grid)
}
Grid::Grid(const Grid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filename()) {
    filename_ = new ::efdi::UID(*from.filename_);
  } else {
    filename_ = NULL;
  }
  ::memcpy(&grid_minimum_north_position_, &from.grid_minimum_north_position_,
    static_cast<size_t>(reinterpret_cast<char*>(&treatment_zone_code_) -
    reinterpret_cast<char*>(&grid_minimum_north_position_)) + sizeof(treatment_zone_code_));
  // @@protoc_insertion_point(copy_constructor:efdi.Grid)
}

void Grid::SharedCtor() {
  ::memset(&filename_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treatment_zone_code_) -
      reinterpret_cast<char*>(&filename_)) + sizeof(treatment_zone_code_));
  _cached_size_ = 0;
}

Grid::~Grid() {
  // @@protoc_insertion_point(destructor:efdi.Grid)
  SharedDtor();
}

void Grid::SharedDtor() {
  if (this != internal_default_instance()) delete filename_;
}

void Grid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Grid::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Grid& Grid::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGrid();
  return *internal_default_instance();
}

Grid* Grid::New(::google::protobuf::Arena* arena) const {
  Grid* n = new Grid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Grid::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && filename_ != NULL) {
    delete filename_;
  }
  filename_ = NULL;
  ::memset(&grid_minimum_north_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treatment_zone_code_) -
      reinterpret_cast<char*>(&grid_minimum_north_position_)) + sizeof(treatment_zone_code_));
  _internal_metadata_.Clear();
}

bool Grid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Grid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double grid_minimum_north_position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_minimum_north_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double grid_minimum_east_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_minimum_east_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double grid_cell_north_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_cell_north_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double grid_cell_east_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_cell_east_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 grid_maximum_column = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &grid_maximum_column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 grid_maximum_row = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &grid_maximum_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID filename = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 filelength = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Grid.GridType grid_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_grid_type(static_cast< ::efdi::Grid_GridType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 treatment_zone_code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treatment_zone_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Grid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Grid)
  return false;
#undef DO_
}

void Grid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double grid_minimum_north_position = 1;
  if (this->grid_minimum_north_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->grid_minimum_north_position(), output);
  }

  // double grid_minimum_east_position = 2;
  if (this->grid_minimum_east_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->grid_minimum_east_position(), output);
  }

  // double grid_cell_north_size = 3;
  if (this->grid_cell_north_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->grid_cell_north_size(), output);
  }

  // double grid_cell_east_size = 4;
  if (this->grid_cell_east_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->grid_cell_east_size(), output);
  }

  // uint64 grid_maximum_column = 5;
  if (this->grid_maximum_column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->grid_maximum_column(), output);
  }

  // uint64 grid_maximum_row = 6;
  if (this->grid_maximum_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->grid_maximum_row(), output);
  }

  // .efdi.UID filename = 7;
  if (this->has_filename()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->filename_, output);
  }

  // uint64 filelength = 8;
  if (this->filelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->filelength(), output);
  }

  // .efdi.Grid.GridType grid_type = 9;
  if (this->grid_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->grid_type(), output);
  }

  // uint32 treatment_zone_code = 10;
  if (this->treatment_zone_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->treatment_zone_code(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Grid)
}

::google::protobuf::uint8* Grid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double grid_minimum_north_position = 1;
  if (this->grid_minimum_north_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->grid_minimum_north_position(), target);
  }

  // double grid_minimum_east_position = 2;
  if (this->grid_minimum_east_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->grid_minimum_east_position(), target);
  }

  // double grid_cell_north_size = 3;
  if (this->grid_cell_north_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->grid_cell_north_size(), target);
  }

  // double grid_cell_east_size = 4;
  if (this->grid_cell_east_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->grid_cell_east_size(), target);
  }

  // uint64 grid_maximum_column = 5;
  if (this->grid_maximum_column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->grid_maximum_column(), target);
  }

  // uint64 grid_maximum_row = 6;
  if (this->grid_maximum_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->grid_maximum_row(), target);
  }

  // .efdi.UID filename = 7;
  if (this->has_filename()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->filename_, deterministic, target);
  }

  // uint64 filelength = 8;
  if (this->filelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->filelength(), target);
  }

  // .efdi.Grid.GridType grid_type = 9;
  if (this->grid_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->grid_type(), target);
  }

  // uint32 treatment_zone_code = 10;
  if (this->treatment_zone_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->treatment_zone_code(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Grid)
  return target;
}

size_t Grid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Grid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID filename = 7;
  if (this->has_filename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filename_);
  }

  // double grid_minimum_north_position = 1;
  if (this->grid_minimum_north_position() != 0) {
    total_size += 1 + 8;
  }

  // double grid_minimum_east_position = 2;
  if (this->grid_minimum_east_position() != 0) {
    total_size += 1 + 8;
  }

  // double grid_cell_north_size = 3;
  if (this->grid_cell_north_size() != 0) {
    total_size += 1 + 8;
  }

  // double grid_cell_east_size = 4;
  if (this->grid_cell_east_size() != 0) {
    total_size += 1 + 8;
  }

  // uint64 grid_maximum_column = 5;
  if (this->grid_maximum_column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->grid_maximum_column());
  }

  // uint64 grid_maximum_row = 6;
  if (this->grid_maximum_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->grid_maximum_row());
  }

  // uint64 filelength = 8;
  if (this->filelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filelength());
  }

  // .efdi.Grid.GridType grid_type = 9;
  if (this->grid_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->grid_type());
  }

  // uint32 treatment_zone_code = 10;
  if (this->treatment_zone_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treatment_zone_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Grid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Grid)
  GOOGLE_DCHECK_NE(&from, this);
  const Grid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Grid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Grid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Grid)
    MergeFrom(*source);
  }
}

void Grid::MergeFrom(const Grid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Grid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_filename()) {
    mutable_filename()->::efdi::UID::MergeFrom(from.filename());
  }
  if (from.grid_minimum_north_position() != 0) {
    set_grid_minimum_north_position(from.grid_minimum_north_position());
  }
  if (from.grid_minimum_east_position() != 0) {
    set_grid_minimum_east_position(from.grid_minimum_east_position());
  }
  if (from.grid_cell_north_size() != 0) {
    set_grid_cell_north_size(from.grid_cell_north_size());
  }
  if (from.grid_cell_east_size() != 0) {
    set_grid_cell_east_size(from.grid_cell_east_size());
  }
  if (from.grid_maximum_column() != 0) {
    set_grid_maximum_column(from.grid_maximum_column());
  }
  if (from.grid_maximum_row() != 0) {
    set_grid_maximum_row(from.grid_maximum_row());
  }
  if (from.filelength() != 0) {
    set_filelength(from.filelength());
  }
  if (from.grid_type() != 0) {
    set_grid_type(from.grid_type());
  }
  if (from.treatment_zone_code() != 0) {
    set_treatment_zone_code(from.treatment_zone_code());
  }
}

void Grid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Grid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grid::CopyFrom(const Grid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Grid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid::IsInitialized() const {
  return true;
}

void Grid::Swap(Grid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Grid::InternalSwap(Grid* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(filename_, other->filename_);
  swap(grid_minimum_north_position_, other->grid_minimum_north_position_);
  swap(grid_minimum_east_position_, other->grid_minimum_east_position_);
  swap(grid_cell_north_size_, other->grid_cell_north_size_);
  swap(grid_cell_east_size_, other->grid_cell_east_size_);
  swap(grid_maximum_column_, other->grid_maximum_column_);
  swap(grid_maximum_row_, other->grid_maximum_row_);
  swap(filelength_, other->filelength_);
  swap(grid_type_, other->grid_type_);
  swap(treatment_zone_code_, other->treatment_zone_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Grid::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuidanceAllocation::InitAsDefaultInstance() {
  ::efdi::_GuidanceAllocation_default_instance_._instance.get_mutable()->guidance_group_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_GuidanceAllocation_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void GuidanceAllocation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuidanceAllocation::kGuidanceGroupIdRefFieldNumber;
const int GuidanceAllocation::kAllocationStampFieldNumber;
const int GuidanceAllocation::kGuidanceShiftFieldNumber;
const int GuidanceAllocation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuidanceAllocation::GuidanceAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceAllocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.GuidanceAllocation)
}
GuidanceAllocation::GuidanceAllocation(const GuidanceAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guidance_shift_(from.guidance_shift_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guidance_group_id_ref()) {
    guidance_group_id_ref_ = new ::efdi::UID(*from.guidance_group_id_ref_);
  } else {
    guidance_group_id_ref_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.GuidanceAllocation)
}

void GuidanceAllocation::SharedCtor() {
  ::memset(&guidance_group_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allocation_stamp_) -
      reinterpret_cast<char*>(&guidance_group_id_ref_)) + sizeof(allocation_stamp_));
  _cached_size_ = 0;
}

GuidanceAllocation::~GuidanceAllocation() {
  // @@protoc_insertion_point(destructor:efdi.GuidanceAllocation)
  SharedDtor();
}

void GuidanceAllocation::SharedDtor() {
  if (this != internal_default_instance()) delete guidance_group_id_ref_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void GuidanceAllocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuidanceAllocation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuidanceAllocation& GuidanceAllocation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceAllocation();
  return *internal_default_instance();
}

GuidanceAllocation* GuidanceAllocation::New(::google::protobuf::Arena* arena) const {
  GuidanceAllocation* n = new GuidanceAllocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuidanceAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.GuidanceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guidance_shift_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && guidance_group_id_ref_ != NULL) {
    delete guidance_group_id_ref_;
  }
  guidance_group_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  _internal_metadata_.Clear();
}

bool GuidanceAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.GuidanceAllocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID guidance_group_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_group_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.GuidanceShift guidance_shift = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_guidance_shift()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.GuidanceAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.GuidanceAllocation)
  return false;
#undef DO_
}

void GuidanceAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.GuidanceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guidance_group_id_ref_, output);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->allocation_stamp_, output);
  }

  // repeated .efdi.GuidanceShift guidance_shift = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_shift_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->guidance_shift(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.GuidanceAllocation)
}

::google::protobuf::uint8* GuidanceAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.GuidanceAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->guidance_group_id_ref_, deterministic, target);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .efdi.GuidanceShift guidance_shift = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_shift_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->guidance_shift(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.GuidanceAllocation)
  return target;
}

size_t GuidanceAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.GuidanceAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.GuidanceShift guidance_shift = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->guidance_shift_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guidance_shift(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guidance_group_id_ref_);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuidanceAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.GuidanceAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const GuidanceAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuidanceAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.GuidanceAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.GuidanceAllocation)
    MergeFrom(*source);
  }
}

void GuidanceAllocation::MergeFrom(const GuidanceAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.GuidanceAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guidance_shift_.MergeFrom(from.guidance_shift_);
  extension_.MergeFrom(from.extension_);
  if (from.has_guidance_group_id_ref()) {
    mutable_guidance_group_id_ref()->::efdi::UID::MergeFrom(from.guidance_group_id_ref());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
}

void GuidanceAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.GuidanceAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuidanceAllocation::CopyFrom(const GuidanceAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.GuidanceAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuidanceAllocation::IsInitialized() const {
  return true;
}

void GuidanceAllocation::Swap(GuidanceAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuidanceAllocation::InternalSwap(GuidanceAllocation* other) {
  using std::swap;
  guidance_shift_.InternalSwap(&other->guidance_shift_);
  extension_.InternalSwap(&other->extension_);
  swap(guidance_group_id_ref_, other->guidance_group_id_ref_);
  swap(allocation_stamp_, other->allocation_stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuidanceAllocation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuidanceGroup::InitAsDefaultInstance() {
  ::efdi::_GuidanceGroup_default_instance_._instance.get_mutable()->guidance_group_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void GuidanceGroup::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuidanceGroup::kGuidanceGroupIdFieldNumber;
const int GuidanceGroup::kGuidanceGroupDesignatorFieldNumber;
const int GuidanceGroup::kGuidancePatternFieldNumber;
const int GuidanceGroup::kBoundaryPolygonFieldNumber;
const int GuidanceGroup::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuidanceGroup::GuidanceGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.GuidanceGroup)
}
GuidanceGroup::GuidanceGroup(const GuidanceGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guidance_pattern_(from.guidance_pattern_),
      boundary_polygon_(from.boundary_polygon_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guidance_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guidance_group_designator().size() > 0) {
    guidance_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guidance_group_designator_);
  }
  if (from.has_guidance_group_id()) {
    guidance_group_id_ = new ::efdi::UID(*from.guidance_group_id_);
  } else {
    guidance_group_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.GuidanceGroup)
}

void GuidanceGroup::SharedCtor() {
  guidance_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guidance_group_id_ = NULL;
  _cached_size_ = 0;
}

GuidanceGroup::~GuidanceGroup() {
  // @@protoc_insertion_point(destructor:efdi.GuidanceGroup)
  SharedDtor();
}

void GuidanceGroup::SharedDtor() {
  guidance_group_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete guidance_group_id_;
}

void GuidanceGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuidanceGroup::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuidanceGroup& GuidanceGroup::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceGroup();
  return *internal_default_instance();
}

GuidanceGroup* GuidanceGroup::New(::google::protobuf::Arena* arena) const {
  GuidanceGroup* n = new GuidanceGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuidanceGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.GuidanceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guidance_pattern_.Clear();
  boundary_polygon_.Clear();
  extension_.Clear();
  guidance_group_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && guidance_group_id_ != NULL) {
    delete guidance_group_id_;
  }
  guidance_group_id_ = NULL;
  _internal_metadata_.Clear();
}

bool GuidanceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.GuidanceGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID guidance_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guidance_group_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guidance_group_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guidance_group_designator().data(), static_cast<int>(this->guidance_group_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.GuidanceGroup.guidance_group_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.GuidancePattern guidance_pattern = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_guidance_pattern()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Polygon boundary_polygon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_boundary_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.GuidanceGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.GuidanceGroup)
  return false;
#undef DO_
}

void GuidanceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.GuidanceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id = 1;
  if (this->has_guidance_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guidance_group_id_, output);
  }

  // string guidance_group_designator = 2;
  if (this->guidance_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guidance_group_designator().data(), static_cast<int>(this->guidance_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidanceGroup.guidance_group_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guidance_group_designator(), output);
  }

  // repeated .efdi.GuidancePattern guidance_pattern = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_pattern_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->guidance_pattern(static_cast<int>(i)), output);
  }

  // repeated .efdi.Polygon boundary_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->boundary_polygon(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.GuidanceGroup)
}

::google::protobuf::uint8* GuidanceGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.GuidanceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id = 1;
  if (this->has_guidance_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->guidance_group_id_, deterministic, target);
  }

  // string guidance_group_designator = 2;
  if (this->guidance_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guidance_group_designator().data(), static_cast<int>(this->guidance_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidanceGroup.guidance_group_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guidance_group_designator(), target);
  }

  // repeated .efdi.GuidancePattern guidance_pattern = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_pattern_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->guidance_pattern(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Polygon boundary_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->boundary_polygon(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.GuidanceGroup)
  return target;
}

size_t GuidanceGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.GuidanceGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.GuidancePattern guidance_pattern = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->guidance_pattern_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guidance_pattern(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Polygon boundary_polygon = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary_polygon(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string guidance_group_designator = 2;
  if (this->guidance_group_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guidance_group_designator());
  }

  // .efdi.UID guidance_group_id = 1;
  if (this->has_guidance_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guidance_group_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuidanceGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.GuidanceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const GuidanceGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuidanceGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.GuidanceGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.GuidanceGroup)
    MergeFrom(*source);
  }
}

void GuidanceGroup::MergeFrom(const GuidanceGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.GuidanceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guidance_pattern_.MergeFrom(from.guidance_pattern_);
  boundary_polygon_.MergeFrom(from.boundary_polygon_);
  extension_.MergeFrom(from.extension_);
  if (from.guidance_group_designator().size() > 0) {

    guidance_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guidance_group_designator_);
  }
  if (from.has_guidance_group_id()) {
    mutable_guidance_group_id()->::efdi::UID::MergeFrom(from.guidance_group_id());
  }
}

void GuidanceGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.GuidanceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuidanceGroup::CopyFrom(const GuidanceGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.GuidanceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuidanceGroup::IsInitialized() const {
  return true;
}

void GuidanceGroup::Swap(GuidanceGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuidanceGroup::InternalSwap(GuidanceGroup* other) {
  using std::swap;
  guidance_pattern_.InternalSwap(&other->guidance_pattern_);
  boundary_polygon_.InternalSwap(&other->boundary_polygon_);
  extension_.InternalSwap(&other->extension_);
  guidance_group_designator_.Swap(&other->guidance_group_designator_);
  swap(guidance_group_id_, other->guidance_group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuidanceGroup::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuidancePattern::InitAsDefaultInstance() {
  ::efdi::_GuidancePattern_default_instance_._instance.get_mutable()->guidance_pattern_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_GuidancePattern_default_instance_._instance.get_mutable()->base_station_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_GuidancePattern_default_instance_._instance.get_mutable()->line_string_ = const_cast< ::efdi::LineString*>(
      ::efdi::LineString::internal_default_instance());
}
void GuidancePattern::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuidancePattern::kGuidancePatternIdFieldNumber;
const int GuidancePattern::kGuidancePatternDesignatorFieldNumber;
const int GuidancePattern::kGuidancePatternTypeFieldNumber;
const int GuidancePattern::kGuidancePatternOptionsFieldNumber;
const int GuidancePattern::kGuidancePatternPropagationDirectionFieldNumber;
const int GuidancePattern::kGuidancePatternExtensionFieldNumber;
const int GuidancePattern::kGuidancePatternHeadingFieldNumber;
const int GuidancePattern::kGuidancePatternRadiusFieldNumber;
const int GuidancePattern::kGuidancePatternGnssMethodFieldNumber;
const int GuidancePattern::kGuidancePatternHorizontalAccuracyFieldNumber;
const int GuidancePattern::kGuidancePatternVerticalAccuracyFieldNumber;
const int GuidancePattern::kBaseStationIdRefFieldNumber;
const int GuidancePattern::kOriginalSridFieldNumber;
const int GuidancePattern::kNumberOfSwathsLeftFieldNumber;
const int GuidancePattern::kNumberOfSwathsRightFieldNumber;
const int GuidancePattern::kLineStringFieldNumber;
const int GuidancePattern::kBoundaryPolygonFieldNumber;
const int GuidancePattern::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuidancePattern::GuidancePattern()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidancePattern();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.GuidancePattern)
}
GuidancePattern::GuidancePattern(const GuidancePattern& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      boundary_polygon_(from.boundary_polygon_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guidance_pattern_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guidance_pattern_designator().size() > 0) {
    guidance_pattern_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guidance_pattern_designator_);
  }
  original_srid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_srid().size() > 0) {
    original_srid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_srid_);
  }
  if (from.has_guidance_pattern_id()) {
    guidance_pattern_id_ = new ::efdi::UID(*from.guidance_pattern_id_);
  } else {
    guidance_pattern_id_ = NULL;
  }
  if (from.has_base_station_id_ref()) {
    base_station_id_ref_ = new ::efdi::UID(*from.base_station_id_ref_);
  } else {
    base_station_id_ref_ = NULL;
  }
  if (from.has_line_string()) {
    line_string_ = new ::efdi::LineString(*from.line_string_);
  } else {
    line_string_ = NULL;
  }
  ::memcpy(&guidance_pattern_type_, &from.guidance_pattern_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&guidance_pattern_gnss_method_) -
    reinterpret_cast<char*>(&guidance_pattern_type_)) + sizeof(guidance_pattern_gnss_method_));
  // @@protoc_insertion_point(copy_constructor:efdi.GuidancePattern)
}

void GuidancePattern::SharedCtor() {
  guidance_pattern_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_srid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guidance_pattern_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guidance_pattern_gnss_method_) -
      reinterpret_cast<char*>(&guidance_pattern_id_)) + sizeof(guidance_pattern_gnss_method_));
  _cached_size_ = 0;
}

GuidancePattern::~GuidancePattern() {
  // @@protoc_insertion_point(destructor:efdi.GuidancePattern)
  SharedDtor();
}

void GuidancePattern::SharedDtor() {
  guidance_pattern_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_srid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete guidance_pattern_id_;
  if (this != internal_default_instance()) delete base_station_id_ref_;
  if (this != internal_default_instance()) delete line_string_;
}

void GuidancePattern::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuidancePattern::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuidancePattern& GuidancePattern::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidancePattern();
  return *internal_default_instance();
}

GuidancePattern* GuidancePattern::New(::google::protobuf::Arena* arena) const {
  GuidancePattern* n = new GuidancePattern;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuidancePattern::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.GuidancePattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boundary_polygon_.Clear();
  extension_.Clear();
  guidance_pattern_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_srid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && guidance_pattern_id_ != NULL) {
    delete guidance_pattern_id_;
  }
  guidance_pattern_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_station_id_ref_ != NULL) {
    delete base_station_id_ref_;
  }
  base_station_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && line_string_ != NULL) {
    delete line_string_;
  }
  line_string_ = NULL;
  ::memset(&guidance_pattern_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guidance_pattern_gnss_method_) -
      reinterpret_cast<char*>(&guidance_pattern_type_)) + sizeof(guidance_pattern_gnss_method_));
  _internal_metadata_.Clear();
}

bool GuidancePattern::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.GuidancePattern)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID guidance_pattern_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_pattern_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guidance_pattern_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guidance_pattern_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guidance_pattern_designator().data(), static_cast<int>(this->guidance_pattern_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.GuidancePattern.guidance_pattern_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.GuidancePattern.GuidancePatternType guidance_pattern_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guidance_pattern_type(static_cast< ::efdi::GuidancePattern_GuidancePatternType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.GuidancePattern.GuidancePatternOptions guidance_pattern_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guidance_pattern_options(static_cast< ::efdi::GuidancePattern_GuidancePatternOptions >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.GuidancePattern.GuidancePatternPropagationDirection guidance_pattern_propagation_direction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guidance_pattern_propagation_direction(static_cast< ::efdi::GuidancePattern_GuidancePatternPropagationDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.GuidancePattern.GuidancePatternExtension guidance_pattern_extension = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guidance_pattern_extension(static_cast< ::efdi::GuidancePattern_GuidancePatternExtension >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double guidance_pattern_heading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &guidance_pattern_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guidance_pattern_radius = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guidance_pattern_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.GuidancePattern.GuidancePatternGNSSMethod guidance_pattern_gnss_method = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guidance_pattern_gnss_method(static_cast< ::efdi::GuidancePattern_GuidancePatternGNSSMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double guidance_pattern_horizontal_accuracy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &guidance_pattern_horizontal_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double guidance_pattern_vertical_accuracy = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &guidance_pattern_vertical_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID base_station_id_ref = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_station_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_srid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_srid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_srid().data(), static_cast<int>(this->original_srid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.GuidancePattern.original_srid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 number_of_swaths_left = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &number_of_swaths_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 number_of_swaths_right = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &number_of_swaths_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.LineString line_string = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Polygon boundary_polygon = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_boundary_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.GuidancePattern)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.GuidancePattern)
  return false;
#undef DO_
}

void GuidancePattern::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.GuidancePattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_pattern_id = 1;
  if (this->has_guidance_pattern_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guidance_pattern_id_, output);
  }

  // string guidance_pattern_designator = 2;
  if (this->guidance_pattern_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guidance_pattern_designator().data(), static_cast<int>(this->guidance_pattern_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidancePattern.guidance_pattern_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guidance_pattern_designator(), output);
  }

  // .efdi.GuidancePattern.GuidancePatternType guidance_pattern_type = 3;
  if (this->guidance_pattern_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->guidance_pattern_type(), output);
  }

  // .efdi.GuidancePattern.GuidancePatternOptions guidance_pattern_options = 4;
  if (this->guidance_pattern_options() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->guidance_pattern_options(), output);
  }

  // .efdi.GuidancePattern.GuidancePatternPropagationDirection guidance_pattern_propagation_direction = 5;
  if (this->guidance_pattern_propagation_direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->guidance_pattern_propagation_direction(), output);
  }

  // .efdi.GuidancePattern.GuidancePatternExtension guidance_pattern_extension = 6;
  if (this->guidance_pattern_extension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->guidance_pattern_extension(), output);
  }

  // double guidance_pattern_heading = 7;
  if (this->guidance_pattern_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->guidance_pattern_heading(), output);
  }

  // uint64 guidance_pattern_radius = 8;
  if (this->guidance_pattern_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->guidance_pattern_radius(), output);
  }

  // .efdi.GuidancePattern.GuidancePatternGNSSMethod guidance_pattern_gnss_method = 9;
  if (this->guidance_pattern_gnss_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->guidance_pattern_gnss_method(), output);
  }

  // double guidance_pattern_horizontal_accuracy = 10;
  if (this->guidance_pattern_horizontal_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->guidance_pattern_horizontal_accuracy(), output);
  }

  // double guidance_pattern_vertical_accuracy = 11;
  if (this->guidance_pattern_vertical_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->guidance_pattern_vertical_accuracy(), output);
  }

  // .efdi.UID base_station_id_ref = 12;
  if (this->has_base_station_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->base_station_id_ref_, output);
  }

  // string original_srid = 13;
  if (this->original_srid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_srid().data(), static_cast<int>(this->original_srid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidancePattern.original_srid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->original_srid(), output);
  }

  // uint64 number_of_swaths_left = 14;
  if (this->number_of_swaths_left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->number_of_swaths_left(), output);
  }

  // uint64 number_of_swaths_right = 15;
  if (this->number_of_swaths_right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->number_of_swaths_right(), output);
  }

  // .efdi.LineString line_string = 16;
  if (this->has_line_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->line_string_, output);
  }

  // repeated .efdi.Polygon boundary_polygon = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->boundary_polygon(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.GuidancePattern)
}

::google::protobuf::uint8* GuidancePattern::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.GuidancePattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_pattern_id = 1;
  if (this->has_guidance_pattern_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->guidance_pattern_id_, deterministic, target);
  }

  // string guidance_pattern_designator = 2;
  if (this->guidance_pattern_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guidance_pattern_designator().data(), static_cast<int>(this->guidance_pattern_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidancePattern.guidance_pattern_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guidance_pattern_designator(), target);
  }

  // .efdi.GuidancePattern.GuidancePatternType guidance_pattern_type = 3;
  if (this->guidance_pattern_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->guidance_pattern_type(), target);
  }

  // .efdi.GuidancePattern.GuidancePatternOptions guidance_pattern_options = 4;
  if (this->guidance_pattern_options() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->guidance_pattern_options(), target);
  }

  // .efdi.GuidancePattern.GuidancePatternPropagationDirection guidance_pattern_propagation_direction = 5;
  if (this->guidance_pattern_propagation_direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->guidance_pattern_propagation_direction(), target);
  }

  // .efdi.GuidancePattern.GuidancePatternExtension guidance_pattern_extension = 6;
  if (this->guidance_pattern_extension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->guidance_pattern_extension(), target);
  }

  // double guidance_pattern_heading = 7;
  if (this->guidance_pattern_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->guidance_pattern_heading(), target);
  }

  // uint64 guidance_pattern_radius = 8;
  if (this->guidance_pattern_radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->guidance_pattern_radius(), target);
  }

  // .efdi.GuidancePattern.GuidancePatternGNSSMethod guidance_pattern_gnss_method = 9;
  if (this->guidance_pattern_gnss_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->guidance_pattern_gnss_method(), target);
  }

  // double guidance_pattern_horizontal_accuracy = 10;
  if (this->guidance_pattern_horizontal_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->guidance_pattern_horizontal_accuracy(), target);
  }

  // double guidance_pattern_vertical_accuracy = 11;
  if (this->guidance_pattern_vertical_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->guidance_pattern_vertical_accuracy(), target);
  }

  // .efdi.UID base_station_id_ref = 12;
  if (this->has_base_station_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->base_station_id_ref_, deterministic, target);
  }

  // string original_srid = 13;
  if (this->original_srid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_srid().data(), static_cast<int>(this->original_srid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.GuidancePattern.original_srid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->original_srid(), target);
  }

  // uint64 number_of_swaths_left = 14;
  if (this->number_of_swaths_left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->number_of_swaths_left(), target);
  }

  // uint64 number_of_swaths_right = 15;
  if (this->number_of_swaths_right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->number_of_swaths_right(), target);
  }

  // .efdi.LineString line_string = 16;
  if (this->has_line_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->line_string_, deterministic, target);
  }

  // repeated .efdi.Polygon boundary_polygon = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->boundary_polygon(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.GuidancePattern)
  return target;
}

size_t GuidancePattern::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.GuidancePattern)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Polygon boundary_polygon = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_polygon_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary_polygon(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string guidance_pattern_designator = 2;
  if (this->guidance_pattern_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guidance_pattern_designator());
  }

  // string original_srid = 13;
  if (this->original_srid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_srid());
  }

  // .efdi.UID guidance_pattern_id = 1;
  if (this->has_guidance_pattern_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guidance_pattern_id_);
  }

  // .efdi.UID base_station_id_ref = 12;
  if (this->has_base_station_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_station_id_ref_);
  }

  // .efdi.LineString line_string = 16;
  if (this->has_line_string()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->line_string_);
  }

  // .efdi.GuidancePattern.GuidancePatternType guidance_pattern_type = 3;
  if (this->guidance_pattern_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guidance_pattern_type());
  }

  // .efdi.GuidancePattern.GuidancePatternOptions guidance_pattern_options = 4;
  if (this->guidance_pattern_options() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guidance_pattern_options());
  }

  // .efdi.GuidancePattern.GuidancePatternPropagationDirection guidance_pattern_propagation_direction = 5;
  if (this->guidance_pattern_propagation_direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guidance_pattern_propagation_direction());
  }

  // .efdi.GuidancePattern.GuidancePatternExtension guidance_pattern_extension = 6;
  if (this->guidance_pattern_extension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guidance_pattern_extension());
  }

  // double guidance_pattern_heading = 7;
  if (this->guidance_pattern_heading() != 0) {
    total_size += 1 + 8;
  }

  // uint64 guidance_pattern_radius = 8;
  if (this->guidance_pattern_radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guidance_pattern_radius());
  }

  // double guidance_pattern_horizontal_accuracy = 10;
  if (this->guidance_pattern_horizontal_accuracy() != 0) {
    total_size += 1 + 8;
  }

  // double guidance_pattern_vertical_accuracy = 11;
  if (this->guidance_pattern_vertical_accuracy() != 0) {
    total_size += 1 + 8;
  }

  // uint64 number_of_swaths_left = 14;
  if (this->number_of_swaths_left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->number_of_swaths_left());
  }

  // uint64 number_of_swaths_right = 15;
  if (this->number_of_swaths_right() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->number_of_swaths_right());
  }

  // .efdi.GuidancePattern.GuidancePatternGNSSMethod guidance_pattern_gnss_method = 9;
  if (this->guidance_pattern_gnss_method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guidance_pattern_gnss_method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuidancePattern::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.GuidancePattern)
  GOOGLE_DCHECK_NE(&from, this);
  const GuidancePattern* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuidancePattern>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.GuidancePattern)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.GuidancePattern)
    MergeFrom(*source);
  }
}

void GuidancePattern::MergeFrom(const GuidancePattern& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.GuidancePattern)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boundary_polygon_.MergeFrom(from.boundary_polygon_);
  extension_.MergeFrom(from.extension_);
  if (from.guidance_pattern_designator().size() > 0) {

    guidance_pattern_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guidance_pattern_designator_);
  }
  if (from.original_srid().size() > 0) {

    original_srid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_srid_);
  }
  if (from.has_guidance_pattern_id()) {
    mutable_guidance_pattern_id()->::efdi::UID::MergeFrom(from.guidance_pattern_id());
  }
  if (from.has_base_station_id_ref()) {
    mutable_base_station_id_ref()->::efdi::UID::MergeFrom(from.base_station_id_ref());
  }
  if (from.has_line_string()) {
    mutable_line_string()->::efdi::LineString::MergeFrom(from.line_string());
  }
  if (from.guidance_pattern_type() != 0) {
    set_guidance_pattern_type(from.guidance_pattern_type());
  }
  if (from.guidance_pattern_options() != 0) {
    set_guidance_pattern_options(from.guidance_pattern_options());
  }
  if (from.guidance_pattern_propagation_direction() != 0) {
    set_guidance_pattern_propagation_direction(from.guidance_pattern_propagation_direction());
  }
  if (from.guidance_pattern_extension() != 0) {
    set_guidance_pattern_extension(from.guidance_pattern_extension());
  }
  if (from.guidance_pattern_heading() != 0) {
    set_guidance_pattern_heading(from.guidance_pattern_heading());
  }
  if (from.guidance_pattern_radius() != 0) {
    set_guidance_pattern_radius(from.guidance_pattern_radius());
  }
  if (from.guidance_pattern_horizontal_accuracy() != 0) {
    set_guidance_pattern_horizontal_accuracy(from.guidance_pattern_horizontal_accuracy());
  }
  if (from.guidance_pattern_vertical_accuracy() != 0) {
    set_guidance_pattern_vertical_accuracy(from.guidance_pattern_vertical_accuracy());
  }
  if (from.number_of_swaths_left() != 0) {
    set_number_of_swaths_left(from.number_of_swaths_left());
  }
  if (from.number_of_swaths_right() != 0) {
    set_number_of_swaths_right(from.number_of_swaths_right());
  }
  if (from.guidance_pattern_gnss_method() != 0) {
    set_guidance_pattern_gnss_method(from.guidance_pattern_gnss_method());
  }
}

void GuidancePattern::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.GuidancePattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuidancePattern::CopyFrom(const GuidancePattern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.GuidancePattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuidancePattern::IsInitialized() const {
  return true;
}

void GuidancePattern::Swap(GuidancePattern* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuidancePattern::InternalSwap(GuidancePattern* other) {
  using std::swap;
  boundary_polygon_.InternalSwap(&other->boundary_polygon_);
  extension_.InternalSwap(&other->extension_);
  guidance_pattern_designator_.Swap(&other->guidance_pattern_designator_);
  original_srid_.Swap(&other->original_srid_);
  swap(guidance_pattern_id_, other->guidance_pattern_id_);
  swap(base_station_id_ref_, other->base_station_id_ref_);
  swap(line_string_, other->line_string_);
  swap(guidance_pattern_type_, other->guidance_pattern_type_);
  swap(guidance_pattern_options_, other->guidance_pattern_options_);
  swap(guidance_pattern_propagation_direction_, other->guidance_pattern_propagation_direction_);
  swap(guidance_pattern_extension_, other->guidance_pattern_extension_);
  swap(guidance_pattern_heading_, other->guidance_pattern_heading_);
  swap(guidance_pattern_radius_, other->guidance_pattern_radius_);
  swap(guidance_pattern_horizontal_accuracy_, other->guidance_pattern_horizontal_accuracy_);
  swap(guidance_pattern_vertical_accuracy_, other->guidance_pattern_vertical_accuracy_);
  swap(number_of_swaths_left_, other->number_of_swaths_left_);
  swap(number_of_swaths_right_, other->number_of_swaths_right_);
  swap(guidance_pattern_gnss_method_, other->guidance_pattern_gnss_method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuidancePattern::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuidanceShift::InitAsDefaultInstance() {
  ::efdi::_GuidanceShift_default_instance_._instance.get_mutable()->guidance_group_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_GuidanceShift_default_instance_._instance.get_mutable()->guidance_pattern_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_GuidanceShift_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void GuidanceShift::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuidanceShift::kGuidanceGroupIdRefFieldNumber;
const int GuidanceShift::kGuidancePatternIdRefFieldNumber;
const int GuidanceShift::kGuidanceEastShiftFieldNumber;
const int GuidanceShift::kGuidanceNorthShiftFieldNumber;
const int GuidanceShift::kPropagationOffsetFieldNumber;
const int GuidanceShift::kAllocationStampFieldNumber;
const int GuidanceShift::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuidanceShift::GuidanceShift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceShift();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.GuidanceShift)
}
GuidanceShift::GuidanceShift(const GuidanceShift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guidance_group_id_ref()) {
    guidance_group_id_ref_ = new ::efdi::UID(*from.guidance_group_id_ref_);
  } else {
    guidance_group_id_ref_ = NULL;
  }
  if (from.has_guidance_pattern_id_ref()) {
    guidance_pattern_id_ref_ = new ::efdi::UID(*from.guidance_pattern_id_ref_);
  } else {
    guidance_pattern_id_ref_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  ::memcpy(&guidance_east_shift_, &from.guidance_east_shift_,
    static_cast<size_t>(reinterpret_cast<char*>(&propagation_offset_) -
    reinterpret_cast<char*>(&guidance_east_shift_)) + sizeof(propagation_offset_));
  // @@protoc_insertion_point(copy_constructor:efdi.GuidanceShift)
}

void GuidanceShift::SharedCtor() {
  ::memset(&guidance_group_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propagation_offset_) -
      reinterpret_cast<char*>(&guidance_group_id_ref_)) + sizeof(propagation_offset_));
  _cached_size_ = 0;
}

GuidanceShift::~GuidanceShift() {
  // @@protoc_insertion_point(destructor:efdi.GuidanceShift)
  SharedDtor();
}

void GuidanceShift::SharedDtor() {
  if (this != internal_default_instance()) delete guidance_group_id_ref_;
  if (this != internal_default_instance()) delete guidance_pattern_id_ref_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void GuidanceShift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuidanceShift::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuidanceShift& GuidanceShift::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsGuidanceShift();
  return *internal_default_instance();
}

GuidanceShift* GuidanceShift::New(::google::protobuf::Arena* arena) const {
  GuidanceShift* n = new GuidanceShift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuidanceShift::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.GuidanceShift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && guidance_group_id_ref_ != NULL) {
    delete guidance_group_id_ref_;
  }
  guidance_group_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && guidance_pattern_id_ref_ != NULL) {
    delete guidance_pattern_id_ref_;
  }
  guidance_pattern_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  ::memset(&guidance_east_shift_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propagation_offset_) -
      reinterpret_cast<char*>(&guidance_east_shift_)) + sizeof(propagation_offset_));
  _internal_metadata_.Clear();
}

bool GuidanceShift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.GuidanceShift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID guidance_group_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_group_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID guidance_pattern_id_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_pattern_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 guidance_east_shift = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &guidance_east_shift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 guidance_north_shift = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &guidance_north_shift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 propagation_offset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &propagation_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.GuidanceShift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.GuidanceShift)
  return false;
#undef DO_
}

void GuidanceShift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.GuidanceShift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guidance_group_id_ref_, output);
  }

  // .efdi.UID guidance_pattern_id_ref = 2;
  if (this->has_guidance_pattern_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->guidance_pattern_id_ref_, output);
  }

  // sint64 guidance_east_shift = 3;
  if (this->guidance_east_shift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->guidance_east_shift(), output);
  }

  // sint64 guidance_north_shift = 4;
  if (this->guidance_north_shift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->guidance_north_shift(), output);
  }

  // sint64 propagation_offset = 5;
  if (this->propagation_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->propagation_offset(), output);
  }

  // .efdi.AllocationStamp allocation_stamp = 6;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.GuidanceShift)
}

::google::protobuf::uint8* GuidanceShift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.GuidanceShift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->guidance_group_id_ref_, deterministic, target);
  }

  // .efdi.UID guidance_pattern_id_ref = 2;
  if (this->has_guidance_pattern_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->guidance_pattern_id_ref_, deterministic, target);
  }

  // sint64 guidance_east_shift = 3;
  if (this->guidance_east_shift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->guidance_east_shift(), target);
  }

  // sint64 guidance_north_shift = 4;
  if (this->guidance_north_shift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->guidance_north_shift(), target);
  }

  // sint64 propagation_offset = 5;
  if (this->propagation_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->propagation_offset(), target);
  }

  // .efdi.AllocationStamp allocation_stamp = 6;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.GuidanceShift)
  return target;
}

size_t GuidanceShift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.GuidanceShift)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID guidance_group_id_ref = 1;
  if (this->has_guidance_group_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guidance_group_id_ref_);
  }

  // .efdi.UID guidance_pattern_id_ref = 2;
  if (this->has_guidance_pattern_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guidance_pattern_id_ref_);
  }

  // .efdi.AllocationStamp allocation_stamp = 6;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  // sint64 guidance_east_shift = 3;
  if (this->guidance_east_shift() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->guidance_east_shift());
  }

  // sint64 guidance_north_shift = 4;
  if (this->guidance_north_shift() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->guidance_north_shift());
  }

  // sint64 propagation_offset = 5;
  if (this->propagation_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->propagation_offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuidanceShift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.GuidanceShift)
  GOOGLE_DCHECK_NE(&from, this);
  const GuidanceShift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuidanceShift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.GuidanceShift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.GuidanceShift)
    MergeFrom(*source);
  }
}

void GuidanceShift::MergeFrom(const GuidanceShift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.GuidanceShift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_guidance_group_id_ref()) {
    mutable_guidance_group_id_ref()->::efdi::UID::MergeFrom(from.guidance_group_id_ref());
  }
  if (from.has_guidance_pattern_id_ref()) {
    mutable_guidance_pattern_id_ref()->::efdi::UID::MergeFrom(from.guidance_pattern_id_ref());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
  if (from.guidance_east_shift() != 0) {
    set_guidance_east_shift(from.guidance_east_shift());
  }
  if (from.guidance_north_shift() != 0) {
    set_guidance_north_shift(from.guidance_north_shift());
  }
  if (from.propagation_offset() != 0) {
    set_propagation_offset(from.propagation_offset());
  }
}

void GuidanceShift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.GuidanceShift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuidanceShift::CopyFrom(const GuidanceShift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.GuidanceShift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuidanceShift::IsInitialized() const {
  return true;
}

void GuidanceShift::Swap(GuidanceShift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuidanceShift::InternalSwap(GuidanceShift* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(guidance_group_id_ref_, other->guidance_group_id_ref_);
  swap(guidance_pattern_id_ref_, other->guidance_pattern_id_ref_);
  swap(allocation_stamp_, other->allocation_stamp_);
  swap(guidance_east_shift_, other->guidance_east_shift_);
  swap(guidance_north_shift_, other->guidance_north_shift_);
  swap(propagation_offset_, other->propagation_offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuidanceShift::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ISO11783_TaskData::InitAsDefaultInstance() {
}
void ISO11783_TaskData::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ISO11783_TaskData::kVersionMajorFieldNumber;
const int ISO11783_TaskData::kVersionMinorFieldNumber;
const int ISO11783_TaskData::kManagementSoftwareManufacturerFieldNumber;
const int ISO11783_TaskData::kManagementSoftwareVersionFieldNumber;
const int ISO11783_TaskData::kTaskControllerManufacturerFieldNumber;
const int ISO11783_TaskData::kTaskControllerVersionFieldNumber;
const int ISO11783_TaskData::kDataTransferOriginFieldNumber;
const int ISO11783_TaskData::kDataTransferLanguageFieldNumber;
const int ISO11783_TaskData::kAttachedFileFieldNumber;
const int ISO11783_TaskData::kBaseStationFieldNumber;
const int ISO11783_TaskData::kCodedCommentFieldNumber;
const int ISO11783_TaskData::kCodedCommentGroupFieldNumber;
const int ISO11783_TaskData::kColourLegendFieldNumber;
const int ISO11783_TaskData::kCropTypeFieldNumber;
const int ISO11783_TaskData::kCulturalPracticeFieldNumber;
const int ISO11783_TaskData::kCustomerFieldNumber;
const int ISO11783_TaskData::kDeviceFieldNumber;
const int ISO11783_TaskData::kFarmFieldNumber;
const int ISO11783_TaskData::kOperationTechniqueFieldNumber;
const int ISO11783_TaskData::kPartfieldFieldNumber;
const int ISO11783_TaskData::kProductFieldNumber;
const int ISO11783_TaskData::kProductGroupFieldNumber;
const int ISO11783_TaskData::kTaskFieldNumber;
const int ISO11783_TaskData::kTaskControllerCapabilitiesFieldNumber;
const int ISO11783_TaskData::kValuePresentationFieldNumber;
const int ISO11783_TaskData::kWorkerFieldNumber;
const int ISO11783_TaskData::kExternalFileReferenceFieldNumber;
const int ISO11783_TaskData::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ISO11783_TaskData::ISO11783_TaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsISO11783_TaskData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ISO11783_TaskData)
}
ISO11783_TaskData::ISO11783_TaskData(const ISO11783_TaskData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attached_file_(from.attached_file_),
      base_station_(from.base_station_),
      coded_comment_(from.coded_comment_),
      coded_comment_group_(from.coded_comment_group_),
      colour_legend_(from.colour_legend_),
      crop_type_(from.crop_type_),
      cultural_practice_(from.cultural_practice_),
      customer_(from.customer_),
      device_(from.device_),
      farm_(from.farm_),
      operation_technique_(from.operation_technique_),
      partfield_(from.partfield_),
      product_(from.product_),
      product_group_(from.product_group_),
      task_(from.task_),
      task_controller_capabilities_(from.task_controller_capabilities_),
      value_presentation_(from.value_presentation_),
      worker_(from.worker_),
      external_file_reference_(from.external_file_reference_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  management_software_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.management_software_manufacturer().size() > 0) {
    management_software_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.management_software_manufacturer_);
  }
  management_software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.management_software_version().size() > 0) {
    management_software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.management_software_version_);
  }
  task_controller_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_controller_manufacturer().size() > 0) {
    task_controller_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_manufacturer_);
  }
  task_controller_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_controller_version().size() > 0) {
    task_controller_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_version_);
  }
  data_transfer_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_transfer_language().size() > 0) {
    data_transfer_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_transfer_language_);
  }
  ::memcpy(&version_major_, &from.version_major_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_transfer_origin_) -
    reinterpret_cast<char*>(&version_major_)) + sizeof(data_transfer_origin_));
  // @@protoc_insertion_point(copy_constructor:efdi.ISO11783_TaskData)
}

void ISO11783_TaskData::SharedCtor() {
  management_software_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_transfer_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_transfer_origin_) -
      reinterpret_cast<char*>(&version_major_)) + sizeof(data_transfer_origin_));
  _cached_size_ = 0;
}

ISO11783_TaskData::~ISO11783_TaskData() {
  // @@protoc_insertion_point(destructor:efdi.ISO11783_TaskData)
  SharedDtor();
}

void ISO11783_TaskData::SharedDtor() {
  management_software_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_software_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_transfer_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ISO11783_TaskData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ISO11783_TaskData::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ISO11783_TaskData& ISO11783_TaskData::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsISO11783_TaskData();
  return *internal_default_instance();
}

ISO11783_TaskData* ISO11783_TaskData::New(::google::protobuf::Arena* arena) const {
  ISO11783_TaskData* n = new ISO11783_TaskData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ISO11783_TaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ISO11783_TaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attached_file_.Clear();
  base_station_.Clear();
  coded_comment_.Clear();
  coded_comment_group_.Clear();
  colour_legend_.Clear();
  crop_type_.Clear();
  cultural_practice_.Clear();
  customer_.Clear();
  device_.Clear();
  farm_.Clear();
  operation_technique_.Clear();
  partfield_.Clear();
  product_.Clear();
  product_group_.Clear();
  task_.Clear();
  task_controller_capabilities_.Clear();
  value_presentation_.Clear();
  worker_.Clear();
  external_file_reference_.Clear();
  extension_.Clear();
  management_software_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  management_software_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_transfer_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_transfer_origin_) -
      reinterpret_cast<char*>(&version_major_)) + sizeof(data_transfer_origin_));
  _internal_metadata_.Clear();
}

bool ISO11783_TaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ISO11783_TaskData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.ISO11783_TaskData.VersionMajor version_major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version_major(static_cast< ::efdi::ISO11783_TaskData_VersionMajor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version_minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string management_software_manufacturer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_management_software_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->management_software_manufacturer().data(), static_cast<int>(this->management_software_manufacturer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ISO11783_TaskData.management_software_manufacturer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string management_software_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_management_software_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->management_software_version().data(), static_cast<int>(this->management_software_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ISO11783_TaskData.management_software_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_controller_manufacturer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_controller_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_controller_manufacturer().data(), static_cast<int>(this->task_controller_manufacturer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ISO11783_TaskData.task_controller_manufacturer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_controller_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_controller_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_controller_version().data(), static_cast<int>(this->task_controller_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ISO11783_TaskData.task_controller_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.ISO11783_TaskData.DataTransferOrigin data_transfer_origin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_transfer_origin(static_cast< ::efdi::ISO11783_TaskData_DataTransferOrigin >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_transfer_language = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_transfer_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_transfer_language().data(), static_cast<int>(this->data_transfer_language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ISO11783_TaskData.data_transfer_language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.AttachedFile attached_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_attached_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.BaseStation base_station = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_base_station()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CodedComment coded_comment = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_coded_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CodedCommentGroup coded_comment_group = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_coded_comment_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ColourLegend colour_legend = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_colour_legend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CropType crop_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_crop_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CulturalPractice cultural_practice = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cultural_practice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Customer customer = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_customer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Device device = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Farm farm = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_farm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.OperationTechnique operation_technique = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_operation_technique()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Partfield partfield = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_partfield()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Product product = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ProductGroup product_group = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_product_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Task task = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.TaskControllerCapabilities task_controller_capabilities = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_task_controller_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ValuePresentation value_presentation = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_value_presentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Worker worker = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ExternalFileReference external_file_reference = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_external_file_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ISO11783_TaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ISO11783_TaskData)
  return false;
#undef DO_
}

void ISO11783_TaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ISO11783_TaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.ISO11783_TaskData.VersionMajor version_major = 1;
  if (this->version_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->version_major(), output);
  }

  // uint32 version_minor = 2;
  if (this->version_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version_minor(), output);
  }

  // string management_software_manufacturer = 3;
  if (this->management_software_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->management_software_manufacturer().data(), static_cast<int>(this->management_software_manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.management_software_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->management_software_manufacturer(), output);
  }

  // string management_software_version = 4;
  if (this->management_software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->management_software_version().data(), static_cast<int>(this->management_software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.management_software_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->management_software_version(), output);
  }

  // string task_controller_manufacturer = 5;
  if (this->task_controller_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_manufacturer().data(), static_cast<int>(this->task_controller_manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.task_controller_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->task_controller_manufacturer(), output);
  }

  // string task_controller_version = 6;
  if (this->task_controller_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_version().data(), static_cast<int>(this->task_controller_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.task_controller_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->task_controller_version(), output);
  }

  // .efdi.ISO11783_TaskData.DataTransferOrigin data_transfer_origin = 7;
  if (this->data_transfer_origin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->data_transfer_origin(), output);
  }

  // string data_transfer_language = 8;
  if (this->data_transfer_language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_transfer_language().data(), static_cast<int>(this->data_transfer_language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.data_transfer_language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->data_transfer_language(), output);
  }

  // repeated .efdi.AttachedFile attached_file = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attached_file_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->attached_file(static_cast<int>(i)), output);
  }

  // repeated .efdi.BaseStation base_station = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_station_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->base_station(static_cast<int>(i)), output);
  }

  // repeated .efdi.CodedComment coded_comment = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->coded_comment(static_cast<int>(i)), output);
  }

  // repeated .efdi.CodedCommentGroup coded_comment_group = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->coded_comment_group(static_cast<int>(i)), output);
  }

  // repeated .efdi.ColourLegend colour_legend = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colour_legend_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->colour_legend(static_cast<int>(i)), output);
  }

  // repeated .efdi.CropType crop_type = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->crop_type(static_cast<int>(i)), output);
  }

  // repeated .efdi.CulturalPractice cultural_practice = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cultural_practice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->cultural_practice(static_cast<int>(i)), output);
  }

  // repeated .efdi.Customer customer = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->customer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->customer(static_cast<int>(i)), output);
  }

  // repeated .efdi.Device device = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->device(static_cast<int>(i)), output);
  }

  // repeated .efdi.Farm farm = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->farm_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->farm(static_cast<int>(i)), output);
  }

  // repeated .efdi.OperationTechnique operation_technique = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operation_technique_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->operation_technique(static_cast<int>(i)), output);
  }

  // repeated .efdi.Partfield partfield = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partfield_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->partfield(static_cast<int>(i)), output);
  }

  // repeated .efdi.Product product = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->product(static_cast<int>(i)), output);
  }

  // repeated .efdi.ProductGroup product_group = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->product_group(static_cast<int>(i)), output);
  }

  // repeated .efdi.Task task = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->task(static_cast<int>(i)), output);
  }

  // repeated .efdi.TaskControllerCapabilities task_controller_capabilities = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_controller_capabilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->task_controller_capabilities(static_cast<int>(i)), output);
  }

  // repeated .efdi.ValuePresentation value_presentation = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_presentation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->value_presentation(static_cast<int>(i)), output);
  }

  // repeated .efdi.Worker worker = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->worker(static_cast<int>(i)), output);
  }

  // repeated .efdi.ExternalFileReference external_file_reference = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->external_file_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->external_file_reference(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ISO11783_TaskData)
}

::google::protobuf::uint8* ISO11783_TaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ISO11783_TaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.ISO11783_TaskData.VersionMajor version_major = 1;
  if (this->version_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->version_major(), target);
  }

  // uint32 version_minor = 2;
  if (this->version_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version_minor(), target);
  }

  // string management_software_manufacturer = 3;
  if (this->management_software_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->management_software_manufacturer().data(), static_cast<int>(this->management_software_manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.management_software_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->management_software_manufacturer(), target);
  }

  // string management_software_version = 4;
  if (this->management_software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->management_software_version().data(), static_cast<int>(this->management_software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.management_software_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->management_software_version(), target);
  }

  // string task_controller_manufacturer = 5;
  if (this->task_controller_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_manufacturer().data(), static_cast<int>(this->task_controller_manufacturer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.task_controller_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->task_controller_manufacturer(), target);
  }

  // string task_controller_version = 6;
  if (this->task_controller_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_version().data(), static_cast<int>(this->task_controller_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.task_controller_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->task_controller_version(), target);
  }

  // .efdi.ISO11783_TaskData.DataTransferOrigin data_transfer_origin = 7;
  if (this->data_transfer_origin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->data_transfer_origin(), target);
  }

  // string data_transfer_language = 8;
  if (this->data_transfer_language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_transfer_language().data(), static_cast<int>(this->data_transfer_language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ISO11783_TaskData.data_transfer_language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->data_transfer_language(), target);
  }

  // repeated .efdi.AttachedFile attached_file = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attached_file_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->attached_file(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.BaseStation base_station = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_station_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->base_station(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.CodedComment coded_comment = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->coded_comment(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.CodedCommentGroup coded_comment_group = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_comment_group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->coded_comment_group(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ColourLegend colour_legend = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->colour_legend_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->colour_legend(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.CropType crop_type = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crop_type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->crop_type(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.CulturalPractice cultural_practice = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cultural_practice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->cultural_practice(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Customer customer = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->customer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->customer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Device device = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->device(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Farm farm = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->farm_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->farm(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.OperationTechnique operation_technique = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operation_technique_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->operation_technique(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Partfield partfield = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partfield_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->partfield(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Product product = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->product(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ProductGroup product_group = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->product_group(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Task task = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->task(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.TaskControllerCapabilities task_controller_capabilities = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_controller_capabilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->task_controller_capabilities(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ValuePresentation value_presentation = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_presentation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->value_presentation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Worker worker = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->worker(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ExternalFileReference external_file_reference = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->external_file_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->external_file_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ISO11783_TaskData)
  return target;
}

size_t ISO11783_TaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ISO11783_TaskData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.AttachedFile attached_file = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->attached_file_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attached_file(static_cast<int>(i)));
    }
  }

  // repeated .efdi.BaseStation base_station = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->base_station_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->base_station(static_cast<int>(i)));
    }
  }

  // repeated .efdi.CodedComment coded_comment = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->coded_comment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coded_comment(static_cast<int>(i)));
    }
  }

  // repeated .efdi.CodedCommentGroup coded_comment_group = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->coded_comment_group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coded_comment_group(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ColourLegend colour_legend = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->colour_legend_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->colour_legend(static_cast<int>(i)));
    }
  }

  // repeated .efdi.CropType crop_type = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->crop_type_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crop_type(static_cast<int>(i)));
    }
  }

  // repeated .efdi.CulturalPractice cultural_practice = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->cultural_practice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cultural_practice(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Customer customer = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->customer_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->customer(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Device device = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->device_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Farm farm = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->farm_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->farm(static_cast<int>(i)));
    }
  }

  // repeated .efdi.OperationTechnique operation_technique = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->operation_technique_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operation_technique(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Partfield partfield = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->partfield_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partfield(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Product product = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->product_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->product(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ProductGroup product_group = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->product_group_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->product_group(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Task task = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->task_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task(static_cast<int>(i)));
    }
  }

  // repeated .efdi.TaskControllerCapabilities task_controller_capabilities = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->task_controller_capabilities_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task_controller_capabilities(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ValuePresentation value_presentation = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->value_presentation_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->value_presentation(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Worker worker = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->worker_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->worker(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ExternalFileReference external_file_reference = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->external_file_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->external_file_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string management_software_manufacturer = 3;
  if (this->management_software_manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->management_software_manufacturer());
  }

  // string management_software_version = 4;
  if (this->management_software_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->management_software_version());
  }

  // string task_controller_manufacturer = 5;
  if (this->task_controller_manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_controller_manufacturer());
  }

  // string task_controller_version = 6;
  if (this->task_controller_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_controller_version());
  }

  // string data_transfer_language = 8;
  if (this->data_transfer_language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_transfer_language());
  }

  // .efdi.ISO11783_TaskData.VersionMajor version_major = 1;
  if (this->version_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version_major());
  }

  // uint32 version_minor = 2;
  if (this->version_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version_minor());
  }

  // .efdi.ISO11783_TaskData.DataTransferOrigin data_transfer_origin = 7;
  if (this->data_transfer_origin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_transfer_origin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ISO11783_TaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ISO11783_TaskData)
  GOOGLE_DCHECK_NE(&from, this);
  const ISO11783_TaskData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ISO11783_TaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ISO11783_TaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ISO11783_TaskData)
    MergeFrom(*source);
  }
}

void ISO11783_TaskData::MergeFrom(const ISO11783_TaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ISO11783_TaskData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attached_file_.MergeFrom(from.attached_file_);
  base_station_.MergeFrom(from.base_station_);
  coded_comment_.MergeFrom(from.coded_comment_);
  coded_comment_group_.MergeFrom(from.coded_comment_group_);
  colour_legend_.MergeFrom(from.colour_legend_);
  crop_type_.MergeFrom(from.crop_type_);
  cultural_practice_.MergeFrom(from.cultural_practice_);
  customer_.MergeFrom(from.customer_);
  device_.MergeFrom(from.device_);
  farm_.MergeFrom(from.farm_);
  operation_technique_.MergeFrom(from.operation_technique_);
  partfield_.MergeFrom(from.partfield_);
  product_.MergeFrom(from.product_);
  product_group_.MergeFrom(from.product_group_);
  task_.MergeFrom(from.task_);
  task_controller_capabilities_.MergeFrom(from.task_controller_capabilities_);
  value_presentation_.MergeFrom(from.value_presentation_);
  worker_.MergeFrom(from.worker_);
  external_file_reference_.MergeFrom(from.external_file_reference_);
  extension_.MergeFrom(from.extension_);
  if (from.management_software_manufacturer().size() > 0) {

    management_software_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.management_software_manufacturer_);
  }
  if (from.management_software_version().size() > 0) {

    management_software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.management_software_version_);
  }
  if (from.task_controller_manufacturer().size() > 0) {

    task_controller_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_manufacturer_);
  }
  if (from.task_controller_version().size() > 0) {

    task_controller_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_version_);
  }
  if (from.data_transfer_language().size() > 0) {

    data_transfer_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_transfer_language_);
  }
  if (from.version_major() != 0) {
    set_version_major(from.version_major());
  }
  if (from.version_minor() != 0) {
    set_version_minor(from.version_minor());
  }
  if (from.data_transfer_origin() != 0) {
    set_data_transfer_origin(from.data_transfer_origin());
  }
}

void ISO11783_TaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ISO11783_TaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISO11783_TaskData::CopyFrom(const ISO11783_TaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ISO11783_TaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISO11783_TaskData::IsInitialized() const {
  return true;
}

void ISO11783_TaskData::Swap(ISO11783_TaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ISO11783_TaskData::InternalSwap(ISO11783_TaskData* other) {
  using std::swap;
  attached_file_.InternalSwap(&other->attached_file_);
  base_station_.InternalSwap(&other->base_station_);
  coded_comment_.InternalSwap(&other->coded_comment_);
  coded_comment_group_.InternalSwap(&other->coded_comment_group_);
  colour_legend_.InternalSwap(&other->colour_legend_);
  crop_type_.InternalSwap(&other->crop_type_);
  cultural_practice_.InternalSwap(&other->cultural_practice_);
  customer_.InternalSwap(&other->customer_);
  device_.InternalSwap(&other->device_);
  farm_.InternalSwap(&other->farm_);
  operation_technique_.InternalSwap(&other->operation_technique_);
  partfield_.InternalSwap(&other->partfield_);
  product_.InternalSwap(&other->product_);
  product_group_.InternalSwap(&other->product_group_);
  task_.InternalSwap(&other->task_);
  task_controller_capabilities_.InternalSwap(&other->task_controller_capabilities_);
  value_presentation_.InternalSwap(&other->value_presentation_);
  worker_.InternalSwap(&other->worker_);
  external_file_reference_.InternalSwap(&other->external_file_reference_);
  extension_.InternalSwap(&other->extension_);
  management_software_manufacturer_.Swap(&other->management_software_manufacturer_);
  management_software_version_.Swap(&other->management_software_version_);
  task_controller_manufacturer_.Swap(&other->task_controller_manufacturer_);
  task_controller_version_.Swap(&other->task_controller_version_);
  data_transfer_language_.Swap(&other->data_transfer_language_);
  swap(version_major_, other->version_major_);
  swap(version_minor_, other->version_minor_);
  swap(data_transfer_origin_, other->data_transfer_origin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ISO11783_TaskData::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LineString::InitAsDefaultInstance() {
  ::efdi::_LineString_default_instance_._instance.get_mutable()->line_string_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void LineString::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineString::kLineStringTypeFieldNumber;
const int LineString::kLineStringDesignatorFieldNumber;
const int LineString::kLineStringWidthFieldNumber;
const int LineString::kLineStringLengthFieldNumber;
const int LineString::kLineStringColourFieldNumber;
const int LineString::kLineStringIdFieldNumber;
const int LineString::kPointFieldNumber;
const int LineString::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineString::LineString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsLineString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.LineString)
}
LineString::LineString(const LineString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  line_string_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line_string_designator().size() > 0) {
    line_string_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_string_designator_);
  }
  if (from.has_line_string_id()) {
    line_string_id_ = new ::efdi::UID(*from.line_string_id_);
  } else {
    line_string_id_ = NULL;
  }
  ::memcpy(&line_string_type_, &from.line_string_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_string_colour_) -
    reinterpret_cast<char*>(&line_string_type_)) + sizeof(line_string_colour_));
  // @@protoc_insertion_point(copy_constructor:efdi.LineString)
}

void LineString::SharedCtor() {
  line_string_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_string_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_string_colour_) -
      reinterpret_cast<char*>(&line_string_id_)) + sizeof(line_string_colour_));
  _cached_size_ = 0;
}

LineString::~LineString() {
  // @@protoc_insertion_point(destructor:efdi.LineString)
  SharedDtor();
}

void LineString::SharedDtor() {
  line_string_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete line_string_id_;
}

void LineString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineString::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineString& LineString::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsLineString();
  return *internal_default_instance();
}

LineString* LineString::New(::google::protobuf::Arena* arena) const {
  LineString* n = new LineString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LineString::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.LineString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  extension_.Clear();
  line_string_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && line_string_id_ != NULL) {
    delete line_string_id_;
  }
  line_string_id_ = NULL;
  ::memset(&line_string_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_string_colour_) -
      reinterpret_cast<char*>(&line_string_type_)) + sizeof(line_string_colour_));
  _internal_metadata_.Clear();
}

bool LineString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.LineString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.LineString.LinestringType line_string_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_line_string_type(static_cast< ::efdi::LineString_LinestringType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string line_string_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line_string_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line_string_designator().data(), static_cast<int>(this->line_string_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.LineString.line_string_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 line_string_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_string_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 line_string_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_string_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 line_string_colour = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_string_colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID line_string_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_string_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Point point = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.LineString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.LineString)
  return false;
#undef DO_
}

void LineString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.LineString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.LineString.LinestringType line_string_type = 1;
  if (this->line_string_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->line_string_type(), output);
  }

  // string line_string_designator = 2;
  if (this->line_string_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line_string_designator().data(), static_cast<int>(this->line_string_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.LineString.line_string_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->line_string_designator(), output);
  }

  // uint32 line_string_width = 3;
  if (this->line_string_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->line_string_width(), output);
  }

  // uint32 line_string_length = 4;
  if (this->line_string_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->line_string_length(), output);
  }

  // uint32 line_string_colour = 5;
  if (this->line_string_colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->line_string_colour(), output);
  }

  // .efdi.UID line_string_id = 6;
  if (this->has_line_string_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->line_string_id_, output);
  }

  // repeated .efdi.Point point = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->point(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.LineString)
}

::google::protobuf::uint8* LineString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.LineString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.LineString.LinestringType line_string_type = 1;
  if (this->line_string_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->line_string_type(), target);
  }

  // string line_string_designator = 2;
  if (this->line_string_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line_string_designator().data(), static_cast<int>(this->line_string_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.LineString.line_string_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->line_string_designator(), target);
  }

  // uint32 line_string_width = 3;
  if (this->line_string_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->line_string_width(), target);
  }

  // uint32 line_string_length = 4;
  if (this->line_string_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->line_string_length(), target);
  }

  // uint32 line_string_colour = 5;
  if (this->line_string_colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->line_string_colour(), target);
  }

  // .efdi.UID line_string_id = 6;
  if (this->has_line_string_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->line_string_id_, deterministic, target);
  }

  // repeated .efdi.Point point = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->point(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.LineString)
  return target;
}

size_t LineString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.LineString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Point point = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string line_string_designator = 2;
  if (this->line_string_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line_string_designator());
  }

  // .efdi.UID line_string_id = 6;
  if (this->has_line_string_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->line_string_id_);
  }

  // .efdi.LineString.LinestringType line_string_type = 1;
  if (this->line_string_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->line_string_type());
  }

  // uint32 line_string_width = 3;
  if (this->line_string_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->line_string_width());
  }

  // uint32 line_string_length = 4;
  if (this->line_string_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->line_string_length());
  }

  // uint32 line_string_colour = 5;
  if (this->line_string_colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->line_string_colour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.LineString)
  GOOGLE_DCHECK_NE(&from, this);
  const LineString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.LineString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.LineString)
    MergeFrom(*source);
  }
}

void LineString::MergeFrom(const LineString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.LineString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  extension_.MergeFrom(from.extension_);
  if (from.line_string_designator().size() > 0) {

    line_string_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_string_designator_);
  }
  if (from.has_line_string_id()) {
    mutable_line_string_id()->::efdi::UID::MergeFrom(from.line_string_id());
  }
  if (from.line_string_type() != 0) {
    set_line_string_type(from.line_string_type());
  }
  if (from.line_string_width() != 0) {
    set_line_string_width(from.line_string_width());
  }
  if (from.line_string_length() != 0) {
    set_line_string_length(from.line_string_length());
  }
  if (from.line_string_colour() != 0) {
    set_line_string_colour(from.line_string_colour());
  }
}

void LineString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.LineString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineString::CopyFrom(const LineString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.LineString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineString::IsInitialized() const {
  return true;
}

void LineString::Swap(LineString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineString::InternalSwap(LineString* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  extension_.InternalSwap(&other->extension_);
  line_string_designator_.Swap(&other->line_string_designator_);
  swap(line_string_id_, other->line_string_id_);
  swap(line_string_type_, other->line_string_type_);
  swap(line_string_width_, other->line_string_width_);
  swap(line_string_length_, other->line_string_length_);
  swap(line_string_colour_, other->line_string_colour_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LineString::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationTechnique::InitAsDefaultInstance() {
  ::efdi::_OperationTechnique_default_instance_._instance.get_mutable()->operation_technique_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void OperationTechnique::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationTechnique::kOperationTechniqueIdFieldNumber;
const int OperationTechnique::kOperationTechniqueDesignatorFieldNumber;
const int OperationTechnique::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationTechnique::OperationTechnique()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechnique();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.OperationTechnique)
}
OperationTechnique::OperationTechnique(const OperationTechnique& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_technique_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_technique_designator().size() > 0) {
    operation_technique_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_technique_designator_);
  }
  if (from.has_operation_technique_id()) {
    operation_technique_id_ = new ::efdi::UID(*from.operation_technique_id_);
  } else {
    operation_technique_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.OperationTechnique)
}

void OperationTechnique::SharedCtor() {
  operation_technique_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_technique_id_ = NULL;
  _cached_size_ = 0;
}

OperationTechnique::~OperationTechnique() {
  // @@protoc_insertion_point(destructor:efdi.OperationTechnique)
  SharedDtor();
}

void OperationTechnique::SharedDtor() {
  operation_technique_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete operation_technique_id_;
}

void OperationTechnique::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationTechnique::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationTechnique& OperationTechnique::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechnique();
  return *internal_default_instance();
}

OperationTechnique* OperationTechnique::New(::google::protobuf::Arena* arena) const {
  OperationTechnique* n = new OperationTechnique;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationTechnique::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.OperationTechnique)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  operation_technique_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && operation_technique_id_ != NULL) {
    delete operation_technique_id_;
  }
  operation_technique_id_ = NULL;
  _internal_metadata_.Clear();
}

bool OperationTechnique::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.OperationTechnique)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID operation_technique_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation_technique_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_technique_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_technique_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_technique_designator().data(), static_cast<int>(this->operation_technique_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.OperationTechnique.operation_technique_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.OperationTechnique)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.OperationTechnique)
  return false;
#undef DO_
}

void OperationTechnique::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.OperationTechnique)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID operation_technique_id = 1;
  if (this->has_operation_technique_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->operation_technique_id_, output);
  }

  // string operation_technique_designator = 2;
  if (this->operation_technique_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_technique_designator().data(), static_cast<int>(this->operation_technique_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.OperationTechnique.operation_technique_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operation_technique_designator(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.OperationTechnique)
}

::google::protobuf::uint8* OperationTechnique::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.OperationTechnique)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID operation_technique_id = 1;
  if (this->has_operation_technique_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->operation_technique_id_, deterministic, target);
  }

  // string operation_technique_designator = 2;
  if (this->operation_technique_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_technique_designator().data(), static_cast<int>(this->operation_technique_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.OperationTechnique.operation_technique_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operation_technique_designator(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.OperationTechnique)
  return target;
}

size_t OperationTechnique::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.OperationTechnique)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string operation_technique_designator = 2;
  if (this->operation_technique_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_technique_designator());
  }

  // .efdi.UID operation_technique_id = 1;
  if (this->has_operation_technique_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operation_technique_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationTechnique::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.OperationTechnique)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationTechnique* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationTechnique>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.OperationTechnique)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.OperationTechnique)
    MergeFrom(*source);
  }
}

void OperationTechnique::MergeFrom(const OperationTechnique& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.OperationTechnique)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.operation_technique_designator().size() > 0) {

    operation_technique_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_technique_designator_);
  }
  if (from.has_operation_technique_id()) {
    mutable_operation_technique_id()->::efdi::UID::MergeFrom(from.operation_technique_id());
  }
}

void OperationTechnique::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.OperationTechnique)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationTechnique::CopyFrom(const OperationTechnique& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.OperationTechnique)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationTechnique::IsInitialized() const {
  return true;
}

void OperationTechnique::Swap(OperationTechnique* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationTechnique::InternalSwap(OperationTechnique* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  operation_technique_designator_.Swap(&other->operation_technique_designator_);
  swap(operation_technique_id_, other->operation_technique_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationTechnique::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationTechniqueReference::InitAsDefaultInstance() {
  ::efdi::_OperationTechniqueReference_default_instance_._instance.get_mutable()->operation_technique_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void OperationTechniqueReference::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationTechniqueReference::kOperationTechniqueIdRefFieldNumber;
const int OperationTechniqueReference::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationTechniqueReference::OperationTechniqueReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechniqueReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.OperationTechniqueReference)
}
OperationTechniqueReference::OperationTechniqueReference(const OperationTechniqueReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_operation_technique_id_ref()) {
    operation_technique_id_ref_ = new ::efdi::UID(*from.operation_technique_id_ref_);
  } else {
    operation_technique_id_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.OperationTechniqueReference)
}

void OperationTechniqueReference::SharedCtor() {
  operation_technique_id_ref_ = NULL;
  _cached_size_ = 0;
}

OperationTechniqueReference::~OperationTechniqueReference() {
  // @@protoc_insertion_point(destructor:efdi.OperationTechniqueReference)
  SharedDtor();
}

void OperationTechniqueReference::SharedDtor() {
  if (this != internal_default_instance()) delete operation_technique_id_ref_;
}

void OperationTechniqueReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationTechniqueReference::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationTechniqueReference& OperationTechniqueReference::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperationTechniqueReference();
  return *internal_default_instance();
}

OperationTechniqueReference* OperationTechniqueReference::New(::google::protobuf::Arena* arena) const {
  OperationTechniqueReference* n = new OperationTechniqueReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationTechniqueReference::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.OperationTechniqueReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && operation_technique_id_ref_ != NULL) {
    delete operation_technique_id_ref_;
  }
  operation_technique_id_ref_ = NULL;
  _internal_metadata_.Clear();
}

bool OperationTechniqueReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.OperationTechniqueReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID operation_technique_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation_technique_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.OperationTechniqueReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.OperationTechniqueReference)
  return false;
#undef DO_
}

void OperationTechniqueReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.OperationTechniqueReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID operation_technique_id_ref = 1;
  if (this->has_operation_technique_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->operation_technique_id_ref_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.OperationTechniqueReference)
}

::google::protobuf::uint8* OperationTechniqueReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.OperationTechniqueReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID operation_technique_id_ref = 1;
  if (this->has_operation_technique_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->operation_technique_id_ref_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.OperationTechniqueReference)
  return target;
}

size_t OperationTechniqueReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.OperationTechniqueReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID operation_technique_id_ref = 1;
  if (this->has_operation_technique_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operation_technique_id_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationTechniqueReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.OperationTechniqueReference)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationTechniqueReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationTechniqueReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.OperationTechniqueReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.OperationTechniqueReference)
    MergeFrom(*source);
  }
}

void OperationTechniqueReference::MergeFrom(const OperationTechniqueReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.OperationTechniqueReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_operation_technique_id_ref()) {
    mutable_operation_technique_id_ref()->::efdi::UID::MergeFrom(from.operation_technique_id_ref());
  }
}

void OperationTechniqueReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.OperationTechniqueReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationTechniqueReference::CopyFrom(const OperationTechniqueReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.OperationTechniqueReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationTechniqueReference::IsInitialized() const {
  return true;
}

void OperationTechniqueReference::Swap(OperationTechniqueReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationTechniqueReference::InternalSwap(OperationTechniqueReference* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(operation_technique_id_ref_, other->operation_technique_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationTechniqueReference::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperTechPractice::InitAsDefaultInstance() {
  ::efdi::_OperTechPractice_default_instance_._instance.get_mutable()->cultural_practice_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_OperTechPractice_default_instance_._instance.get_mutable()->operation_technique_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void OperTechPractice::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperTechPractice::kCulturalPracticeIdRefFieldNumber;
const int OperTechPractice::kOperationTechniqueIdRefFieldNumber;
const int OperTechPractice::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperTechPractice::OperTechPractice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperTechPractice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.OperTechPractice)
}
OperTechPractice::OperTechPractice(const OperTechPractice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cultural_practice_id_ref()) {
    cultural_practice_id_ref_ = new ::efdi::UID(*from.cultural_practice_id_ref_);
  } else {
    cultural_practice_id_ref_ = NULL;
  }
  if (from.has_operation_technique_id_ref()) {
    operation_technique_id_ref_ = new ::efdi::UID(*from.operation_technique_id_ref_);
  } else {
    operation_technique_id_ref_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.OperTechPractice)
}

void OperTechPractice::SharedCtor() {
  ::memset(&cultural_practice_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_technique_id_ref_) -
      reinterpret_cast<char*>(&cultural_practice_id_ref_)) + sizeof(operation_technique_id_ref_));
  _cached_size_ = 0;
}

OperTechPractice::~OperTechPractice() {
  // @@protoc_insertion_point(destructor:efdi.OperTechPractice)
  SharedDtor();
}

void OperTechPractice::SharedDtor() {
  if (this != internal_default_instance()) delete cultural_practice_id_ref_;
  if (this != internal_default_instance()) delete operation_technique_id_ref_;
}

void OperTechPractice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperTechPractice::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperTechPractice& OperTechPractice::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsOperTechPractice();
  return *internal_default_instance();
}

OperTechPractice* OperTechPractice::New(::google::protobuf::Arena* arena) const {
  OperTechPractice* n = new OperTechPractice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperTechPractice::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.OperTechPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && cultural_practice_id_ref_ != NULL) {
    delete cultural_practice_id_ref_;
  }
  cultural_practice_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && operation_technique_id_ref_ != NULL) {
    delete operation_technique_id_ref_;
  }
  operation_technique_id_ref_ = NULL;
  _internal_metadata_.Clear();
}

bool OperTechPractice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.OperTechPractice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID cultural_practice_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cultural_practice_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID operation_technique_id_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation_technique_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.OperTechPractice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.OperTechPractice)
  return false;
#undef DO_
}

void OperTechPractice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.OperTechPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID cultural_practice_id_ref = 1;
  if (this->has_cultural_practice_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cultural_practice_id_ref_, output);
  }

  // .efdi.UID operation_technique_id_ref = 2;
  if (this->has_operation_technique_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->operation_technique_id_ref_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.OperTechPractice)
}

::google::protobuf::uint8* OperTechPractice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.OperTechPractice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID cultural_practice_id_ref = 1;
  if (this->has_cultural_practice_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->cultural_practice_id_ref_, deterministic, target);
  }

  // .efdi.UID operation_technique_id_ref = 2;
  if (this->has_operation_technique_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->operation_technique_id_ref_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.OperTechPractice)
  return target;
}

size_t OperTechPractice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.OperTechPractice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID cultural_practice_id_ref = 1;
  if (this->has_cultural_practice_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cultural_practice_id_ref_);
  }

  // .efdi.UID operation_technique_id_ref = 2;
  if (this->has_operation_technique_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operation_technique_id_ref_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperTechPractice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.OperTechPractice)
  GOOGLE_DCHECK_NE(&from, this);
  const OperTechPractice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperTechPractice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.OperTechPractice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.OperTechPractice)
    MergeFrom(*source);
  }
}

void OperTechPractice::MergeFrom(const OperTechPractice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.OperTechPractice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_cultural_practice_id_ref()) {
    mutable_cultural_practice_id_ref()->::efdi::UID::MergeFrom(from.cultural_practice_id_ref());
  }
  if (from.has_operation_technique_id_ref()) {
    mutable_operation_technique_id_ref()->::efdi::UID::MergeFrom(from.operation_technique_id_ref());
  }
}

void OperTechPractice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.OperTechPractice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperTechPractice::CopyFrom(const OperTechPractice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.OperTechPractice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperTechPractice::IsInitialized() const {
  return true;
}

void OperTechPractice::Swap(OperTechPractice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperTechPractice::InternalSwap(OperTechPractice* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(cultural_practice_id_ref_, other->cultural_practice_id_ref_);
  swap(operation_technique_id_ref_, other->operation_technique_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperTechPractice::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Partfield::InitAsDefaultInstance() {
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->partfield_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->customer_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->farm_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->crop_type_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->crop_variety_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Partfield_default_instance_._instance.get_mutable()->field_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Partfield::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Partfield::kPartfieldIdFieldNumber;
const int Partfield::kPartfieldCodeFieldNumber;
const int Partfield::kPartfieldDesignatorFieldNumber;
const int Partfield::kPartfieldAreaFieldNumber;
const int Partfield::kCustomerIdRefFieldNumber;
const int Partfield::kFarmIdRefFieldNumber;
const int Partfield::kCropTypeIdRefFieldNumber;
const int Partfield::kCropVarietyIdRefFieldNumber;
const int Partfield::kFieldIdRefFieldNumber;
const int Partfield::kPolygonFieldNumber;
const int Partfield::kLineStringFieldNumber;
const int Partfield::kPointFieldNumber;
const int Partfield::kGuidanceGroupFieldNumber;
const int Partfield::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Partfield::Partfield()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPartfield();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Partfield)
}
Partfield::Partfield(const Partfield& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygon_(from.polygon_),
      line_string_(from.line_string_),
      point_(from.point_),
      guidance_group_(from.guidance_group_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  partfield_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.partfield_code().size() > 0) {
    partfield_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partfield_code_);
  }
  partfield_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.partfield_designator().size() > 0) {
    partfield_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partfield_designator_);
  }
  if (from.has_partfield_id()) {
    partfield_id_ = new ::efdi::UID(*from.partfield_id_);
  } else {
    partfield_id_ = NULL;
  }
  if (from.has_customer_id_ref()) {
    customer_id_ref_ = new ::efdi::UID(*from.customer_id_ref_);
  } else {
    customer_id_ref_ = NULL;
  }
  if (from.has_farm_id_ref()) {
    farm_id_ref_ = new ::efdi::UID(*from.farm_id_ref_);
  } else {
    farm_id_ref_ = NULL;
  }
  if (from.has_crop_type_id_ref()) {
    crop_type_id_ref_ = new ::efdi::UID(*from.crop_type_id_ref_);
  } else {
    crop_type_id_ref_ = NULL;
  }
  if (from.has_crop_variety_id_ref()) {
    crop_variety_id_ref_ = new ::efdi::UID(*from.crop_variety_id_ref_);
  } else {
    crop_variety_id_ref_ = NULL;
  }
  if (from.has_field_id_ref()) {
    field_id_ref_ = new ::efdi::UID(*from.field_id_ref_);
  } else {
    field_id_ref_ = NULL;
  }
  partfield_area_ = from.partfield_area_;
  // @@protoc_insertion_point(copy_constructor:efdi.Partfield)
}

void Partfield::SharedCtor() {
  partfield_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partfield_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&partfield_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partfield_area_) -
      reinterpret_cast<char*>(&partfield_id_)) + sizeof(partfield_area_));
  _cached_size_ = 0;
}

Partfield::~Partfield() {
  // @@protoc_insertion_point(destructor:efdi.Partfield)
  SharedDtor();
}

void Partfield::SharedDtor() {
  partfield_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partfield_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete partfield_id_;
  if (this != internal_default_instance()) delete customer_id_ref_;
  if (this != internal_default_instance()) delete farm_id_ref_;
  if (this != internal_default_instance()) delete crop_type_id_ref_;
  if (this != internal_default_instance()) delete crop_variety_id_ref_;
  if (this != internal_default_instance()) delete field_id_ref_;
}

void Partfield::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Partfield::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Partfield& Partfield::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPartfield();
  return *internal_default_instance();
}

Partfield* Partfield::New(::google::protobuf::Arena* arena) const {
  Partfield* n = new Partfield;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Partfield::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Partfield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  line_string_.Clear();
  point_.Clear();
  guidance_group_.Clear();
  extension_.Clear();
  partfield_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partfield_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && partfield_id_ != NULL) {
    delete partfield_id_;
  }
  partfield_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && customer_id_ref_ != NULL) {
    delete customer_id_ref_;
  }
  customer_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && farm_id_ref_ != NULL) {
    delete farm_id_ref_;
  }
  farm_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && crop_type_id_ref_ != NULL) {
    delete crop_type_id_ref_;
  }
  crop_type_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && crop_variety_id_ref_ != NULL) {
    delete crop_variety_id_ref_;
  }
  crop_variety_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && field_id_ref_ != NULL) {
    delete field_id_ref_;
  }
  field_id_ref_ = NULL;
  partfield_area_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Partfield::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Partfield)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID partfield_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partfield_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string partfield_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partfield_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partfield_code().data(), static_cast<int>(this->partfield_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Partfield.partfield_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string partfield_designator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partfield_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partfield_designator().data(), static_cast<int>(this->partfield_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Partfield.partfield_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 partfield_area = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partfield_area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID customer_id_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID farm_id_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_farm_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID crop_type_id_ref = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_type_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID crop_variety_id_ref = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crop_variety_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID field_id_ref = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Polygon polygon = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.LineString line_string = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_line_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Point point = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.GuidanceGroup guidance_group = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_guidance_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Partfield)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Partfield)
  return false;
#undef DO_
}

void Partfield::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Partfield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID partfield_id = 1;
  if (this->has_partfield_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->partfield_id_, output);
  }

  // string partfield_code = 2;
  if (this->partfield_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partfield_code().data(), static_cast<int>(this->partfield_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Partfield.partfield_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->partfield_code(), output);
  }

  // string partfield_designator = 3;
  if (this->partfield_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partfield_designator().data(), static_cast<int>(this->partfield_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Partfield.partfield_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->partfield_designator(), output);
  }

  // uint64 partfield_area = 4;
  if (this->partfield_area() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->partfield_area(), output);
  }

  // .efdi.UID customer_id_ref = 5;
  if (this->has_customer_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->customer_id_ref_, output);
  }

  // .efdi.UID farm_id_ref = 6;
  if (this->has_farm_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->farm_id_ref_, output);
  }

  // .efdi.UID crop_type_id_ref = 7;
  if (this->has_crop_type_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->crop_type_id_ref_, output);
  }

  // .efdi.UID crop_variety_id_ref = 8;
  if (this->has_crop_variety_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->crop_variety_id_ref_, output);
  }

  // .efdi.UID field_id_ref = 9;
  if (this->has_field_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->field_id_ref_, output);
  }

  // repeated .efdi.Polygon polygon = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->polygon(static_cast<int>(i)), output);
  }

  // repeated .efdi.LineString line_string = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_string_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->line_string(static_cast<int>(i)), output);
  }

  // repeated .efdi.Point point = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->point(static_cast<int>(i)), output);
  }

  // repeated .efdi.GuidanceGroup guidance_group = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->guidance_group(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Partfield)
}

::google::protobuf::uint8* Partfield::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Partfield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID partfield_id = 1;
  if (this->has_partfield_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->partfield_id_, deterministic, target);
  }

  // string partfield_code = 2;
  if (this->partfield_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partfield_code().data(), static_cast<int>(this->partfield_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Partfield.partfield_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partfield_code(), target);
  }

  // string partfield_designator = 3;
  if (this->partfield_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partfield_designator().data(), static_cast<int>(this->partfield_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Partfield.partfield_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->partfield_designator(), target);
  }

  // uint64 partfield_area = 4;
  if (this->partfield_area() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->partfield_area(), target);
  }

  // .efdi.UID customer_id_ref = 5;
  if (this->has_customer_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->customer_id_ref_, deterministic, target);
  }

  // .efdi.UID farm_id_ref = 6;
  if (this->has_farm_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->farm_id_ref_, deterministic, target);
  }

  // .efdi.UID crop_type_id_ref = 7;
  if (this->has_crop_type_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->crop_type_id_ref_, deterministic, target);
  }

  // .efdi.UID crop_variety_id_ref = 8;
  if (this->has_crop_variety_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->crop_variety_id_ref_, deterministic, target);
  }

  // .efdi.UID field_id_ref = 9;
  if (this->has_field_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->field_id_ref_, deterministic, target);
  }

  // repeated .efdi.Polygon polygon = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->polygon(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.LineString line_string = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_string_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->line_string(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Point point = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->point(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.GuidanceGroup guidance_group = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->guidance_group(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Partfield)
  return target;
}

size_t Partfield::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Partfield)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Polygon polygon = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // repeated .efdi.LineString line_string = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->line_string_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line_string(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Point point = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  // repeated .efdi.GuidanceGroup guidance_group = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->guidance_group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guidance_group(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string partfield_code = 2;
  if (this->partfield_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partfield_code());
  }

  // string partfield_designator = 3;
  if (this->partfield_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partfield_designator());
  }

  // .efdi.UID partfield_id = 1;
  if (this->has_partfield_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partfield_id_);
  }

  // .efdi.UID customer_id_ref = 5;
  if (this->has_customer_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->customer_id_ref_);
  }

  // .efdi.UID farm_id_ref = 6;
  if (this->has_farm_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->farm_id_ref_);
  }

  // .efdi.UID crop_type_id_ref = 7;
  if (this->has_crop_type_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->crop_type_id_ref_);
  }

  // .efdi.UID crop_variety_id_ref = 8;
  if (this->has_crop_variety_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->crop_variety_id_ref_);
  }

  // .efdi.UID field_id_ref = 9;
  if (this->has_field_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->field_id_ref_);
  }

  // uint64 partfield_area = 4;
  if (this->partfield_area() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partfield_area());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Partfield::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Partfield)
  GOOGLE_DCHECK_NE(&from, this);
  const Partfield* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Partfield>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Partfield)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Partfield)
    MergeFrom(*source);
  }
}

void Partfield::MergeFrom(const Partfield& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Partfield)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  line_string_.MergeFrom(from.line_string_);
  point_.MergeFrom(from.point_);
  guidance_group_.MergeFrom(from.guidance_group_);
  extension_.MergeFrom(from.extension_);
  if (from.partfield_code().size() > 0) {

    partfield_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partfield_code_);
  }
  if (from.partfield_designator().size() > 0) {

    partfield_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partfield_designator_);
  }
  if (from.has_partfield_id()) {
    mutable_partfield_id()->::efdi::UID::MergeFrom(from.partfield_id());
  }
  if (from.has_customer_id_ref()) {
    mutable_customer_id_ref()->::efdi::UID::MergeFrom(from.customer_id_ref());
  }
  if (from.has_farm_id_ref()) {
    mutable_farm_id_ref()->::efdi::UID::MergeFrom(from.farm_id_ref());
  }
  if (from.has_crop_type_id_ref()) {
    mutable_crop_type_id_ref()->::efdi::UID::MergeFrom(from.crop_type_id_ref());
  }
  if (from.has_crop_variety_id_ref()) {
    mutable_crop_variety_id_ref()->::efdi::UID::MergeFrom(from.crop_variety_id_ref());
  }
  if (from.has_field_id_ref()) {
    mutable_field_id_ref()->::efdi::UID::MergeFrom(from.field_id_ref());
  }
  if (from.partfield_area() != 0) {
    set_partfield_area(from.partfield_area());
  }
}

void Partfield::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Partfield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Partfield::CopyFrom(const Partfield& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Partfield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Partfield::IsInitialized() const {
  return true;
}

void Partfield::Swap(Partfield* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Partfield::InternalSwap(Partfield* other) {
  using std::swap;
  polygon_.InternalSwap(&other->polygon_);
  line_string_.InternalSwap(&other->line_string_);
  point_.InternalSwap(&other->point_);
  guidance_group_.InternalSwap(&other->guidance_group_);
  extension_.InternalSwap(&other->extension_);
  partfield_code_.Swap(&other->partfield_code_);
  partfield_designator_.Swap(&other->partfield_designator_);
  swap(partfield_id_, other->partfield_id_);
  swap(customer_id_ref_, other->customer_id_ref_);
  swap(farm_id_ref_, other->farm_id_ref_);
  swap(crop_type_id_ref_, other->crop_type_id_ref_);
  swap(crop_variety_id_ref_, other->crop_variety_id_ref_);
  swap(field_id_ref_, other->field_id_ref_);
  swap(partfield_area_, other->partfield_area_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Partfield::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
  ::efdi::_Point_default_instance_._instance.get_mutable()->point_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Point::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kPointTypeFieldNumber;
const int Point::kPointDesignatorFieldNumber;
const int Point::kPointNorthFieldNumber;
const int Point::kPointEastFieldNumber;
const int Point::kPointUpFieldNumber;
const int Point::kPointColourFieldNumber;
const int Point::kPointIdFieldNumber;
const int Point::kPointHorizontalAccuracyFieldNumber;
const int Point::kPointVerticalAccuracyFieldNumber;
const int Point::kFilenameFieldNumber;
const int Point::kFilelengthFieldNumber;
const int Point::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  point_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.point_designator().size() > 0) {
    point_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.point_designator_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.has_point_id()) {
    point_id_ = new ::efdi::UID(*from.point_id_);
  } else {
    point_id_ = NULL;
  }
  ::memcpy(&point_north_, &from.point_north_,
    static_cast<size_t>(reinterpret_cast<char*>(&filelength_) -
    reinterpret_cast<char*>(&point_north_)) + sizeof(filelength_));
  // @@protoc_insertion_point(copy_constructor:efdi.Point)
}

void Point::SharedCtor() {
  point_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filelength_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(filelength_));
  _cached_size_ = 0;
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:efdi.Point)
  SharedDtor();
}

void Point::SharedDtor() {
  point_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete point_id_;
}

void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPoint();
  return *internal_default_instance();
}

Point* Point::New(::google::protobuf::Arena* arena) const {
  Point* n = new Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  point_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && point_id_ != NULL) {
    delete point_id_;
  }
  point_id_ = NULL;
  ::memset(&point_north_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filelength_) -
      reinterpret_cast<char*>(&point_north_)) + sizeof(filelength_));
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.Point.PointType point_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_point_type(static_cast< ::efdi::Point_PointType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string point_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_point_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->point_designator().data(), static_cast<int>(this->point_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Point.point_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double point_north = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_north_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double point_east = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_east_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 point_up = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &point_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_colour = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID point_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_point_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double point_horizontal_accuracy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_horizontal_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double point_vertical_accuracy = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &point_vertical_accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Point.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 filelength = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.Point.PointType point_type = 1;
  if (this->point_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->point_type(), output);
  }

  // string point_designator = 2;
  if (this->point_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->point_designator().data(), static_cast<int>(this->point_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Point.point_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->point_designator(), output);
  }

  // double point_north = 3;
  if (this->point_north() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->point_north(), output);
  }

  // double point_east = 4;
  if (this->point_east() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->point_east(), output);
  }

  // sint64 point_up = 5;
  if (this->point_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->point_up(), output);
  }

  // uint32 point_colour = 6;
  if (this->point_colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->point_colour(), output);
  }

  // .efdi.UID point_id = 7;
  if (this->has_point_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->point_id_, output);
  }

  // double point_horizontal_accuracy = 8;
  if (this->point_horizontal_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->point_horizontal_accuracy(), output);
  }

  // double point_vertical_accuracy = 9;
  if (this->point_vertical_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->point_vertical_accuracy(), output);
  }

  // string filename = 10;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Point.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->filename(), output);
  }

  // uint64 filelength = 11;
  if (this->filelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->filelength(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.Point.PointType point_type = 1;
  if (this->point_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->point_type(), target);
  }

  // string point_designator = 2;
  if (this->point_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->point_designator().data(), static_cast<int>(this->point_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Point.point_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->point_designator(), target);
  }

  // double point_north = 3;
  if (this->point_north() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->point_north(), target);
  }

  // double point_east = 4;
  if (this->point_east() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->point_east(), target);
  }

  // sint64 point_up = 5;
  if (this->point_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->point_up(), target);
  }

  // uint32 point_colour = 6;
  if (this->point_colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->point_colour(), target);
  }

  // .efdi.UID point_id = 7;
  if (this->has_point_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->point_id_, deterministic, target);
  }

  // double point_horizontal_accuracy = 8;
  if (this->point_horizontal_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->point_horizontal_accuracy(), target);
  }

  // double point_vertical_accuracy = 9;
  if (this->point_vertical_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->point_vertical_accuracy(), target);
  }

  // string filename = 10;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Point.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->filename(), target);
  }

  // uint64 filelength = 11;
  if (this->filelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->filelength(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string point_designator = 2;
  if (this->point_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->point_designator());
  }

  // string filename = 10;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // .efdi.UID point_id = 7;
  if (this->has_point_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->point_id_);
  }

  // double point_north = 3;
  if (this->point_north() != 0) {
    total_size += 1 + 8;
  }

  // .efdi.Point.PointType point_type = 1;
  if (this->point_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->point_type());
  }

  // uint32 point_colour = 6;
  if (this->point_colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_colour());
  }

  // double point_east = 4;
  if (this->point_east() != 0) {
    total_size += 1 + 8;
  }

  // sint64 point_up = 5;
  if (this->point_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->point_up());
  }

  // double point_horizontal_accuracy = 8;
  if (this->point_horizontal_accuracy() != 0) {
    total_size += 1 + 8;
  }

  // double point_vertical_accuracy = 9;
  if (this->point_vertical_accuracy() != 0) {
    total_size += 1 + 8;
  }

  // uint64 filelength = 11;
  if (this->filelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filelength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.point_designator().size() > 0) {

    point_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.point_designator_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.has_point_id()) {
    mutable_point_id()->::efdi::UID::MergeFrom(from.point_id());
  }
  if (from.point_north() != 0) {
    set_point_north(from.point_north());
  }
  if (from.point_type() != 0) {
    set_point_type(from.point_type());
  }
  if (from.point_colour() != 0) {
    set_point_colour(from.point_colour());
  }
  if (from.point_east() != 0) {
    set_point_east(from.point_east());
  }
  if (from.point_up() != 0) {
    set_point_up(from.point_up());
  }
  if (from.point_horizontal_accuracy() != 0) {
    set_point_horizontal_accuracy(from.point_horizontal_accuracy());
  }
  if (from.point_vertical_accuracy() != 0) {
    set_point_vertical_accuracy(from.point_vertical_accuracy());
  }
  if (from.filelength() != 0) {
    set_filelength(from.filelength());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  point_designator_.Swap(&other->point_designator_);
  filename_.Swap(&other->filename_);
  swap(point_id_, other->point_id_);
  swap(point_north_, other->point_north_);
  swap(point_type_, other->point_type_);
  swap(point_colour_, other->point_colour_);
  swap(point_east_, other->point_east_);
  swap(point_up_, other->point_up_);
  swap(point_horizontal_accuracy_, other->point_horizontal_accuracy_);
  swap(point_vertical_accuracy_, other->point_vertical_accuracy_);
  swap(filelength_, other->filelength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
  ::efdi::_Polygon_default_instance_._instance.get_mutable()->polygon_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Polygon::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kPolygonTypeFieldNumber;
const int Polygon::kPolygonDesignatorFieldNumber;
const int Polygon::kPolygonAreaFieldNumber;
const int Polygon::kPolygonColourFieldNumber;
const int Polygon::kPolygonIdFieldNumber;
const int Polygon::kLineStringFieldNumber;
const int Polygon::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      line_string_(from.line_string_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  polygon_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.polygon_designator().size() > 0) {
    polygon_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.polygon_designator_);
  }
  if (from.has_polygon_id()) {
    polygon_id_ = new ::efdi::UID(*from.polygon_id_);
  } else {
    polygon_id_ = NULL;
  }
  ::memcpy(&polygon_type_, &from.polygon_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&polygon_area_) -
    reinterpret_cast<char*>(&polygon_type_)) + sizeof(polygon_area_));
  // @@protoc_insertion_point(copy_constructor:efdi.Polygon)
}

void Polygon::SharedCtor() {
  polygon_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&polygon_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&polygon_area_) -
      reinterpret_cast<char*>(&polygon_id_)) + sizeof(polygon_area_));
  _cached_size_ = 0;
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:efdi.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
  polygon_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete polygon_id_;
}

void Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPolygon();
  return *internal_default_instance();
}

Polygon* Polygon::New(::google::protobuf::Arena* arena) const {
  Polygon* n = new Polygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_string_.Clear();
  extension_.Clear();
  polygon_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && polygon_id_ != NULL) {
    delete polygon_id_;
  }
  polygon_id_ = NULL;
  ::memset(&polygon_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&polygon_area_) -
      reinterpret_cast<char*>(&polygon_type_)) + sizeof(polygon_area_));
  _internal_metadata_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.Polygon.PolygonType polygon_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_polygon_type(static_cast< ::efdi::Polygon_PolygonType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string polygon_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_polygon_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->polygon_designator().data(), static_cast<int>(this->polygon_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Polygon.polygon_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 polygon_area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &polygon_area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 polygon_colour = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &polygon_colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID polygon_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygon_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.LineString line_string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_line_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.Polygon.PolygonType polygon_type = 1;
  if (this->polygon_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->polygon_type(), output);
  }

  // string polygon_designator = 2;
  if (this->polygon_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->polygon_designator().data(), static_cast<int>(this->polygon_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Polygon.polygon_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->polygon_designator(), output);
  }

  // uint64 polygon_area = 3;
  if (this->polygon_area() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->polygon_area(), output);
  }

  // uint32 polygon_colour = 4;
  if (this->polygon_colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->polygon_colour(), output);
  }

  // .efdi.UID polygon_id = 5;
  if (this->has_polygon_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->polygon_id_, output);
  }

  // repeated .efdi.LineString line_string = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_string_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->line_string(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.Polygon.PolygonType polygon_type = 1;
  if (this->polygon_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->polygon_type(), target);
  }

  // string polygon_designator = 2;
  if (this->polygon_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->polygon_designator().data(), static_cast<int>(this->polygon_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Polygon.polygon_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->polygon_designator(), target);
  }

  // uint64 polygon_area = 3;
  if (this->polygon_area() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->polygon_area(), target);
  }

  // uint32 polygon_colour = 4;
  if (this->polygon_colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->polygon_colour(), target);
  }

  // .efdi.UID polygon_id = 5;
  if (this->has_polygon_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->polygon_id_, deterministic, target);
  }

  // repeated .efdi.LineString line_string = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_string_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->line_string(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Polygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.LineString line_string = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->line_string_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line_string(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string polygon_designator = 2;
  if (this->polygon_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->polygon_designator());
  }

  // .efdi.UID polygon_id = 5;
  if (this->has_polygon_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->polygon_id_);
  }

  // .efdi.Polygon.PolygonType polygon_type = 1;
  if (this->polygon_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->polygon_type());
  }

  // uint32 polygon_colour = 4;
  if (this->polygon_colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->polygon_colour());
  }

  // uint64 polygon_area = 3;
  if (this->polygon_area() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->polygon_area());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_string_.MergeFrom(from.line_string_);
  extension_.MergeFrom(from.extension_);
  if (from.polygon_designator().size() > 0) {

    polygon_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.polygon_designator_);
  }
  if (from.has_polygon_id()) {
    mutable_polygon_id()->::efdi::UID::MergeFrom(from.polygon_id());
  }
  if (from.polygon_type() != 0) {
    set_polygon_type(from.polygon_type());
  }
  if (from.polygon_colour() != 0) {
    set_polygon_colour(from.polygon_colour());
  }
  if (from.polygon_area() != 0) {
    set_polygon_area(from.polygon_area());
  }
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  line_string_.InternalSwap(&other->line_string_);
  extension_.InternalSwap(&other->extension_);
  polygon_designator_.Swap(&other->polygon_designator_);
  swap(polygon_id_, other->polygon_id_);
  swap(polygon_type_, other->polygon_type_);
  swap(polygon_colour_, other->polygon_colour_);
  swap(polygon_area_, other->polygon_area_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
  ::efdi::_Position_default_instance_._instance.get_mutable()->gps_utc_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Position::clear_gps_utc_timestamp() {
  if (GetArenaNoVirtual() == NULL && gps_utc_timestamp_ != NULL) {
    delete gps_utc_timestamp_;
  }
  gps_utc_timestamp_ = NULL;
}
void Position::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kPositionNorthFieldNumber;
const int Position::kPositionEastFieldNumber;
const int Position::kPositionUpFieldNumber;
const int Position::kPositionStatusFieldNumber;
const int Position::kPdopFieldNumber;
const int Position::kHdopFieldNumber;
const int Position::kNumberOfSatellitesFieldNumber;
const int Position::kGpsUtcTimestampFieldNumber;
const int Position::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gps_utc_timestamp()) {
    gps_utc_timestamp_ = new ::google::protobuf::Timestamp(*from.gps_utc_timestamp_);
  } else {
    gps_utc_timestamp_ = NULL;
  }
  ::memcpy(&position_north_, &from.position_north_,
    static_cast<size_t>(reinterpret_cast<char*>(&hdop_) -
    reinterpret_cast<char*>(&position_north_)) + sizeof(hdop_));
  // @@protoc_insertion_point(copy_constructor:efdi.Position)
}

void Position::SharedCtor() {
  ::memset(&gps_utc_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdop_) -
      reinterpret_cast<char*>(&gps_utc_timestamp_)) + sizeof(hdop_));
  _cached_size_ = 0;
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:efdi.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  if (this != internal_default_instance()) delete gps_utc_timestamp_;
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsPosition();
  return *internal_default_instance();
}

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && gps_utc_timestamp_ != NULL) {
    delete gps_utc_timestamp_;
  }
  gps_utc_timestamp_ = NULL;
  ::memset(&position_north_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdop_) -
      reinterpret_cast<char*>(&position_north_)) + sizeof(hdop_));
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double position_north = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_north_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double position_east = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &position_east_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 position_up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &position_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position.PositionStatus position_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_position_status(static_cast< ::efdi::Position_PositionStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pdop = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double hdop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_satellites = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_satellites_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp gps_utc_timestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps_utc_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double position_north = 1;
  if (this->position_north() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->position_north(), output);
  }

  // double position_east = 2;
  if (this->position_east() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->position_east(), output);
  }

  // sint64 position_up = 3;
  if (this->position_up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->position_up(), output);
  }

  // .efdi.Position.PositionStatus position_status = 4;
  if (this->position_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->position_status(), output);
  }

  // double pdop = 5;
  if (this->pdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pdop(), output);
  }

  // double hdop = 6;
  if (this->hdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->hdop(), output);
  }

  // uint32 number_of_satellites = 7;
  if (this->number_of_satellites() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number_of_satellites(), output);
  }

  // .google.protobuf.Timestamp gps_utc_timestamp = 8;
  if (this->has_gps_utc_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->gps_utc_timestamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double position_north = 1;
  if (this->position_north() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->position_north(), target);
  }

  // double position_east = 2;
  if (this->position_east() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->position_east(), target);
  }

  // sint64 position_up = 3;
  if (this->position_up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->position_up(), target);
  }

  // .efdi.Position.PositionStatus position_status = 4;
  if (this->position_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->position_status(), target);
  }

  // double pdop = 5;
  if (this->pdop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->pdop(), target);
  }

  // double hdop = 6;
  if (this->hdop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->hdop(), target);
  }

  // uint32 number_of_satellites = 7;
  if (this->number_of_satellites() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number_of_satellites(), target);
  }

  // .google.protobuf.Timestamp gps_utc_timestamp = 8;
  if (this->has_gps_utc_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->gps_utc_timestamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp gps_utc_timestamp = 8;
  if (this->has_gps_utc_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->gps_utc_timestamp_);
  }

  // double position_north = 1;
  if (this->position_north() != 0) {
    total_size += 1 + 8;
  }

  // double position_east = 2;
  if (this->position_east() != 0) {
    total_size += 1 + 8;
  }

  // sint64 position_up = 3;
  if (this->position_up() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->position_up());
  }

  // double pdop = 5;
  if (this->pdop() != 0) {
    total_size += 1 + 8;
  }

  // .efdi.Position.PositionStatus position_status = 4;
  if (this->position_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->position_status());
  }

  // uint32 number_of_satellites = 7;
  if (this->number_of_satellites() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_satellites());
  }

  // double hdop = 6;
  if (this->hdop() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_gps_utc_timestamp()) {
    mutable_gps_utc_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.gps_utc_timestamp());
  }
  if (from.position_north() != 0) {
    set_position_north(from.position_north());
  }
  if (from.position_east() != 0) {
    set_position_east(from.position_east());
  }
  if (from.position_up() != 0) {
    set_position_up(from.position_up());
  }
  if (from.pdop() != 0) {
    set_pdop(from.pdop());
  }
  if (from.position_status() != 0) {
    set_position_status(from.position_status());
  }
  if (from.number_of_satellites() != 0) {
    set_number_of_satellites(from.number_of_satellites());
  }
  if (from.hdop() != 0) {
    set_hdop(from.hdop());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(gps_utc_timestamp_, other->gps_utc_timestamp_);
  swap(position_north_, other->position_north_);
  swap(position_east_, other->position_east_);
  swap(position_up_, other->position_up_);
  swap(pdop_, other->pdop_);
  swap(position_status_, other->position_status_);
  swap(number_of_satellites_, other->number_of_satellites_);
  swap(hdop_, other->hdop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessDataVariable::InitAsDefaultInstance() {
  ::efdi::_ProcessDataVariable_default_instance_._instance.get_mutable()->product_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProcessDataVariable_default_instance_._instance.get_mutable()->device_element_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProcessDataVariable_default_instance_._instance.get_mutable()->value_presentation_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ProcessDataVariable::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessDataVariable::kProcessDataDdiFieldNumber;
const int ProcessDataVariable::kProcessDataValueFieldNumber;
const int ProcessDataVariable::kProductIdRefFieldNumber;
const int ProcessDataVariable::kDeviceElementIdRefFieldNumber;
const int ProcessDataVariable::kValuePresentationIdRefFieldNumber;
const int ProcessDataVariable::kActualCulturalPracticeValueFieldNumber;
const int ProcessDataVariable::kElementTypeInstanceValueFieldNumber;
const int ProcessDataVariable::kProcessDataVariableFieldNumber;
const int ProcessDataVariable::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessDataVariable::ProcessDataVariable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProcessDataVariable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ProcessDataVariable)
}
ProcessDataVariable::ProcessDataVariable(const ProcessDataVariable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      process_data_variable_(from.process_data_variable_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_product_id_ref()) {
    product_id_ref_ = new ::efdi::UID(*from.product_id_ref_);
  } else {
    product_id_ref_ = NULL;
  }
  if (from.has_device_element_id_ref()) {
    device_element_id_ref_ = new ::efdi::UID(*from.device_element_id_ref_);
  } else {
    device_element_id_ref_ = NULL;
  }
  if (from.has_value_presentation_id_ref()) {
    value_presentation_id_ref_ = new ::efdi::UID(*from.value_presentation_id_ref_);
  } else {
    value_presentation_id_ref_ = NULL;
  }
  ::memcpy(&process_data_value_, &from.process_data_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&process_data_ddi_) -
    reinterpret_cast<char*>(&process_data_value_)) + sizeof(process_data_ddi_));
  // @@protoc_insertion_point(copy_constructor:efdi.ProcessDataVariable)
}

void ProcessDataVariable::SharedCtor() {
  ::memset(&product_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_data_ddi_) -
      reinterpret_cast<char*>(&product_id_ref_)) + sizeof(process_data_ddi_));
  _cached_size_ = 0;
}

ProcessDataVariable::~ProcessDataVariable() {
  // @@protoc_insertion_point(destructor:efdi.ProcessDataVariable)
  SharedDtor();
}

void ProcessDataVariable::SharedDtor() {
  if (this != internal_default_instance()) delete product_id_ref_;
  if (this != internal_default_instance()) delete device_element_id_ref_;
  if (this != internal_default_instance()) delete value_presentation_id_ref_;
}

void ProcessDataVariable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessDataVariable::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessDataVariable& ProcessDataVariable::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProcessDataVariable();
  return *internal_default_instance();
}

ProcessDataVariable* ProcessDataVariable::New(::google::protobuf::Arena* arena) const {
  ProcessDataVariable* n = new ProcessDataVariable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessDataVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ProcessDataVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  process_data_variable_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && product_id_ref_ != NULL) {
    delete product_id_ref_;
  }
  product_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_ != NULL) {
    delete device_element_id_ref_;
  }
  device_element_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_presentation_id_ref_ != NULL) {
    delete value_presentation_id_ref_;
  }
  value_presentation_id_ref_ = NULL;
  ::memset(&process_data_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_data_ddi_) -
      reinterpret_cast<char*>(&process_data_value_)) + sizeof(process_data_ddi_));
  _internal_metadata_.Clear();
}

bool ProcessDataVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ProcessDataVariable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 process_data_ddi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_data_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 process_data_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &process_data_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID product_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID value_presentation_id_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_presentation_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 actual_cultural_practice_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &actual_cultural_practice_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 element_type_instance_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &element_type_instance_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ProcessDataVariable process_data_variable = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_process_data_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ProcessDataVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ProcessDataVariable)
  return false;
#undef DO_
}

void ProcessDataVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ProcessDataVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->process_data_ddi(), output);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->process_data_value(), output);
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->product_id_ref_, output);
  }

  // .efdi.UID device_element_id_ref = 4;
  if (this->has_device_element_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->device_element_id_ref_, output);
  }

  // .efdi.UID value_presentation_id_ref = 5;
  if (this->has_value_presentation_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->value_presentation_id_ref_, output);
  }

  // sint64 actual_cultural_practice_value = 6;
  if (this->actual_cultural_practice_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->actual_cultural_practice_value(), output);
  }

  // sint64 element_type_instance_value = 7;
  if (this->element_type_instance_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->element_type_instance_value(), output);
  }

  // repeated .efdi.ProcessDataVariable process_data_variable = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->process_data_variable_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->process_data_variable(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ProcessDataVariable)
}

::google::protobuf::uint8* ProcessDataVariable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ProcessDataVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->process_data_ddi(), target);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->process_data_value(), target);
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->product_id_ref_, deterministic, target);
  }

  // .efdi.UID device_element_id_ref = 4;
  if (this->has_device_element_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->device_element_id_ref_, deterministic, target);
  }

  // .efdi.UID value_presentation_id_ref = 5;
  if (this->has_value_presentation_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->value_presentation_id_ref_, deterministic, target);
  }

  // sint64 actual_cultural_practice_value = 6;
  if (this->actual_cultural_practice_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->actual_cultural_practice_value(), target);
  }

  // sint64 element_type_instance_value = 7;
  if (this->element_type_instance_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->element_type_instance_value(), target);
  }

  // repeated .efdi.ProcessDataVariable process_data_variable = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->process_data_variable_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->process_data_variable(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ProcessDataVariable)
  return target;
}

size_t ProcessDataVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ProcessDataVariable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.ProcessDataVariable process_data_variable = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->process_data_variable_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->process_data_variable(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID product_id_ref = 3;
  if (this->has_product_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_id_ref_);
  }

  // .efdi.UID device_element_id_ref = 4;
  if (this->has_device_element_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_);
  }

  // .efdi.UID value_presentation_id_ref = 5;
  if (this->has_value_presentation_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_presentation_id_ref_);
  }

  // sint64 process_data_value = 2;
  if (this->process_data_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->process_data_value());
  }

  // sint64 actual_cultural_practice_value = 6;
  if (this->actual_cultural_practice_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->actual_cultural_practice_value());
  }

  // sint64 element_type_instance_value = 7;
  if (this->element_type_instance_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->element_type_instance_value());
  }

  // uint32 process_data_ddi = 1;
  if (this->process_data_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->process_data_ddi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessDataVariable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ProcessDataVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessDataVariable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessDataVariable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ProcessDataVariable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ProcessDataVariable)
    MergeFrom(*source);
  }
}

void ProcessDataVariable::MergeFrom(const ProcessDataVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ProcessDataVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  process_data_variable_.MergeFrom(from.process_data_variable_);
  extension_.MergeFrom(from.extension_);
  if (from.has_product_id_ref()) {
    mutable_product_id_ref()->::efdi::UID::MergeFrom(from.product_id_ref());
  }
  if (from.has_device_element_id_ref()) {
    mutable_device_element_id_ref()->::efdi::UID::MergeFrom(from.device_element_id_ref());
  }
  if (from.has_value_presentation_id_ref()) {
    mutable_value_presentation_id_ref()->::efdi::UID::MergeFrom(from.value_presentation_id_ref());
  }
  if (from.process_data_value() != 0) {
    set_process_data_value(from.process_data_value());
  }
  if (from.actual_cultural_practice_value() != 0) {
    set_actual_cultural_practice_value(from.actual_cultural_practice_value());
  }
  if (from.element_type_instance_value() != 0) {
    set_element_type_instance_value(from.element_type_instance_value());
  }
  if (from.process_data_ddi() != 0) {
    set_process_data_ddi(from.process_data_ddi());
  }
}

void ProcessDataVariable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ProcessDataVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessDataVariable::CopyFrom(const ProcessDataVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ProcessDataVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessDataVariable::IsInitialized() const {
  return true;
}

void ProcessDataVariable::Swap(ProcessDataVariable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessDataVariable::InternalSwap(ProcessDataVariable* other) {
  using std::swap;
  process_data_variable_.InternalSwap(&other->process_data_variable_);
  extension_.InternalSwap(&other->extension_);
  swap(product_id_ref_, other->product_id_ref_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  swap(value_presentation_id_ref_, other->value_presentation_id_ref_);
  swap(process_data_value_, other->process_data_value_);
  swap(actual_cultural_practice_value_, other->actual_cultural_practice_value_);
  swap(element_type_instance_value_, other->element_type_instance_value_);
  swap(process_data_ddi_, other->process_data_ddi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessDataVariable::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Product::InitAsDefaultInstance() {
  ::efdi::_Product_default_instance_._instance.get_mutable()->product_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Product_default_instance_._instance.get_mutable()->product_group_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Product_default_instance_._instance.get_mutable()->value_presention_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Product::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kProductIdFieldNumber;
const int Product::kProductDesignatorFieldNumber;
const int Product::kProductGroupIdRefFieldNumber;
const int Product::kValuePresentionIdRefFieldNumber;
const int Product::kQuantityDdiFieldNumber;
const int Product::kProductTypeFieldNumber;
const int Product::kMixtureRecipeQuantityFieldNumber;
const int Product::kDensityMassPerVolumeFieldNumber;
const int Product::kDensityMassPerCountFieldNumber;
const int Product::kDensityVolumePerCountFieldNumber;
const int Product::kProductRelationFieldNumber;
const int Product::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProduct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      product_relation_(from.product_relation_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_designator().size() > 0) {
    product_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_designator_);
  }
  if (from.has_product_id()) {
    product_id_ = new ::efdi::UID(*from.product_id_);
  } else {
    product_id_ = NULL;
  }
  if (from.has_product_group_id_ref()) {
    product_group_id_ref_ = new ::efdi::UID(*from.product_group_id_ref_);
  } else {
    product_group_id_ref_ = NULL;
  }
  if (from.has_value_presention_id_ref()) {
    value_presention_id_ref_ = new ::efdi::UID(*from.value_presention_id_ref_);
  } else {
    value_presention_id_ref_ = NULL;
  }
  ::memcpy(&quantity_ddi_, &from.quantity_ddi_,
    static_cast<size_t>(reinterpret_cast<char*>(&density_volume_per_count_) -
    reinterpret_cast<char*>(&quantity_ddi_)) + sizeof(density_volume_per_count_));
  // @@protoc_insertion_point(copy_constructor:efdi.Product)
}

void Product::SharedCtor() {
  product_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&product_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&density_volume_per_count_) -
      reinterpret_cast<char*>(&product_id_)) + sizeof(density_volume_per_count_));
  _cached_size_ = 0;
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:efdi.Product)
  SharedDtor();
}

void Product::SharedDtor() {
  product_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete product_id_;
  if (this != internal_default_instance()) delete product_group_id_ref_;
  if (this != internal_default_instance()) delete value_presention_id_ref_;
}

void Product::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Product& Product::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProduct();
  return *internal_default_instance();
}

Product* Product::New(::google::protobuf::Arena* arena) const {
  Product* n = new Product;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_relation_.Clear();
  extension_.Clear();
  product_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && product_id_ != NULL) {
    delete product_id_;
  }
  product_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_group_id_ref_ != NULL) {
    delete product_group_id_ref_;
  }
  product_group_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_presention_id_ref_ != NULL) {
    delete value_presention_id_ref_;
  }
  value_presention_id_ref_ = NULL;
  ::memset(&quantity_ddi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&density_volume_per_count_) -
      reinterpret_cast<char*>(&quantity_ddi_)) + sizeof(density_volume_per_count_));
  _internal_metadata_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Product)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_designator().data(), static_cast<int>(this->product_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Product.product_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID product_group_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_group_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID value_presention_id_ref = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_presention_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quantity_ddi = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Product.ProductType product_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_product_type(static_cast< ::efdi::Product_ProductType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 mixture_recipe_quantity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &mixture_recipe_quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 density_mass_per_volume = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &density_mass_per_volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 density_mass_per_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &density_mass_per_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 density_volume_per_count = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &density_volume_per_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ProductRelation product_relation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_product_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id = 1;
  if (this->has_product_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->product_id_, output);
  }

  // string product_designator = 2;
  if (this->product_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_designator().data(), static_cast<int>(this->product_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Product.product_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product_designator(), output);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->product_group_id_ref_, output);
  }

  // .efdi.UID value_presention_id_ref = 4;
  if (this->has_value_presention_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->value_presention_id_ref_, output);
  }

  // uint32 quantity_ddi = 5;
  if (this->quantity_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quantity_ddi(), output);
  }

  // .efdi.Product.ProductType product_type = 6;
  if (this->product_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->product_type(), output);
  }

  // sint64 mixture_recipe_quantity = 7;
  if (this->mixture_recipe_quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->mixture_recipe_quantity(), output);
  }

  // sint64 density_mass_per_volume = 8;
  if (this->density_mass_per_volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->density_mass_per_volume(), output);
  }

  // sint64 density_mass_per_count = 9;
  if (this->density_mass_per_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->density_mass_per_count(), output);
  }

  // sint64 density_volume_per_count = 10;
  if (this->density_volume_per_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(10, this->density_volume_per_count(), output);
  }

  // repeated .efdi.ProductRelation product_relation = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_relation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->product_relation(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id = 1;
  if (this->has_product_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->product_id_, deterministic, target);
  }

  // string product_designator = 2;
  if (this->product_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_designator().data(), static_cast<int>(this->product_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Product.product_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_designator(), target);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->product_group_id_ref_, deterministic, target);
  }

  // .efdi.UID value_presention_id_ref = 4;
  if (this->has_value_presention_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->value_presention_id_ref_, deterministic, target);
  }

  // uint32 quantity_ddi = 5;
  if (this->quantity_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quantity_ddi(), target);
  }

  // .efdi.Product.ProductType product_type = 6;
  if (this->product_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->product_type(), target);
  }

  // sint64 mixture_recipe_quantity = 7;
  if (this->mixture_recipe_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->mixture_recipe_quantity(), target);
  }

  // sint64 density_mass_per_volume = 8;
  if (this->density_mass_per_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->density_mass_per_volume(), target);
  }

  // sint64 density_mass_per_count = 9;
  if (this->density_mass_per_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->density_mass_per_count(), target);
  }

  // sint64 density_volume_per_count = 10;
  if (this->density_volume_per_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(10, this->density_volume_per_count(), target);
  }

  // repeated .efdi.ProductRelation product_relation = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_relation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->product_relation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Product)
  return target;
}

size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Product)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.ProductRelation product_relation = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->product_relation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->product_relation(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string product_designator = 2;
  if (this->product_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_designator());
  }

  // .efdi.UID product_id = 1;
  if (this->has_product_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_id_);
  }

  // .efdi.UID product_group_id_ref = 3;
  if (this->has_product_group_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_group_id_ref_);
  }

  // .efdi.UID value_presention_id_ref = 4;
  if (this->has_value_presention_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_presention_id_ref_);
  }

  // uint32 quantity_ddi = 5;
  if (this->quantity_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_ddi());
  }

  // .efdi.Product.ProductType product_type = 6;
  if (this->product_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->product_type());
  }

  // sint64 mixture_recipe_quantity = 7;
  if (this->mixture_recipe_quantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->mixture_recipe_quantity());
  }

  // sint64 density_mass_per_volume = 8;
  if (this->density_mass_per_volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->density_mass_per_volume());
  }

  // sint64 density_mass_per_count = 9;
  if (this->density_mass_per_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->density_mass_per_count());
  }

  // sint64 density_volume_per_count = 10;
  if (this->density_volume_per_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->density_volume_per_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_relation_.MergeFrom(from.product_relation_);
  extension_.MergeFrom(from.extension_);
  if (from.product_designator().size() > 0) {

    product_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_designator_);
  }
  if (from.has_product_id()) {
    mutable_product_id()->::efdi::UID::MergeFrom(from.product_id());
  }
  if (from.has_product_group_id_ref()) {
    mutable_product_group_id_ref()->::efdi::UID::MergeFrom(from.product_group_id_ref());
  }
  if (from.has_value_presention_id_ref()) {
    mutable_value_presention_id_ref()->::efdi::UID::MergeFrom(from.value_presention_id_ref());
  }
  if (from.quantity_ddi() != 0) {
    set_quantity_ddi(from.quantity_ddi());
  }
  if (from.product_type() != 0) {
    set_product_type(from.product_type());
  }
  if (from.mixture_recipe_quantity() != 0) {
    set_mixture_recipe_quantity(from.mixture_recipe_quantity());
  }
  if (from.density_mass_per_volume() != 0) {
    set_density_mass_per_volume(from.density_mass_per_volume());
  }
  if (from.density_mass_per_count() != 0) {
    set_density_mass_per_count(from.density_mass_per_count());
  }
  if (from.density_volume_per_count() != 0) {
    set_density_volume_per_count(from.density_volume_per_count());
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  product_relation_.InternalSwap(&other->product_relation_);
  extension_.InternalSwap(&other->extension_);
  product_designator_.Swap(&other->product_designator_);
  swap(product_id_, other->product_id_);
  swap(product_group_id_ref_, other->product_group_id_ref_);
  swap(value_presention_id_ref_, other->value_presention_id_ref_);
  swap(quantity_ddi_, other->quantity_ddi_);
  swap(product_type_, other->product_type_);
  swap(mixture_recipe_quantity_, other->mixture_recipe_quantity_);
  swap(density_mass_per_volume_, other->density_mass_per_volume_);
  swap(density_mass_per_count_, other->density_mass_per_count_);
  swap(density_volume_per_count_, other->density_volume_per_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProductAllocation::InitAsDefaultInstance() {
  ::efdi::_ProductAllocation_default_instance_._instance.get_mutable()->product_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProductAllocation_default_instance_._instance.get_mutable()->device_element_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProductAllocation_default_instance_._instance.get_mutable()->value_presentation_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProductAllocation_default_instance_._instance.get_mutable()->product_sub_type_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ProductAllocation_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void ProductAllocation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductAllocation::kProductIdRefFieldNumber;
const int ProductAllocation::kQuantityDdiFieldNumber;
const int ProductAllocation::kQuantityValueFieldNumber;
const int ProductAllocation::kTransferModeFieldNumber;
const int ProductAllocation::kDeviceElementIdRefFieldNumber;
const int ProductAllocation::kValuePresentationIdRefFieldNumber;
const int ProductAllocation::kProductSubTypeIdRefFieldNumber;
const int ProductAllocation::kAllocationStampFieldNumber;
const int ProductAllocation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductAllocation::ProductAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductAllocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ProductAllocation)
}
ProductAllocation::ProductAllocation(const ProductAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_product_id_ref()) {
    product_id_ref_ = new ::efdi::UID(*from.product_id_ref_);
  } else {
    product_id_ref_ = NULL;
  }
  if (from.has_device_element_id_ref()) {
    device_element_id_ref_ = new ::efdi::UID(*from.device_element_id_ref_);
  } else {
    device_element_id_ref_ = NULL;
  }
  if (from.has_value_presentation_id_ref()) {
    value_presentation_id_ref_ = new ::efdi::UID(*from.value_presentation_id_ref_);
  } else {
    value_presentation_id_ref_ = NULL;
  }
  if (from.has_product_sub_type_id_ref()) {
    product_sub_type_id_ref_ = new ::efdi::UID(*from.product_sub_type_id_ref_);
  } else {
    product_sub_type_id_ref_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  ::memcpy(&quantity_value_, &from.quantity_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&transfer_mode_) -
    reinterpret_cast<char*>(&quantity_value_)) + sizeof(transfer_mode_));
  // @@protoc_insertion_point(copy_constructor:efdi.ProductAllocation)
}

void ProductAllocation::SharedCtor() {
  ::memset(&product_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transfer_mode_) -
      reinterpret_cast<char*>(&product_id_ref_)) + sizeof(transfer_mode_));
  _cached_size_ = 0;
}

ProductAllocation::~ProductAllocation() {
  // @@protoc_insertion_point(destructor:efdi.ProductAllocation)
  SharedDtor();
}

void ProductAllocation::SharedDtor() {
  if (this != internal_default_instance()) delete product_id_ref_;
  if (this != internal_default_instance()) delete device_element_id_ref_;
  if (this != internal_default_instance()) delete value_presentation_id_ref_;
  if (this != internal_default_instance()) delete product_sub_type_id_ref_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void ProductAllocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductAllocation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductAllocation& ProductAllocation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductAllocation();
  return *internal_default_instance();
}

ProductAllocation* ProductAllocation::New(::google::protobuf::Arena* arena) const {
  ProductAllocation* n = new ProductAllocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ProductAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && product_id_ref_ != NULL) {
    delete product_id_ref_;
  }
  product_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_element_id_ref_ != NULL) {
    delete device_element_id_ref_;
  }
  device_element_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_presentation_id_ref_ != NULL) {
    delete value_presentation_id_ref_;
  }
  value_presentation_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_sub_type_id_ref_ != NULL) {
    delete product_sub_type_id_ref_;
  }
  product_sub_type_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  ::memset(&quantity_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transfer_mode_) -
      reinterpret_cast<char*>(&quantity_value_)) + sizeof(transfer_mode_));
  _internal_metadata_.Clear();
}

bool ProductAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ProductAllocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID product_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quantity_ddi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_ddi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 quantity_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &quantity_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.ProductAllocation.TransferMode transfer_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transfer_mode(static_cast< ::efdi::ProductAllocation_TransferMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID device_element_id_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_element_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID value_presentation_id_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_presentation_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID product_sub_type_id_ref = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_sub_type_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ProductAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ProductAllocation)
  return false;
#undef DO_
}

void ProductAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ProductAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->product_id_ref_, output);
  }

  // uint32 quantity_ddi = 2;
  if (this->quantity_ddi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity_ddi(), output);
  }

  // sint64 quantity_value = 3;
  if (this->quantity_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->quantity_value(), output);
  }

  // .efdi.ProductAllocation.TransferMode transfer_mode = 4;
  if (this->transfer_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->transfer_mode(), output);
  }

  // .efdi.UID device_element_id_ref = 5;
  if (this->has_device_element_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->device_element_id_ref_, output);
  }

  // .efdi.UID value_presentation_id_ref = 6;
  if (this->has_value_presentation_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->value_presentation_id_ref_, output);
  }

  // .efdi.UID product_sub_type_id_ref = 7;
  if (this->has_product_sub_type_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->product_sub_type_id_ref_, output);
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ProductAllocation)
}

::google::protobuf::uint8* ProductAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ProductAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->product_id_ref_, deterministic, target);
  }

  // uint32 quantity_ddi = 2;
  if (this->quantity_ddi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity_ddi(), target);
  }

  // sint64 quantity_value = 3;
  if (this->quantity_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->quantity_value(), target);
  }

  // .efdi.ProductAllocation.TransferMode transfer_mode = 4;
  if (this->transfer_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->transfer_mode(), target);
  }

  // .efdi.UID device_element_id_ref = 5;
  if (this->has_device_element_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->device_element_id_ref_, deterministic, target);
  }

  // .efdi.UID value_presentation_id_ref = 6;
  if (this->has_value_presentation_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->value_presentation_id_ref_, deterministic, target);
  }

  // .efdi.UID product_sub_type_id_ref = 7;
  if (this->has_product_sub_type_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->product_sub_type_id_ref_, deterministic, target);
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ProductAllocation)
  return target;
}

size_t ProductAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ProductAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_id_ref_);
  }

  // .efdi.UID device_element_id_ref = 5;
  if (this->has_device_element_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->device_element_id_ref_);
  }

  // .efdi.UID value_presentation_id_ref = 6;
  if (this->has_value_presentation_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_presentation_id_ref_);
  }

  // .efdi.UID product_sub_type_id_ref = 7;
  if (this->has_product_sub_type_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_sub_type_id_ref_);
  }

  // .efdi.AllocationStamp allocation_stamp = 8;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  // sint64 quantity_value = 3;
  if (this->quantity_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->quantity_value());
  }

  // uint32 quantity_ddi = 2;
  if (this->quantity_ddi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_ddi());
  }

  // .efdi.ProductAllocation.TransferMode transfer_mode = 4;
  if (this->transfer_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transfer_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ProductAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ProductAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ProductAllocation)
    MergeFrom(*source);
  }
}

void ProductAllocation::MergeFrom(const ProductAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ProductAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_product_id_ref()) {
    mutable_product_id_ref()->::efdi::UID::MergeFrom(from.product_id_ref());
  }
  if (from.has_device_element_id_ref()) {
    mutable_device_element_id_ref()->::efdi::UID::MergeFrom(from.device_element_id_ref());
  }
  if (from.has_value_presentation_id_ref()) {
    mutable_value_presentation_id_ref()->::efdi::UID::MergeFrom(from.value_presentation_id_ref());
  }
  if (from.has_product_sub_type_id_ref()) {
    mutable_product_sub_type_id_ref()->::efdi::UID::MergeFrom(from.product_sub_type_id_ref());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
  if (from.quantity_value() != 0) {
    set_quantity_value(from.quantity_value());
  }
  if (from.quantity_ddi() != 0) {
    set_quantity_ddi(from.quantity_ddi());
  }
  if (from.transfer_mode() != 0) {
    set_transfer_mode(from.transfer_mode());
  }
}

void ProductAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ProductAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductAllocation::CopyFrom(const ProductAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ProductAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductAllocation::IsInitialized() const {
  return true;
}

void ProductAllocation::Swap(ProductAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductAllocation::InternalSwap(ProductAllocation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(product_id_ref_, other->product_id_ref_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  swap(value_presentation_id_ref_, other->value_presentation_id_ref_);
  swap(product_sub_type_id_ref_, other->product_sub_type_id_ref_);
  swap(allocation_stamp_, other->allocation_stamp_);
  swap(quantity_value_, other->quantity_value_);
  swap(quantity_ddi_, other->quantity_ddi_);
  swap(transfer_mode_, other->transfer_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductAllocation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProductGroup::InitAsDefaultInstance() {
  ::efdi::_ProductGroup_default_instance_._instance.get_mutable()->product_group_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ProductGroup::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductGroup::kProductGroupIdFieldNumber;
const int ProductGroup::kProductGroupDesignatorFieldNumber;
const int ProductGroup::kProductGroupTypeFieldNumber;
const int ProductGroup::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductGroup::ProductGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ProductGroup)
}
ProductGroup::ProductGroup(const ProductGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_group_designator().size() > 0) {
    product_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_group_designator_);
  }
  if (from.has_product_group_id()) {
    product_group_id_ = new ::efdi::UID(*from.product_group_id_);
  } else {
    product_group_id_ = NULL;
  }
  product_group_type_ = from.product_group_type_;
  // @@protoc_insertion_point(copy_constructor:efdi.ProductGroup)
}

void ProductGroup::SharedCtor() {
  product_group_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&product_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&product_group_type_) -
      reinterpret_cast<char*>(&product_group_id_)) + sizeof(product_group_type_));
  _cached_size_ = 0;
}

ProductGroup::~ProductGroup() {
  // @@protoc_insertion_point(destructor:efdi.ProductGroup)
  SharedDtor();
}

void ProductGroup::SharedDtor() {
  product_group_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete product_group_id_;
}

void ProductGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductGroup::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductGroup& ProductGroup::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductGroup();
  return *internal_default_instance();
}

ProductGroup* ProductGroup::New(::google::protobuf::Arena* arena) const {
  ProductGroup* n = new ProductGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ProductGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  product_group_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && product_group_id_ != NULL) {
    delete product_group_id_;
  }
  product_group_id_ = NULL;
  product_group_type_ = 0;
  _internal_metadata_.Clear();
}

bool ProductGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ProductGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID product_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_group_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_group_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_group_designator().data(), static_cast<int>(this->product_group_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ProductGroup.product_group_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.ProductGroup.ProductGroupType product_group_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_product_group_type(static_cast< ::efdi::ProductGroup_ProductGroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ProductGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ProductGroup)
  return false;
#undef DO_
}

void ProductGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ProductGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_group_id = 1;
  if (this->has_product_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->product_group_id_, output);
  }

  // string product_group_designator = 2;
  if (this->product_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_group_designator().data(), static_cast<int>(this->product_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ProductGroup.product_group_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product_group_designator(), output);
  }

  // .efdi.ProductGroup.ProductGroupType product_group_type = 3;
  if (this->product_group_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->product_group_type(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ProductGroup)
}

::google::protobuf::uint8* ProductGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ProductGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_group_id = 1;
  if (this->has_product_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->product_group_id_, deterministic, target);
  }

  // string product_group_designator = 2;
  if (this->product_group_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_group_designator().data(), static_cast<int>(this->product_group_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ProductGroup.product_group_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_group_designator(), target);
  }

  // .efdi.ProductGroup.ProductGroupType product_group_type = 3;
  if (this->product_group_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->product_group_type(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ProductGroup)
  return target;
}

size_t ProductGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ProductGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string product_group_designator = 2;
  if (this->product_group_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_group_designator());
  }

  // .efdi.UID product_group_id = 1;
  if (this->has_product_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_group_id_);
  }

  // .efdi.ProductGroup.ProductGroupType product_group_type = 3;
  if (this->product_group_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->product_group_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ProductGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ProductGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ProductGroup)
    MergeFrom(*source);
  }
}

void ProductGroup::MergeFrom(const ProductGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ProductGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.product_group_designator().size() > 0) {

    product_group_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_group_designator_);
  }
  if (from.has_product_group_id()) {
    mutable_product_group_id()->::efdi::UID::MergeFrom(from.product_group_id());
  }
  if (from.product_group_type() != 0) {
    set_product_group_type(from.product_group_type());
  }
}

void ProductGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ProductGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductGroup::CopyFrom(const ProductGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ProductGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductGroup::IsInitialized() const {
  return true;
}

void ProductGroup::Swap(ProductGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductGroup::InternalSwap(ProductGroup* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  product_group_designator_.Swap(&other->product_group_designator_);
  swap(product_group_id_, other->product_group_id_);
  swap(product_group_type_, other->product_group_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductGroup::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProductRelation::InitAsDefaultInstance() {
  ::efdi::_ProductRelation_default_instance_._instance.get_mutable()->product_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ProductRelation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductRelation::kProductIdRefFieldNumber;
const int ProductRelation::kQuantityValueFieldNumber;
const int ProductRelation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductRelation::ProductRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductRelation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ProductRelation)
}
ProductRelation::ProductRelation(const ProductRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_product_id_ref()) {
    product_id_ref_ = new ::efdi::UID(*from.product_id_ref_);
  } else {
    product_id_ref_ = NULL;
  }
  quantity_value_ = from.quantity_value_;
  // @@protoc_insertion_point(copy_constructor:efdi.ProductRelation)
}

void ProductRelation::SharedCtor() {
  ::memset(&product_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_value_) -
      reinterpret_cast<char*>(&product_id_ref_)) + sizeof(quantity_value_));
  _cached_size_ = 0;
}

ProductRelation::~ProductRelation() {
  // @@protoc_insertion_point(destructor:efdi.ProductRelation)
  SharedDtor();
}

void ProductRelation::SharedDtor() {
  if (this != internal_default_instance()) delete product_id_ref_;
}

void ProductRelation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductRelation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProductRelation& ProductRelation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsProductRelation();
  return *internal_default_instance();
}

ProductRelation* ProductRelation::New(::google::protobuf::Arena* arena) const {
  ProductRelation* n = new ProductRelation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ProductRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && product_id_ref_ != NULL) {
    delete product_id_ref_;
  }
  product_id_ref_ = NULL;
  quantity_value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ProductRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ProductRelation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID product_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 quantity_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &quantity_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ProductRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ProductRelation)
  return false;
#undef DO_
}

void ProductRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ProductRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->product_id_ref_, output);
  }

  // sint64 quantity_value = 2;
  if (this->quantity_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->quantity_value(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ProductRelation)
}

::google::protobuf::uint8* ProductRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ProductRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->product_id_ref_, deterministic, target);
  }

  // sint64 quantity_value = 2;
  if (this->quantity_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->quantity_value(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ProductRelation)
  return target;
}

size_t ProductRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ProductRelation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID product_id_ref = 1;
  if (this->has_product_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->product_id_ref_);
  }

  // sint64 quantity_value = 2;
  if (this->quantity_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->quantity_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ProductRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ProductRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ProductRelation)
    MergeFrom(*source);
  }
}

void ProductRelation::MergeFrom(const ProductRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ProductRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_product_id_ref()) {
    mutable_product_id_ref()->::efdi::UID::MergeFrom(from.product_id_ref());
  }
  if (from.quantity_value() != 0) {
    set_quantity_value(from.quantity_value());
  }
}

void ProductRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ProductRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductRelation::CopyFrom(const ProductRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ProductRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductRelation::IsInitialized() const {
  return true;
}

void ProductRelation::Swap(ProductRelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductRelation::InternalSwap(ProductRelation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(product_id_ref_, other->product_id_ref_);
  swap(quantity_value_, other->quantity_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductRelation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Task::InitAsDefaultInstance() {
  ::efdi::_Task_default_instance_._instance.get_mutable()->task_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->customer_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->farm_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->partfield_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->responsible_worker_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->oper_tech_practice_ = const_cast< ::efdi::OperTechPractice*>(
      ::efdi::OperTechPractice::internal_default_instance());
  ::efdi::_Task_default_instance_._instance.get_mutable()->grid_ = const_cast< ::efdi::Grid*>(
      ::efdi::Grid::internal_default_instance());
}
void Task::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kTaskIdFieldNumber;
const int Task::kTaskDesignatorFieldNumber;
const int Task::kCustomerIdRefFieldNumber;
const int Task::kFarmIdRefFieldNumber;
const int Task::kPartfieldIdRefFieldNumber;
const int Task::kResponsibleWorkerIdRefFieldNumber;
const int Task::kTaskStatusFieldNumber;
const int Task::kDefaultTreatmentZoneCodeFieldNumber;
const int Task::kPositionLostTreatmentZoneCodeFieldNumber;
const int Task::kOutOfFieldTreatmentZoneCodeFieldNumber;
const int Task::kTreatmentZoneFieldNumber;
const int Task::kTimeFieldNumber;
const int Task::kOperTechPracticeFieldNumber;
const int Task::kWorkerAllocationFieldNumber;
const int Task::kDeviceAllocationFieldNumber;
const int Task::kConnectionFieldNumber;
const int Task::kProductAllocationFieldNumber;
const int Task::kDataLogTriggerFieldNumber;
const int Task::kCommentAllocationFieldNumber;
const int Task::kTimeLogFieldNumber;
const int Task::kGridFieldNumber;
const int Task::kControlAssignmentFieldNumber;
const int Task::kGuidanceAllocationFieldNumber;
const int Task::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Task)
}
Task::Task(const Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      treatment_zone_(from.treatment_zone_),
      time_(from.time_),
      worker_allocation_(from.worker_allocation_),
      device_allocation_(from.device_allocation_),
      connection_(from.connection_),
      product_allocation_(from.product_allocation_),
      data_log_trigger_(from.data_log_trigger_),
      comment_allocation_(from.comment_allocation_),
      time_log_(from.time_log_),
      control_assignment_(from.control_assignment_),
      guidance_allocation_(from.guidance_allocation_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_designator().size() > 0) {
    task_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_designator_);
  }
  if (from.has_task_id()) {
    task_id_ = new ::efdi::UID(*from.task_id_);
  } else {
    task_id_ = NULL;
  }
  if (from.has_customer_id_ref()) {
    customer_id_ref_ = new ::efdi::UID(*from.customer_id_ref_);
  } else {
    customer_id_ref_ = NULL;
  }
  if (from.has_farm_id_ref()) {
    farm_id_ref_ = new ::efdi::UID(*from.farm_id_ref_);
  } else {
    farm_id_ref_ = NULL;
  }
  if (from.has_partfield_id_ref()) {
    partfield_id_ref_ = new ::efdi::UID(*from.partfield_id_ref_);
  } else {
    partfield_id_ref_ = NULL;
  }
  if (from.has_responsible_worker_id_ref()) {
    responsible_worker_id_ref_ = new ::efdi::UID(*from.responsible_worker_id_ref_);
  } else {
    responsible_worker_id_ref_ = NULL;
  }
  if (from.has_oper_tech_practice()) {
    oper_tech_practice_ = new ::efdi::OperTechPractice(*from.oper_tech_practice_);
  } else {
    oper_tech_practice_ = NULL;
  }
  if (from.has_grid()) {
    grid_ = new ::efdi::Grid(*from.grid_);
  } else {
    grid_ = NULL;
  }
  ::memcpy(&task_status_, &from.task_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_of_field_treatment_zone_code_) -
    reinterpret_cast<char*>(&task_status_)) + sizeof(out_of_field_treatment_zone_code_));
  // @@protoc_insertion_point(copy_constructor:efdi.Task)
}

void Task::SharedCtor() {
  task_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_of_field_treatment_zone_code_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(out_of_field_treatment_zone_code_));
  _cached_size_ = 0;
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:efdi.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  task_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete task_id_;
  if (this != internal_default_instance()) delete customer_id_ref_;
  if (this != internal_default_instance()) delete farm_id_ref_;
  if (this != internal_default_instance()) delete partfield_id_ref_;
  if (this != internal_default_instance()) delete responsible_worker_id_ref_;
  if (this != internal_default_instance()) delete oper_tech_practice_;
  if (this != internal_default_instance()) delete grid_;
}

void Task::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Task::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Task& Task::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTask();
  return *internal_default_instance();
}

Task* Task::New(::google::protobuf::Arena* arena) const {
  Task* n = new Task;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  treatment_zone_.Clear();
  time_.Clear();
  worker_allocation_.Clear();
  device_allocation_.Clear();
  connection_.Clear();
  product_allocation_.Clear();
  data_log_trigger_.Clear();
  comment_allocation_.Clear();
  time_log_.Clear();
  control_assignment_.Clear();
  guidance_allocation_.Clear();
  extension_.Clear();
  task_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && task_id_ != NULL) {
    delete task_id_;
  }
  task_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && customer_id_ref_ != NULL) {
    delete customer_id_ref_;
  }
  customer_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && farm_id_ref_ != NULL) {
    delete farm_id_ref_;
  }
  farm_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && partfield_id_ref_ != NULL) {
    delete partfield_id_ref_;
  }
  partfield_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && responsible_worker_id_ref_ != NULL) {
    delete responsible_worker_id_ref_;
  }
  responsible_worker_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && oper_tech_practice_ != NULL) {
    delete oper_tech_practice_;
  }
  oper_tech_practice_ = NULL;
  if (GetArenaNoVirtual() == NULL && grid_ != NULL) {
    delete grid_;
  }
  grid_ = NULL;
  ::memset(&task_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_of_field_treatment_zone_code_) -
      reinterpret_cast<char*>(&task_status_)) + sizeof(out_of_field_treatment_zone_code_));
  _internal_metadata_.Clear();
}

bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Task)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_designator().data(), static_cast<int>(this->task_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Task.task_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID customer_id_ref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID farm_id_ref = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_farm_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID partfield_id_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partfield_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID responsible_worker_id_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsible_worker_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Task.TaskStatus task_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_task_status(static_cast< ::efdi::Task_TaskStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 default_treatment_zone_code = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_treatment_zone_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 position_lost_treatment_zone_code = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_lost_treatment_zone_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 out_of_field_treatment_zone_code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_of_field_treatment_zone_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.TreatmentZone treatment_zone = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_treatment_zone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Time time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.OperTechPractice oper_tech_practice = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oper_tech_practice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.WorkerAllocation worker_allocation = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_worker_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceAllocation device_allocation = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Connection connection = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_connection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ProductAllocation product_allocation = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_product_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DataLogTrigger data_log_trigger = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data_log_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.CommentAllocation comment_allocation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_comment_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.TimeLog time_log = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_time_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Grid grid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_grid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ControlAssignment control_assignment = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_control_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.GuidanceAllocation guidance_allocation = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_guidance_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Task)
  return false;
#undef DO_
}

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID task_id = 1;
  if (this->has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->task_id_, output);
  }

  // string task_designator = 2;
  if (this->task_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_designator().data(), static_cast<int>(this->task_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Task.task_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_designator(), output);
  }

  // .efdi.UID customer_id_ref = 3;
  if (this->has_customer_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->customer_id_ref_, output);
  }

  // .efdi.UID farm_id_ref = 4;
  if (this->has_farm_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->farm_id_ref_, output);
  }

  // .efdi.UID partfield_id_ref = 5;
  if (this->has_partfield_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->partfield_id_ref_, output);
  }

  // .efdi.UID responsible_worker_id_ref = 6;
  if (this->has_responsible_worker_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->responsible_worker_id_ref_, output);
  }

  // .efdi.Task.TaskStatus task_status = 7;
  if (this->task_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->task_status(), output);
  }

  // uint32 default_treatment_zone_code = 8;
  if (this->default_treatment_zone_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->default_treatment_zone_code(), output);
  }

  // uint32 position_lost_treatment_zone_code = 9;
  if (this->position_lost_treatment_zone_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->position_lost_treatment_zone_code(), output);
  }

  // uint32 out_of_field_treatment_zone_code = 10;
  if (this->out_of_field_treatment_zone_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->out_of_field_treatment_zone_code(), output);
  }

  // repeated .efdi.TreatmentZone treatment_zone = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treatment_zone_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->treatment_zone(static_cast<int>(i)), output);
  }

  // repeated .efdi.Time time = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->time(static_cast<int>(i)), output);
  }

  // .efdi.OperTechPractice oper_tech_practice = 13;
  if (this->has_oper_tech_practice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->oper_tech_practice_, output);
  }

  // repeated .efdi.WorkerAllocation worker_allocation = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_allocation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->worker_allocation(static_cast<int>(i)), output);
  }

  // repeated .efdi.DeviceAllocation device_allocation = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_allocation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->device_allocation(static_cast<int>(i)), output);
  }

  // repeated .efdi.Connection connection = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->connection(static_cast<int>(i)), output);
  }

  // repeated .efdi.ProductAllocation product_allocation = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_allocation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->product_allocation(static_cast<int>(i)), output);
  }

  // repeated .efdi.DataLogTrigger data_log_trigger = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_trigger_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->data_log_trigger(static_cast<int>(i)), output);
  }

  // repeated .efdi.CommentAllocation comment_allocation = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->comment_allocation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->comment_allocation(static_cast<int>(i)), output);
  }

  // repeated .efdi.TimeLog time_log = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_log_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->time_log(static_cast<int>(i)), output);
  }

  // .efdi.Grid grid = 21;
  if (this->has_grid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->grid_, output);
  }

  // repeated .efdi.ControlAssignment control_assignment = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->control_assignment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->control_assignment(static_cast<int>(i)), output);
  }

  // repeated .efdi.GuidanceAllocation guidance_allocation = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_allocation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->guidance_allocation(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID task_id = 1;
  if (this->has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->task_id_, deterministic, target);
  }

  // string task_designator = 2;
  if (this->task_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_designator().data(), static_cast<int>(this->task_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Task.task_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_designator(), target);
  }

  // .efdi.UID customer_id_ref = 3;
  if (this->has_customer_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->customer_id_ref_, deterministic, target);
  }

  // .efdi.UID farm_id_ref = 4;
  if (this->has_farm_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->farm_id_ref_, deterministic, target);
  }

  // .efdi.UID partfield_id_ref = 5;
  if (this->has_partfield_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->partfield_id_ref_, deterministic, target);
  }

  // .efdi.UID responsible_worker_id_ref = 6;
  if (this->has_responsible_worker_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->responsible_worker_id_ref_, deterministic, target);
  }

  // .efdi.Task.TaskStatus task_status = 7;
  if (this->task_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->task_status(), target);
  }

  // uint32 default_treatment_zone_code = 8;
  if (this->default_treatment_zone_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->default_treatment_zone_code(), target);
  }

  // uint32 position_lost_treatment_zone_code = 9;
  if (this->position_lost_treatment_zone_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->position_lost_treatment_zone_code(), target);
  }

  // uint32 out_of_field_treatment_zone_code = 10;
  if (this->out_of_field_treatment_zone_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->out_of_field_treatment_zone_code(), target);
  }

  // repeated .efdi.TreatmentZone treatment_zone = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treatment_zone_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->treatment_zone(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Time time = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->time(static_cast<int>(i)), deterministic, target);
  }

  // .efdi.OperTechPractice oper_tech_practice = 13;
  if (this->has_oper_tech_practice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->oper_tech_practice_, deterministic, target);
  }

  // repeated .efdi.WorkerAllocation worker_allocation = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_allocation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->worker_allocation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.DeviceAllocation device_allocation = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_allocation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->device_allocation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.Connection connection = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->connection(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ProductAllocation product_allocation = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->product_allocation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->product_allocation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.DataLogTrigger data_log_trigger = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_trigger_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->data_log_trigger(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.CommentAllocation comment_allocation = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->comment_allocation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->comment_allocation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.TimeLog time_log = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_log_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->time_log(static_cast<int>(i)), deterministic, target);
  }

  // .efdi.Grid grid = 21;
  if (this->has_grid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *this->grid_, deterministic, target);
  }

  // repeated .efdi.ControlAssignment control_assignment = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->control_assignment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->control_assignment(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.GuidanceAllocation guidance_allocation = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guidance_allocation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->guidance_allocation(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Task)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.TreatmentZone treatment_zone = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->treatment_zone_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->treatment_zone(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Time time = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->time_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time(static_cast<int>(i)));
    }
  }

  // repeated .efdi.WorkerAllocation worker_allocation = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->worker_allocation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->worker_allocation(static_cast<int>(i)));
    }
  }

  // repeated .efdi.DeviceAllocation device_allocation = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->device_allocation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_allocation(static_cast<int>(i)));
    }
  }

  // repeated .efdi.Connection connection = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->connection_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->connection(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ProductAllocation product_allocation = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->product_allocation_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->product_allocation(static_cast<int>(i)));
    }
  }

  // repeated .efdi.DataLogTrigger data_log_trigger = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->data_log_trigger_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_log_trigger(static_cast<int>(i)));
    }
  }

  // repeated .efdi.CommentAllocation comment_allocation = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->comment_allocation_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->comment_allocation(static_cast<int>(i)));
    }
  }

  // repeated .efdi.TimeLog time_log = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->time_log_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_log(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ControlAssignment control_assignment = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->control_assignment_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->control_assignment(static_cast<int>(i)));
    }
  }

  // repeated .efdi.GuidanceAllocation guidance_allocation = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->guidance_allocation_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guidance_allocation(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string task_designator = 2;
  if (this->task_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_designator());
  }

  // .efdi.UID task_id = 1;
  if (this->has_task_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->task_id_);
  }

  // .efdi.UID customer_id_ref = 3;
  if (this->has_customer_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->customer_id_ref_);
  }

  // .efdi.UID farm_id_ref = 4;
  if (this->has_farm_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->farm_id_ref_);
  }

  // .efdi.UID partfield_id_ref = 5;
  if (this->has_partfield_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partfield_id_ref_);
  }

  // .efdi.UID responsible_worker_id_ref = 6;
  if (this->has_responsible_worker_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->responsible_worker_id_ref_);
  }

  // .efdi.OperTechPractice oper_tech_practice = 13;
  if (this->has_oper_tech_practice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->oper_tech_practice_);
  }

  // .efdi.Grid grid = 21;
  if (this->has_grid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->grid_);
  }

  // .efdi.Task.TaskStatus task_status = 7;
  if (this->task_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->task_status());
  }

  // uint32 default_treatment_zone_code = 8;
  if (this->default_treatment_zone_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->default_treatment_zone_code());
  }

  // uint32 position_lost_treatment_zone_code = 9;
  if (this->position_lost_treatment_zone_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position_lost_treatment_zone_code());
  }

  // uint32 out_of_field_treatment_zone_code = 10;
  if (this->out_of_field_treatment_zone_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->out_of_field_treatment_zone_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Task)
    MergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  treatment_zone_.MergeFrom(from.treatment_zone_);
  time_.MergeFrom(from.time_);
  worker_allocation_.MergeFrom(from.worker_allocation_);
  device_allocation_.MergeFrom(from.device_allocation_);
  connection_.MergeFrom(from.connection_);
  product_allocation_.MergeFrom(from.product_allocation_);
  data_log_trigger_.MergeFrom(from.data_log_trigger_);
  comment_allocation_.MergeFrom(from.comment_allocation_);
  time_log_.MergeFrom(from.time_log_);
  control_assignment_.MergeFrom(from.control_assignment_);
  guidance_allocation_.MergeFrom(from.guidance_allocation_);
  extension_.MergeFrom(from.extension_);
  if (from.task_designator().size() > 0) {

    task_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_designator_);
  }
  if (from.has_task_id()) {
    mutable_task_id()->::efdi::UID::MergeFrom(from.task_id());
  }
  if (from.has_customer_id_ref()) {
    mutable_customer_id_ref()->::efdi::UID::MergeFrom(from.customer_id_ref());
  }
  if (from.has_farm_id_ref()) {
    mutable_farm_id_ref()->::efdi::UID::MergeFrom(from.farm_id_ref());
  }
  if (from.has_partfield_id_ref()) {
    mutable_partfield_id_ref()->::efdi::UID::MergeFrom(from.partfield_id_ref());
  }
  if (from.has_responsible_worker_id_ref()) {
    mutable_responsible_worker_id_ref()->::efdi::UID::MergeFrom(from.responsible_worker_id_ref());
  }
  if (from.has_oper_tech_practice()) {
    mutable_oper_tech_practice()->::efdi::OperTechPractice::MergeFrom(from.oper_tech_practice());
  }
  if (from.has_grid()) {
    mutable_grid()->::efdi::Grid::MergeFrom(from.grid());
  }
  if (from.task_status() != 0) {
    set_task_status(from.task_status());
  }
  if (from.default_treatment_zone_code() != 0) {
    set_default_treatment_zone_code(from.default_treatment_zone_code());
  }
  if (from.position_lost_treatment_zone_code() != 0) {
    set_position_lost_treatment_zone_code(from.position_lost_treatment_zone_code());
  }
  if (from.out_of_field_treatment_zone_code() != 0) {
    set_out_of_field_treatment_zone_code(from.out_of_field_treatment_zone_code());
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Task::IsInitialized() const {
  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  using std::swap;
  treatment_zone_.InternalSwap(&other->treatment_zone_);
  time_.InternalSwap(&other->time_);
  worker_allocation_.InternalSwap(&other->worker_allocation_);
  device_allocation_.InternalSwap(&other->device_allocation_);
  connection_.InternalSwap(&other->connection_);
  product_allocation_.InternalSwap(&other->product_allocation_);
  data_log_trigger_.InternalSwap(&other->data_log_trigger_);
  comment_allocation_.InternalSwap(&other->comment_allocation_);
  time_log_.InternalSwap(&other->time_log_);
  control_assignment_.InternalSwap(&other->control_assignment_);
  guidance_allocation_.InternalSwap(&other->guidance_allocation_);
  extension_.InternalSwap(&other->extension_);
  task_designator_.Swap(&other->task_designator_);
  swap(task_id_, other->task_id_);
  swap(customer_id_ref_, other->customer_id_ref_);
  swap(farm_id_ref_, other->farm_id_ref_);
  swap(partfield_id_ref_, other->partfield_id_ref_);
  swap(responsible_worker_id_ref_, other->responsible_worker_id_ref_);
  swap(oper_tech_practice_, other->oper_tech_practice_);
  swap(grid_, other->grid_);
  swap(task_status_, other->task_status_);
  swap(default_treatment_zone_code_, other->default_treatment_zone_code_);
  swap(position_lost_treatment_zone_code_, other->position_lost_treatment_zone_code_);
  swap(out_of_field_treatment_zone_code_, other->out_of_field_treatment_zone_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskControllerCapabilities::InitAsDefaultInstance() {
}
void TaskControllerCapabilities::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskControllerCapabilities::kTaskControllerControlFunctionNameFieldNumber;
const int TaskControllerCapabilities::kTaskControllerDesignatorFieldNumber;
const int TaskControllerCapabilities::kVersionNumberFieldNumber;
const int TaskControllerCapabilities::kProvidedCapabilitiesFieldNumber;
const int TaskControllerCapabilities::kNumberOfBoomsSectionControlFieldNumber;
const int TaskControllerCapabilities::kNumberOfSectionsSectionControlFieldNumber;
const int TaskControllerCapabilities::kNumberOfControlChannelsFieldNumber;
const int TaskControllerCapabilities::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskControllerCapabilities::TaskControllerCapabilities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTaskControllerCapabilities();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.TaskControllerCapabilities)
}
TaskControllerCapabilities::TaskControllerCapabilities(const TaskControllerCapabilities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_controller_control_function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_controller_control_function_name().size() > 0) {
    task_controller_control_function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_control_function_name_);
  }
  task_controller_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_controller_designator().size() > 0) {
    task_controller_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_designator_);
  }
  ::memcpy(&version_number_, &from.version_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_of_control_channels_) -
    reinterpret_cast<char*>(&version_number_)) + sizeof(number_of_control_channels_));
  // @@protoc_insertion_point(copy_constructor:efdi.TaskControllerCapabilities)
}

void TaskControllerCapabilities::SharedCtor() {
  task_controller_control_function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_control_channels_) -
      reinterpret_cast<char*>(&version_number_)) + sizeof(number_of_control_channels_));
  _cached_size_ = 0;
}

TaskControllerCapabilities::~TaskControllerCapabilities() {
  // @@protoc_insertion_point(destructor:efdi.TaskControllerCapabilities)
  SharedDtor();
}

void TaskControllerCapabilities::SharedDtor() {
  task_controller_control_function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskControllerCapabilities::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskControllerCapabilities::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskControllerCapabilities& TaskControllerCapabilities::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTaskControllerCapabilities();
  return *internal_default_instance();
}

TaskControllerCapabilities* TaskControllerCapabilities::New(::google::protobuf::Arena* arena) const {
  TaskControllerCapabilities* n = new TaskControllerCapabilities;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskControllerCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.TaskControllerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  task_controller_control_function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_controller_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_control_channels_) -
      reinterpret_cast<char*>(&version_number_)) + sizeof(number_of_control_channels_));
  _internal_metadata_.Clear();
}

bool TaskControllerCapabilities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.TaskControllerCapabilities)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes task_controller_control_function_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_task_controller_control_function_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_controller_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_controller_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_controller_designator().data(), static_cast<int>(this->task_controller_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.TaskControllerCapabilities.task_controller_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.TaskControllerCapabilities.VersionNumber version_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version_number(static_cast< ::efdi::TaskControllerCapabilities_VersionNumber >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 provided_capabilities = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &provided_capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_booms_section_control = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_booms_section_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_sections_section_control = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_sections_section_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_control_channels = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_control_channels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.TaskControllerCapabilities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.TaskControllerCapabilities)
  return false;
#undef DO_
}

void TaskControllerCapabilities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.TaskControllerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes task_controller_control_function_name = 1;
  if (this->task_controller_control_function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->task_controller_control_function_name(), output);
  }

  // string task_controller_designator = 2;
  if (this->task_controller_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_designator().data(), static_cast<int>(this->task_controller_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TaskControllerCapabilities.task_controller_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_controller_designator(), output);
  }

  // .efdi.TaskControllerCapabilities.VersionNumber version_number = 3;
  if (this->version_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->version_number(), output);
  }

  // uint32 provided_capabilities = 4;
  if (this->provided_capabilities() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->provided_capabilities(), output);
  }

  // uint32 number_of_booms_section_control = 5;
  if (this->number_of_booms_section_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->number_of_booms_section_control(), output);
  }

  // uint32 number_of_sections_section_control = 6;
  if (this->number_of_sections_section_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->number_of_sections_section_control(), output);
  }

  // uint32 number_of_control_channels = 7;
  if (this->number_of_control_channels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number_of_control_channels(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.TaskControllerCapabilities)
}

::google::protobuf::uint8* TaskControllerCapabilities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.TaskControllerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes task_controller_control_function_name = 1;
  if (this->task_controller_control_function_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->task_controller_control_function_name(), target);
  }

  // string task_controller_designator = 2;
  if (this->task_controller_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_controller_designator().data(), static_cast<int>(this->task_controller_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TaskControllerCapabilities.task_controller_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_controller_designator(), target);
  }

  // .efdi.TaskControllerCapabilities.VersionNumber version_number = 3;
  if (this->version_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->version_number(), target);
  }

  // uint32 provided_capabilities = 4;
  if (this->provided_capabilities() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->provided_capabilities(), target);
  }

  // uint32 number_of_booms_section_control = 5;
  if (this->number_of_booms_section_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->number_of_booms_section_control(), target);
  }

  // uint32 number_of_sections_section_control = 6;
  if (this->number_of_sections_section_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->number_of_sections_section_control(), target);
  }

  // uint32 number_of_control_channels = 7;
  if (this->number_of_control_channels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number_of_control_channels(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.TaskControllerCapabilities)
  return target;
}

size_t TaskControllerCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.TaskControllerCapabilities)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // bytes task_controller_control_function_name = 1;
  if (this->task_controller_control_function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->task_controller_control_function_name());
  }

  // string task_controller_designator = 2;
  if (this->task_controller_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_controller_designator());
  }

  // .efdi.TaskControllerCapabilities.VersionNumber version_number = 3;
  if (this->version_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version_number());
  }

  // uint32 provided_capabilities = 4;
  if (this->provided_capabilities() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->provided_capabilities());
  }

  // uint32 number_of_booms_section_control = 5;
  if (this->number_of_booms_section_control() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_booms_section_control());
  }

  // uint32 number_of_sections_section_control = 6;
  if (this->number_of_sections_section_control() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_sections_section_control());
  }

  // uint32 number_of_control_channels = 7;
  if (this->number_of_control_channels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_control_channels());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskControllerCapabilities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.TaskControllerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskControllerCapabilities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskControllerCapabilities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.TaskControllerCapabilities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.TaskControllerCapabilities)
    MergeFrom(*source);
  }
}

void TaskControllerCapabilities::MergeFrom(const TaskControllerCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.TaskControllerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.task_controller_control_function_name().size() > 0) {

    task_controller_control_function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_control_function_name_);
  }
  if (from.task_controller_designator().size() > 0) {

    task_controller_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_controller_designator_);
  }
  if (from.version_number() != 0) {
    set_version_number(from.version_number());
  }
  if (from.provided_capabilities() != 0) {
    set_provided_capabilities(from.provided_capabilities());
  }
  if (from.number_of_booms_section_control() != 0) {
    set_number_of_booms_section_control(from.number_of_booms_section_control());
  }
  if (from.number_of_sections_section_control() != 0) {
    set_number_of_sections_section_control(from.number_of_sections_section_control());
  }
  if (from.number_of_control_channels() != 0) {
    set_number_of_control_channels(from.number_of_control_channels());
  }
}

void TaskControllerCapabilities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.TaskControllerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskControllerCapabilities::CopyFrom(const TaskControllerCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.TaskControllerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskControllerCapabilities::IsInitialized() const {
  return true;
}

void TaskControllerCapabilities::Swap(TaskControllerCapabilities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskControllerCapabilities::InternalSwap(TaskControllerCapabilities* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  task_controller_control_function_name_.Swap(&other->task_controller_control_function_name_);
  task_controller_designator_.Swap(&other->task_controller_designator_);
  swap(version_number_, other->version_number_);
  swap(provided_capabilities_, other->provided_capabilities_);
  swap(number_of_booms_section_control_, other->number_of_booms_section_control_);
  swap(number_of_sections_section_control_, other->number_of_sections_section_control_);
  swap(number_of_control_channels_, other->number_of_control_channels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskControllerCapabilities::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Time::InitAsDefaultInstance() {
  ::efdi::_Time_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_Time_default_instance_._instance.get_mutable()->stop_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_Time_default_instance_._instance.get_mutable()->position_start_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
  ::efdi::_Time_default_instance_._instance.get_mutable()->position_stop_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
}
void Time::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
}
void Time::clear_stop() {
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
}
void Time::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Time::kStartFieldNumber;
const int Time::kStopFieldNumber;
const int Time::kDurationFieldNumber;
const int Time::kTypeFieldNumber;
const int Time::kPositionStartFieldNumber;
const int Time::kPositionStopFieldNumber;
const int Time::kDataLogValueFieldNumber;
const int Time::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Time::Time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Time)
}
Time::Time(const Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_log_value_(from.data_log_value_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::google::protobuf::Timestamp(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_stop()) {
    stop_ = new ::google::protobuf::Timestamp(*from.stop_);
  } else {
    stop_ = NULL;
  }
  if (from.has_position_start()) {
    position_start_ = new ::efdi::Position(*from.position_start_);
  } else {
    position_start_ = NULL;
  }
  if (from.has_position_stop()) {
    position_stop_ = new ::efdi::Position(*from.position_stop_);
  } else {
    position_stop_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:efdi.Time)
}

void Time::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
  _cached_size_ = 0;
}

Time::~Time() {
  // @@protoc_insertion_point(destructor:efdi.Time)
  SharedDtor();
}

void Time::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete stop_;
  if (this != internal_default_instance()) delete position_start_;
  if (this != internal_default_instance()) delete position_stop_;
}

void Time::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Time::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Time& Time::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTime();
  return *internal_default_instance();
}

Time* Time::New(::google::protobuf::Arena* arena) const {
  Time* n = new Time;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Time::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_log_value_.Clear();
  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_start_ != NULL) {
    delete position_start_;
  }
  position_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_stop_ != NULL) {
    delete position_stop_;
  }
  position_stop_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Time)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Time.TimeType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::efdi::Time_TimeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_start = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_stop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DataLogValue data_log_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data_log_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Time)
  return false;
#undef DO_
}

void Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_, output);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stop_, output);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->duration(), output);
  }

  // .efdi.Time.TimeType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->position_start_, output);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->position_stop_, output);
  }

  // repeated .efdi.DataLogValue data_log_value = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->data_log_value(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Time)
}

::google::protobuf::uint8* Time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_, deterministic, target);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->stop_, deterministic, target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->duration(), target);
  }

  // .efdi.Time.TimeType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->position_start_, deterministic, target);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->position_stop_, deterministic, target);
  }

  // repeated .efdi.DataLogValue data_log_value = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->data_log_value(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Time)
  return target;
}

size_t Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Time)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DataLogValue data_log_value = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->data_log_value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_log_value(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stop_);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_start_);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_stop_);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  // .efdi.Time.TimeType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const Time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Time)
    MergeFrom(*source);
  }
}

void Time::MergeFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_log_value_.MergeFrom(from.data_log_value_);
  extension_.MergeFrom(from.extension_);
  if (from.has_start()) {
    mutable_start()->::google::protobuf::Timestamp::MergeFrom(from.start());
  }
  if (from.has_stop()) {
    mutable_stop()->::google::protobuf::Timestamp::MergeFrom(from.stop());
  }
  if (from.has_position_start()) {
    mutable_position_start()->::efdi::Position::MergeFrom(from.position_start());
  }
  if (from.has_position_stop()) {
    mutable_position_stop()->::efdi::Position::MergeFrom(from.position_stop());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Time::CopyFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time::IsInitialized() const {
  return true;
}

void Time::Swap(Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Time::InternalSwap(Time* other) {
  using std::swap;
  data_log_value_.InternalSwap(&other->data_log_value_);
  extension_.InternalSwap(&other->extension_);
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  swap(position_start_, other->position_start_);
  swap(position_stop_, other->position_stop_);
  swap(duration_, other->duration_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Time::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeIntOnly::InitAsDefaultInstance() {
  ::efdi::_TimeIntOnly_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_TimeIntOnly_default_instance_._instance.get_mutable()->stop_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_TimeIntOnly_default_instance_._instance.get_mutable()->position_start_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
  ::efdi::_TimeIntOnly_default_instance_._instance.get_mutable()->position_stop_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
  ::efdi::_TimeIntOnly_default_instance_._instance.get_mutable()->extension_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void TimeIntOnly::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
}
void TimeIntOnly::clear_stop() {
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
}
void TimeIntOnly::clear_extension() {
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) {
    delete extension_;
  }
  extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeIntOnly::kStartFieldNumber;
const int TimeIntOnly::kStopFieldNumber;
const int TimeIntOnly::kDurationFieldNumber;
const int TimeIntOnly::kTypeFieldNumber;
const int TimeIntOnly::kPositionStartFieldNumber;
const int TimeIntOnly::kPositionStopFieldNumber;
const int TimeIntOnly::kDataLogValueFieldNumber;
const int TimeIntOnly::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeIntOnly::TimeIntOnly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeIntOnly();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.TimeIntOnly)
}
TimeIntOnly::TimeIntOnly(const TimeIntOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_log_value_(from.data_log_value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::google::protobuf::Timestamp(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_stop()) {
    stop_ = new ::google::protobuf::Timestamp(*from.stop_);
  } else {
    stop_ = NULL;
  }
  if (from.has_position_start()) {
    position_start_ = new ::efdi::Position(*from.position_start_);
  } else {
    position_start_ = NULL;
  }
  if (from.has_position_stop()) {
    position_stop_ = new ::efdi::Position(*from.position_stop_);
  } else {
    position_stop_ = NULL;
  }
  if (from.has_extension()) {
    extension_ = new ::google::protobuf::Any(*from.extension_);
  } else {
    extension_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:efdi.TimeIntOnly)
}

void TimeIntOnly::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
  _cached_size_ = 0;
}

TimeIntOnly::~TimeIntOnly() {
  // @@protoc_insertion_point(destructor:efdi.TimeIntOnly)
  SharedDtor();
}

void TimeIntOnly::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete stop_;
  if (this != internal_default_instance()) delete position_start_;
  if (this != internal_default_instance()) delete position_stop_;
  if (this != internal_default_instance()) delete extension_;
}

void TimeIntOnly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeIntOnly::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeIntOnly& TimeIntOnly::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeIntOnly();
  return *internal_default_instance();
}

TimeIntOnly* TimeIntOnly::New(::google::protobuf::Arena* arena) const {
  TimeIntOnly* n = new TimeIntOnly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeIntOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.TimeIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_log_value_.Clear();
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_start_ != NULL) {
    delete position_start_;
  }
  position_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_stop_ != NULL) {
    delete position_stop_;
  }
  position_stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) {
    delete extension_;
  }
  extension_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool TimeIntOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.TimeIntOnly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.TimeIntOnly.TimeType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::efdi::TimeIntOnly_TimeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_start = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_stop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DataLogValueIntOnly data_log_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data_log_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.TimeIntOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.TimeIntOnly)
  return false;
#undef DO_
}

void TimeIntOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.TimeIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_, output);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stop_, output);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->duration(), output);
  }

  // .efdi.TimeIntOnly.TimeType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->position_start_, output);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->position_stop_, output);
  }

  // repeated .efdi.DataLogValueIntOnly data_log_value = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->data_log_value(static_cast<int>(i)), output);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, *this->extension_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.TimeIntOnly)
}

::google::protobuf::uint8* TimeIntOnly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.TimeIntOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_, deterministic, target);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->stop_, deterministic, target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->duration(), target);
  }

  // .efdi.TimeIntOnly.TimeType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->position_start_, deterministic, target);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->position_stop_, deterministic, target);
  }

  // repeated .efdi.DataLogValueIntOnly data_log_value = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->data_log_value(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, *this->extension_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.TimeIntOnly)
  return target;
}

size_t TimeIntOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.TimeIntOnly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DataLogValueIntOnly data_log_value = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->data_log_value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_log_value(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stop_);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_start_);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_stop_);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->extension_);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  // .efdi.TimeIntOnly.TimeType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeIntOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.TimeIntOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeIntOnly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeIntOnly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.TimeIntOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.TimeIntOnly)
    MergeFrom(*source);
  }
}

void TimeIntOnly::MergeFrom(const TimeIntOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.TimeIntOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_log_value_.MergeFrom(from.data_log_value_);
  if (from.has_start()) {
    mutable_start()->::google::protobuf::Timestamp::MergeFrom(from.start());
  }
  if (from.has_stop()) {
    mutable_stop()->::google::protobuf::Timestamp::MergeFrom(from.stop());
  }
  if (from.has_position_start()) {
    mutable_position_start()->::efdi::Position::MergeFrom(from.position_start());
  }
  if (from.has_position_stop()) {
    mutable_position_stop()->::efdi::Position::MergeFrom(from.position_stop());
  }
  if (from.has_extension()) {
    mutable_extension()->::google::protobuf::Any::MergeFrom(from.extension());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void TimeIntOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.TimeIntOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeIntOnly::CopyFrom(const TimeIntOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.TimeIntOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeIntOnly::IsInitialized() const {
  return true;
}

void TimeIntOnly::Swap(TimeIntOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeIntOnly::InternalSwap(TimeIntOnly* other) {
  using std::swap;
  data_log_value_.InternalSwap(&other->data_log_value_);
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  swap(position_start_, other->position_start_);
  swap(position_stop_, other->position_stop_);
  swap(extension_, other->extension_);
  swap(duration_, other->duration_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeIntOnly::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeDetHier::InitAsDefaultInstance() {
  ::efdi::_TimeDetHier_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_TimeDetHier_default_instance_._instance.get_mutable()->stop_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::efdi::_TimeDetHier_default_instance_._instance.get_mutable()->position_start_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
  ::efdi::_TimeDetHier_default_instance_._instance.get_mutable()->position_stop_ = const_cast< ::efdi::Position*>(
      ::efdi::Position::internal_default_instance());
  ::efdi::_TimeDetHier_default_instance_._instance.get_mutable()->extension_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void TimeDetHier::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
}
void TimeDetHier::clear_stop() {
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
}
void TimeDetHier::clear_extension() {
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) {
    delete extension_;
  }
  extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeDetHier::kStartFieldNumber;
const int TimeDetHier::kStopFieldNumber;
const int TimeDetHier::kDurationFieldNumber;
const int TimeDetHier::kTypeFieldNumber;
const int TimeDetHier::kPositionStartFieldNumber;
const int TimeDetHier::kPositionStopFieldNumber;
const int TimeDetHier::kDeviceElementDataFieldNumber;
const int TimeDetHier::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeDetHier::TimeDetHier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeDetHier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.TimeDetHier)
}
TimeDetHier::TimeDetHier(const TimeDetHier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      device_element_data_(from.device_element_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::google::protobuf::Timestamp(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_stop()) {
    stop_ = new ::google::protobuf::Timestamp(*from.stop_);
  } else {
    stop_ = NULL;
  }
  if (from.has_position_start()) {
    position_start_ = new ::efdi::Position(*from.position_start_);
  } else {
    position_start_ = NULL;
  }
  if (from.has_position_stop()) {
    position_stop_ = new ::efdi::Position(*from.position_stop_);
  } else {
    position_stop_ = NULL;
  }
  if (from.has_extension()) {
    extension_ = new ::google::protobuf::Any(*from.extension_);
  } else {
    extension_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:efdi.TimeDetHier)
}

void TimeDetHier::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
  _cached_size_ = 0;
}

TimeDetHier::~TimeDetHier() {
  // @@protoc_insertion_point(destructor:efdi.TimeDetHier)
  SharedDtor();
}

void TimeDetHier::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete stop_;
  if (this != internal_default_instance()) delete position_start_;
  if (this != internal_default_instance()) delete position_stop_;
  if (this != internal_default_instance()) delete extension_;
}

void TimeDetHier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeDetHier::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeDetHier& TimeDetHier::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeDetHier();
  return *internal_default_instance();
}

TimeDetHier* TimeDetHier::New(::google::protobuf::Arena* arena) const {
  TimeDetHier* n = new TimeDetHier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeDetHier::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.TimeDetHier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_element_data_.Clear();
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_ != NULL) {
    delete stop_;
  }
  stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_start_ != NULL) {
    delete position_start_;
  }
  position_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_stop_ != NULL) {
    delete position_stop_;
  }
  position_stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) {
    delete extension_;
  }
  extension_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool TimeDetHier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.TimeDetHier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.TimeDetHier.TimeType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::efdi::TimeDetHier_TimeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_start = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.Position position_stop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DeviceElementData device_element_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_device_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.TimeDetHier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.TimeDetHier)
  return false;
#undef DO_
}

void TimeDetHier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.TimeDetHier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_, output);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stop_, output);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->duration(), output);
  }

  // .efdi.TimeDetHier.TimeType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->position_start_, output);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->position_stop_, output);
  }

  // repeated .efdi.DeviceElementData device_element_data = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_element_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->device_element_data(static_cast<int>(i)), output);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, *this->extension_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.TimeDetHier)
}

::google::protobuf::uint8* TimeDetHier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.TimeDetHier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->start_, deterministic, target);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->stop_, deterministic, target);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->duration(), target);
  }

  // .efdi.TimeDetHier.TimeType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->position_start_, deterministic, target);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->position_stop_, deterministic, target);
  }

  // repeated .efdi.DeviceElementData device_element_data = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_element_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->device_element_data(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, *this->extension_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.TimeDetHier)
  return target;
}

size_t TimeDetHier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.TimeDetHier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DeviceElementData device_element_data = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->device_element_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_element_data(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_);
  }

  // .google.protobuf.Timestamp stop = 2;
  if (this->has_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stop_);
  }

  // .efdi.Position position_start = 5;
  if (this->has_position_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_start_);
  }

  // .efdi.Position position_stop = 6;
  if (this->has_position_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_stop_);
  }

  // .google.protobuf.Any extension = 2048;
  if (this->has_extension()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->extension_);
  }

  // uint64 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  // .efdi.TimeDetHier.TimeType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeDetHier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.TimeDetHier)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeDetHier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeDetHier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.TimeDetHier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.TimeDetHier)
    MergeFrom(*source);
  }
}

void TimeDetHier::MergeFrom(const TimeDetHier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.TimeDetHier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  device_element_data_.MergeFrom(from.device_element_data_);
  if (from.has_start()) {
    mutable_start()->::google::protobuf::Timestamp::MergeFrom(from.start());
  }
  if (from.has_stop()) {
    mutable_stop()->::google::protobuf::Timestamp::MergeFrom(from.stop());
  }
  if (from.has_position_start()) {
    mutable_position_start()->::efdi::Position::MergeFrom(from.position_start());
  }
  if (from.has_position_stop()) {
    mutable_position_stop()->::efdi::Position::MergeFrom(from.position_stop());
  }
  if (from.has_extension()) {
    mutable_extension()->::google::protobuf::Any::MergeFrom(from.extension());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void TimeDetHier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.TimeDetHier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeDetHier::CopyFrom(const TimeDetHier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.TimeDetHier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeDetHier::IsInitialized() const {
  return true;
}

void TimeDetHier::Swap(TimeDetHier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeDetHier::InternalSwap(TimeDetHier* other) {
  using std::swap;
  device_element_data_.InternalSwap(&other->device_element_data_);
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  swap(position_start_, other->position_start_);
  swap(position_stop_, other->position_stop_);
  swap(extension_, other->extension_);
  swap(duration_, other->duration_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeDetHier::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceElementData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceElementData::kDeviceElementIdRefFieldNumber;
const int DeviceElementData::kDataLogValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceElementData::DeviceElementData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElementData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.DeviceElementData)
}
DeviceElementData::DeviceElementData(const DeviceElementData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_log_value_(from.data_log_value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_element_id_ref_ = from.device_element_id_ref_;
  // @@protoc_insertion_point(copy_constructor:efdi.DeviceElementData)
}

void DeviceElementData::SharedCtor() {
  device_element_id_ref_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

DeviceElementData::~DeviceElementData() {
  // @@protoc_insertion_point(destructor:efdi.DeviceElementData)
  SharedDtor();
}

void DeviceElementData::SharedDtor() {
}

void DeviceElementData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceElementData::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceElementData& DeviceElementData::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsDeviceElementData();
  return *internal_default_instance();
}

DeviceElementData* DeviceElementData::New(::google::protobuf::Arena* arena) const {
  DeviceElementData* n = new DeviceElementData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceElementData::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.DeviceElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_log_value_.Clear();
  device_element_id_ref_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeviceElementData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.DeviceElementData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 device_element_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &device_element_id_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.DataLogValueIntOnly data_log_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data_log_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.DeviceElementData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.DeviceElementData)
  return false;
#undef DO_
}

void DeviceElementData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.DeviceElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 device_element_id_ref = 1;
  if (this->device_element_id_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->device_element_id_ref(), output);
  }

  // repeated .efdi.DataLogValueIntOnly data_log_value = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data_log_value(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.DeviceElementData)
}

::google::protobuf::uint8* DeviceElementData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.DeviceElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 device_element_id_ref = 1;
  if (this->device_element_id_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->device_element_id_ref(), target);
  }

  // repeated .efdi.DataLogValueIntOnly data_log_value = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_log_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data_log_value(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.DeviceElementData)
  return target;
}

size_t DeviceElementData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.DeviceElementData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.DataLogValueIntOnly data_log_value = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_log_value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_log_value(static_cast<int>(i)));
    }
  }

  // sint64 device_element_id_ref = 1;
  if (this->device_element_id_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->device_element_id_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceElementData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.DeviceElementData)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceElementData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceElementData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.DeviceElementData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.DeviceElementData)
    MergeFrom(*source);
  }
}

void DeviceElementData::MergeFrom(const DeviceElementData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.DeviceElementData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_log_value_.MergeFrom(from.data_log_value_);
  if (from.device_element_id_ref() != 0) {
    set_device_element_id_ref(from.device_element_id_ref());
  }
}

void DeviceElementData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.DeviceElementData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceElementData::CopyFrom(const DeviceElementData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.DeviceElementData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceElementData::IsInitialized() const {
  return true;
}

void DeviceElementData::Swap(DeviceElementData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceElementData::InternalSwap(DeviceElementData* other) {
  using std::swap;
  data_log_value_.InternalSwap(&other->data_log_value_);
  swap(device_element_id_ref_, other->device_element_id_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceElementData::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeLog::InitAsDefaultInstance() {
}
void TimeLog::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeLog::kFilenameFieldNumber;
const int TimeLog::kFilelengthFieldNumber;
const int TimeLog::kTimeLogTypeFieldNumber;
const int TimeLog::kTimeFieldNumber;
const int TimeLog::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeLog::TimeLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.TimeLog)
}
TimeLog::TimeLog(const TimeLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      time_(from.time_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&filelength_, &from.filelength_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_log_type_) -
    reinterpret_cast<char*>(&filelength_)) + sizeof(time_log_type_));
  // @@protoc_insertion_point(copy_constructor:efdi.TimeLog)
}

void TimeLog::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filelength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_log_type_) -
      reinterpret_cast<char*>(&filelength_)) + sizeof(time_log_type_));
  _cached_size_ = 0;
}

TimeLog::~TimeLog() {
  // @@protoc_insertion_point(destructor:efdi.TimeLog)
  SharedDtor();
}

void TimeLog::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TimeLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeLog::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeLog& TimeLog::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTimeLog();
  return *internal_default_instance();
}

TimeLog* TimeLog::New(::google::protobuf::Arena* arena) const {
  TimeLog* n = new TimeLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeLog::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.TimeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_.Clear();
  extension_.Clear();
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filelength_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_log_type_) -
      reinterpret_cast<char*>(&filelength_)) + sizeof(time_log_type_));
  _internal_metadata_.Clear();
}

bool TimeLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.TimeLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.TimeLog.TimeLogType time_log_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_time_log_type(static_cast< ::efdi::TimeLog_TimeLogType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.TimeLog.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 filelength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Time time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.TimeLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.TimeLog)
  return false;
#undef DO_
}

void TimeLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.TimeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.TimeLog.TimeLogType time_log_type = 1;
  if (this->time_log_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->time_log_type(), output);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TimeLog.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // uint64 filelength = 3;
  if (this->filelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->filelength(), output);
  }

  // repeated .efdi.Time time = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->time(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.TimeLog)
}

::google::protobuf::uint8* TimeLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.TimeLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.TimeLog.TimeLogType time_log_type = 1;
  if (this->time_log_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->time_log_type(), target);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TimeLog.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // uint64 filelength = 3;
  if (this->filelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->filelength(), target);
  }

  // repeated .efdi.Time time = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->time(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.TimeLog)
  return target;
}

size_t TimeLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.TimeLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Time time = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->time_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // uint64 filelength = 3;
  if (this->filelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filelength());
  }

  // .efdi.TimeLog.TimeLogType time_log_type = 1;
  if (this->time_log_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->time_log_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.TimeLog)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.TimeLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.TimeLog)
    MergeFrom(*source);
  }
}

void TimeLog::MergeFrom(const TimeLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.TimeLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_.MergeFrom(from.time_);
  extension_.MergeFrom(from.extension_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filelength() != 0) {
    set_filelength(from.filelength());
  }
  if (from.time_log_type() != 0) {
    set_time_log_type(from.time_log_type());
  }
}

void TimeLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.TimeLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeLog::CopyFrom(const TimeLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.TimeLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeLog::IsInitialized() const {
  return true;
}

void TimeLog::Swap(TimeLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeLog::InternalSwap(TimeLog* other) {
  using std::swap;
  time_.InternalSwap(&other->time_);
  extension_.InternalSwap(&other->extension_);
  filename_.Swap(&other->filename_);
  swap(filelength_, other->filelength_);
  swap(time_log_type_, other->time_log_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeLog::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TreatmentZone::InitAsDefaultInstance() {
}
void TreatmentZone::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TreatmentZone::kTreatmentZoneCodeFieldNumber;
const int TreatmentZone::kTreatmentZoneDesignatorFieldNumber;
const int TreatmentZone::kTreatmentZoneColourFieldNumber;
const int TreatmentZone::kPolygonFieldNumber;
const int TreatmentZone::kProcessDataVariableFieldNumber;
const int TreatmentZone::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TreatmentZone::TreatmentZone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTreatmentZone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.TreatmentZone)
}
TreatmentZone::TreatmentZone(const TreatmentZone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygon_(from.polygon_),
      process_data_variable_(from.process_data_variable_),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  treatment_zone_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.treatment_zone_designator().size() > 0) {
    treatment_zone_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.treatment_zone_designator_);
  }
  ::memcpy(&treatment_zone_code_, &from.treatment_zone_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&treatment_zone_colour_) -
    reinterpret_cast<char*>(&treatment_zone_code_)) + sizeof(treatment_zone_colour_));
  // @@protoc_insertion_point(copy_constructor:efdi.TreatmentZone)
}

void TreatmentZone::SharedCtor() {
  treatment_zone_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&treatment_zone_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treatment_zone_colour_) -
      reinterpret_cast<char*>(&treatment_zone_code_)) + sizeof(treatment_zone_colour_));
  _cached_size_ = 0;
}

TreatmentZone::~TreatmentZone() {
  // @@protoc_insertion_point(destructor:efdi.TreatmentZone)
  SharedDtor();
}

void TreatmentZone::SharedDtor() {
  treatment_zone_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TreatmentZone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TreatmentZone::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TreatmentZone& TreatmentZone::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsTreatmentZone();
  return *internal_default_instance();
}

TreatmentZone* TreatmentZone::New(::google::protobuf::Arena* arena) const {
  TreatmentZone* n = new TreatmentZone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TreatmentZone::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.TreatmentZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  process_data_variable_.Clear();
  extension_.Clear();
  treatment_zone_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&treatment_zone_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&treatment_zone_colour_) -
      reinterpret_cast<char*>(&treatment_zone_code_)) + sizeof(treatment_zone_colour_));
  _internal_metadata_.Clear();
}

bool TreatmentZone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.TreatmentZone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 treatment_zone_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treatment_zone_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string treatment_zone_designator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_treatment_zone_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->treatment_zone_designator().data(), static_cast<int>(this->treatment_zone_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.TreatmentZone.treatment_zone_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 treatment_zone_colour = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treatment_zone_colour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.Polygon polygon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .efdi.ProcessDataVariable process_data_variable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_process_data_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.TreatmentZone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.TreatmentZone)
  return false;
#undef DO_
}

void TreatmentZone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.TreatmentZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 treatment_zone_code = 1;
  if (this->treatment_zone_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->treatment_zone_code(), output);
  }

  // string treatment_zone_designator = 2;
  if (this->treatment_zone_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->treatment_zone_designator().data(), static_cast<int>(this->treatment_zone_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TreatmentZone.treatment_zone_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->treatment_zone_designator(), output);
  }

  // uint32 treatment_zone_colour = 3;
  if (this->treatment_zone_colour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->treatment_zone_colour(), output);
  }

  // repeated .efdi.Polygon polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->polygon(static_cast<int>(i)), output);
  }

  // repeated .efdi.ProcessDataVariable process_data_variable = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->process_data_variable_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->process_data_variable(static_cast<int>(i)), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.TreatmentZone)
}

::google::protobuf::uint8* TreatmentZone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.TreatmentZone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 treatment_zone_code = 1;
  if (this->treatment_zone_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->treatment_zone_code(), target);
  }

  // string treatment_zone_designator = 2;
  if (this->treatment_zone_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->treatment_zone_designator().data(), static_cast<int>(this->treatment_zone_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.TreatmentZone.treatment_zone_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->treatment_zone_designator(), target);
  }

  // uint32 treatment_zone_colour = 3;
  if (this->treatment_zone_colour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->treatment_zone_colour(), target);
  }

  // repeated .efdi.Polygon polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->polygon(static_cast<int>(i)), deterministic, target);
  }

  // repeated .efdi.ProcessDataVariable process_data_variable = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->process_data_variable_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->process_data_variable(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.TreatmentZone)
  return target;
}

size_t TreatmentZone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.TreatmentZone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .efdi.Polygon polygon = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // repeated .efdi.ProcessDataVariable process_data_variable = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->process_data_variable_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->process_data_variable(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string treatment_zone_designator = 2;
  if (this->treatment_zone_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->treatment_zone_designator());
  }

  // uint32 treatment_zone_code = 1;
  if (this->treatment_zone_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treatment_zone_code());
  }

  // uint32 treatment_zone_colour = 3;
  if (this->treatment_zone_colour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treatment_zone_colour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TreatmentZone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.TreatmentZone)
  GOOGLE_DCHECK_NE(&from, this);
  const TreatmentZone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TreatmentZone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.TreatmentZone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.TreatmentZone)
    MergeFrom(*source);
  }
}

void TreatmentZone::MergeFrom(const TreatmentZone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.TreatmentZone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  process_data_variable_.MergeFrom(from.process_data_variable_);
  extension_.MergeFrom(from.extension_);
  if (from.treatment_zone_designator().size() > 0) {

    treatment_zone_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.treatment_zone_designator_);
  }
  if (from.treatment_zone_code() != 0) {
    set_treatment_zone_code(from.treatment_zone_code());
  }
  if (from.treatment_zone_colour() != 0) {
    set_treatment_zone_colour(from.treatment_zone_colour());
  }
}

void TreatmentZone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.TreatmentZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TreatmentZone::CopyFrom(const TreatmentZone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.TreatmentZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreatmentZone::IsInitialized() const {
  return true;
}

void TreatmentZone::Swap(TreatmentZone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TreatmentZone::InternalSwap(TreatmentZone* other) {
  using std::swap;
  polygon_.InternalSwap(&other->polygon_);
  process_data_variable_.InternalSwap(&other->process_data_variable_);
  extension_.InternalSwap(&other->extension_);
  treatment_zone_designator_.Swap(&other->treatment_zone_designator_);
  swap(treatment_zone_code_, other->treatment_zone_code_);
  swap(treatment_zone_colour_, other->treatment_zone_colour_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TreatmentZone::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValuePresentation::InitAsDefaultInstance() {
  ::efdi::_ValuePresentation_default_instance_._instance.get_mutable()->value_presentation_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_ValuePresentation_default_instance_._instance.get_mutable()->colour_legend_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ValuePresentation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValuePresentation::kValuePresentationIdFieldNumber;
const int ValuePresentation::kOffsetFieldNumber;
const int ValuePresentation::kScaleFieldNumber;
const int ValuePresentation::kNumberOfDecimalsFieldNumber;
const int ValuePresentation::kUnitDesignatorFieldNumber;
const int ValuePresentation::kColourLegendIdRefFieldNumber;
const int ValuePresentation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValuePresentation::ValuePresentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsValuePresentation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ValuePresentation)
}
ValuePresentation::ValuePresentation(const ValuePresentation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit_designator().size() > 0) {
    unit_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_designator_);
  }
  if (from.has_value_presentation_id()) {
    value_presentation_id_ = new ::efdi::UID(*from.value_presentation_id_);
  } else {
    value_presentation_id_ = NULL;
  }
  if (from.has_colour_legend_id_ref()) {
    colour_legend_id_ref_ = new ::efdi::UID(*from.colour_legend_id_ref_);
  } else {
    colour_legend_id_ref_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_of_decimals_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(number_of_decimals_));
  // @@protoc_insertion_point(copy_constructor:efdi.ValuePresentation)
}

void ValuePresentation::SharedCtor() {
  unit_designator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_presentation_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_decimals_) -
      reinterpret_cast<char*>(&value_presentation_id_)) + sizeof(number_of_decimals_));
  _cached_size_ = 0;
}

ValuePresentation::~ValuePresentation() {
  // @@protoc_insertion_point(destructor:efdi.ValuePresentation)
  SharedDtor();
}

void ValuePresentation::SharedDtor() {
  unit_designator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_presentation_id_;
  if (this != internal_default_instance()) delete colour_legend_id_ref_;
}

void ValuePresentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValuePresentation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValuePresentation& ValuePresentation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsValuePresentation();
  return *internal_default_instance();
}

ValuePresentation* ValuePresentation::New(::google::protobuf::Arena* arena) const {
  ValuePresentation* n = new ValuePresentation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValuePresentation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  unit_designator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_presentation_id_ != NULL) {
    delete value_presentation_id_;
  }
  value_presentation_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && colour_legend_id_ref_ != NULL) {
    delete colour_legend_id_ref_;
  }
  colour_legend_id_ref_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_of_decimals_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(number_of_decimals_));
  _internal_metadata_.Clear();
}

bool ValuePresentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ValuePresentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID value_presentation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_presentation_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_decimals = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_decimals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit_designator = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit_designator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.ValuePresentation.unit_designator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.UID colour_legend_id_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colour_legend_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ValuePresentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ValuePresentation)
  return false;
#undef DO_
}

void ValuePresentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID value_presentation_id = 1;
  if (this->has_value_presentation_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->value_presentation_id_, output);
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->offset(), output);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->number_of_decimals(), output);
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ValuePresentation.unit_designator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->unit_designator(), output);
  }

  // .efdi.UID colour_legend_id_ref = 6;
  if (this->has_colour_legend_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->colour_legend_id_ref_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ValuePresentation)
}

::google::protobuf::uint8* ValuePresentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ValuePresentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID value_presentation_id = 1;
  if (this->has_value_presentation_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->value_presentation_id_, deterministic, target);
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->offset(), target);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->number_of_decimals(), target);
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit_designator().data(), static_cast<int>(this->unit_designator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.ValuePresentation.unit_designator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->unit_designator(), target);
  }

  // .efdi.UID colour_legend_id_ref = 6;
  if (this->has_colour_legend_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->colour_legend_id_ref_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ValuePresentation)
  return target;
}

size_t ValuePresentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ValuePresentation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string unit_designator = 5;
  if (this->unit_designator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit_designator());
  }

  // .efdi.UID value_presentation_id = 1;
  if (this->has_value_presentation_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_presentation_id_);
  }

  // .efdi.UID colour_legend_id_ref = 6;
  if (this->has_colour_legend_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->colour_legend_id_ref_);
  }

  // sint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->offset());
  }

  // double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  // uint32 number_of_decimals = 4;
  if (this->number_of_decimals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_decimals());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValuePresentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ValuePresentation)
  GOOGLE_DCHECK_NE(&from, this);
  const ValuePresentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValuePresentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ValuePresentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ValuePresentation)
    MergeFrom(*source);
  }
}

void ValuePresentation::MergeFrom(const ValuePresentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ValuePresentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.unit_designator().size() > 0) {

    unit_designator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_designator_);
  }
  if (from.has_value_presentation_id()) {
    mutable_value_presentation_id()->::efdi::UID::MergeFrom(from.value_presentation_id());
  }
  if (from.has_colour_legend_id_ref()) {
    mutable_colour_legend_id_ref()->::efdi::UID::MergeFrom(from.colour_legend_id_ref());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.number_of_decimals() != 0) {
    set_number_of_decimals(from.number_of_decimals());
  }
}

void ValuePresentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ValuePresentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValuePresentation::CopyFrom(const ValuePresentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ValuePresentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValuePresentation::IsInitialized() const {
  return true;
}

void ValuePresentation::Swap(ValuePresentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValuePresentation::InternalSwap(ValuePresentation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  unit_designator_.Swap(&other->unit_designator_);
  swap(value_presentation_id_, other->value_presentation_id_);
  swap(colour_legend_id_ref_, other->colour_legend_id_ref_);
  swap(offset_, other->offset_);
  swap(scale_, other->scale_);
  swap(number_of_decimals_, other->number_of_decimals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValuePresentation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Worker::InitAsDefaultInstance() {
  ::efdi::_Worker_default_instance_._instance.get_mutable()->worker_id_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void Worker::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Worker::kWorkerIdFieldNumber;
const int Worker::kWorkerLastNameFieldNumber;
const int Worker::kWorkerFirstNameFieldNumber;
const int Worker::kWorkerStreetFieldNumber;
const int Worker::kWorkerPoBoxFieldNumber;
const int Worker::kWorkerPostalCodeFieldNumber;
const int Worker::kWorkerCityFieldNumber;
const int Worker::kWorkerStateFieldNumber;
const int Worker::kWorkerCountryFieldNumber;
const int Worker::kWorkerPhoneFieldNumber;
const int Worker::kWorkerMobileFieldNumber;
const int Worker::kWorkerLicenseNumberFieldNumber;
const int Worker::kWorkerEmailFieldNumber;
const int Worker::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Worker::Worker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.Worker)
}
Worker::Worker(const Worker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_last_name().size() > 0) {
    worker_last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_last_name_);
  }
  worker_first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_first_name().size() > 0) {
    worker_first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_first_name_);
  }
  worker_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_street().size() > 0) {
    worker_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_street_);
  }
  worker_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_po_box().size() > 0) {
    worker_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_po_box_);
  }
  worker_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_postal_code().size() > 0) {
    worker_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_postal_code_);
  }
  worker_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_city().size() > 0) {
    worker_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_city_);
  }
  worker_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_state().size() > 0) {
    worker_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_state_);
  }
  worker_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_country().size() > 0) {
    worker_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_country_);
  }
  worker_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_phone().size() > 0) {
    worker_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_phone_);
  }
  worker_mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_mobile().size() > 0) {
    worker_mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_mobile_);
  }
  worker_license_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_license_number().size() > 0) {
    worker_license_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_license_number_);
  }
  worker_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_email().size() > 0) {
    worker_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_email_);
  }
  if (from.has_worker_id()) {
    worker_id_ = new ::efdi::UID(*from.worker_id_);
  } else {
    worker_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.Worker)
}

void Worker::SharedCtor() {
  worker_last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_po_box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_license_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_id_ = NULL;
  _cached_size_ = 0;
}

Worker::~Worker() {
  // @@protoc_insertion_point(destructor:efdi.Worker)
  SharedDtor();
}

void Worker::SharedDtor() {
  worker_last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_po_box_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_license_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worker_id_;
}

void Worker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Worker::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Worker& Worker::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorker();
  return *internal_default_instance();
}

Worker* Worker::New(::google::protobuf::Arena* arena) const {
  Worker* n = new Worker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Worker::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  worker_last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_po_box_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_license_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && worker_id_ != NULL) {
    delete worker_id_;
  }
  worker_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Worker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.Worker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID worker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_last_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_last_name().data(), static_cast<int>(this->worker_last_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_last_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_first_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_first_name().data(), static_cast<int>(this->worker_first_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_first_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_street = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_street()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_street().data(), static_cast<int>(this->worker_street().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_street"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_po_box = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_po_box()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_po_box().data(), static_cast<int>(this->worker_po_box().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_po_box"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_postal_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_postal_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_postal_code().data(), static_cast<int>(this->worker_postal_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_postal_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_city = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_city().data(), static_cast<int>(this->worker_city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_state = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_state().data(), static_cast<int>(this->worker_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_country = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_country().data(), static_cast<int>(this->worker_country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_phone().data(), static_cast<int>(this->worker_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_mobile = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_mobile().data(), static_cast<int>(this->worker_mobile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_license_number = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_license_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_license_number().data(), static_cast<int>(this->worker_license_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_license_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_email = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_email().data(), static_cast<int>(this->worker_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "efdi.Worker.worker_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.Worker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.Worker)
  return false;
#undef DO_
}

void Worker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID worker_id = 1;
  if (this->has_worker_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_id_, output);
  }

  // string worker_last_name = 2;
  if (this->worker_last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_last_name().data(), static_cast<int>(this->worker_last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->worker_last_name(), output);
  }

  // string worker_first_name = 3;
  if (this->worker_first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_first_name().data(), static_cast<int>(this->worker_first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->worker_first_name(), output);
  }

  // string worker_street = 4;
  if (this->worker_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_street().data(), static_cast<int>(this->worker_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->worker_street(), output);
  }

  // string worker_po_box = 5;
  if (this->worker_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_po_box().data(), static_cast<int>(this->worker_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_po_box");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->worker_po_box(), output);
  }

  // string worker_postal_code = 6;
  if (this->worker_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_postal_code().data(), static_cast<int>(this->worker_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_postal_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->worker_postal_code(), output);
  }

  // string worker_city = 7;
  if (this->worker_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_city().data(), static_cast<int>(this->worker_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->worker_city(), output);
  }

  // string worker_state = 8;
  if (this->worker_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_state().data(), static_cast<int>(this->worker_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->worker_state(), output);
  }

  // string worker_country = 9;
  if (this->worker_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_country().data(), static_cast<int>(this->worker_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->worker_country(), output);
  }

  // string worker_phone = 10;
  if (this->worker_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_phone().data(), static_cast<int>(this->worker_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->worker_phone(), output);
  }

  // string worker_mobile = 11;
  if (this->worker_mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_mobile().data(), static_cast<int>(this->worker_mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->worker_mobile(), output);
  }

  // string worker_license_number = 12;
  if (this->worker_license_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_license_number().data(), static_cast<int>(this->worker_license_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_license_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->worker_license_number(), output);
  }

  // string worker_email = 13;
  if (this->worker_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_email().data(), static_cast<int>(this->worker_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->worker_email(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.Worker)
}

::google::protobuf::uint8* Worker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID worker_id = 1;
  if (this->has_worker_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_id_, deterministic, target);
  }

  // string worker_last_name = 2;
  if (this->worker_last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_last_name().data(), static_cast<int>(this->worker_last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->worker_last_name(), target);
  }

  // string worker_first_name = 3;
  if (this->worker_first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_first_name().data(), static_cast<int>(this->worker_first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->worker_first_name(), target);
  }

  // string worker_street = 4;
  if (this->worker_street().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_street().data(), static_cast<int>(this->worker_street().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->worker_street(), target);
  }

  // string worker_po_box = 5;
  if (this->worker_po_box().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_po_box().data(), static_cast<int>(this->worker_po_box().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_po_box");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->worker_po_box(), target);
  }

  // string worker_postal_code = 6;
  if (this->worker_postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_postal_code().data(), static_cast<int>(this->worker_postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_postal_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->worker_postal_code(), target);
  }

  // string worker_city = 7;
  if (this->worker_city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_city().data(), static_cast<int>(this->worker_city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->worker_city(), target);
  }

  // string worker_state = 8;
  if (this->worker_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_state().data(), static_cast<int>(this->worker_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->worker_state(), target);
  }

  // string worker_country = 9;
  if (this->worker_country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_country().data(), static_cast<int>(this->worker_country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->worker_country(), target);
  }

  // string worker_phone = 10;
  if (this->worker_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_phone().data(), static_cast<int>(this->worker_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->worker_phone(), target);
  }

  // string worker_mobile = 11;
  if (this->worker_mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_mobile().data(), static_cast<int>(this->worker_mobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->worker_mobile(), target);
  }

  // string worker_license_number = 12;
  if (this->worker_license_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_license_number().data(), static_cast<int>(this->worker_license_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_license_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->worker_license_number(), target);
  }

  // string worker_email = 13;
  if (this->worker_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_email().data(), static_cast<int>(this->worker_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "efdi.Worker.worker_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->worker_email(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.Worker)
  return target;
}

size_t Worker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.Worker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string worker_last_name = 2;
  if (this->worker_last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_last_name());
  }

  // string worker_first_name = 3;
  if (this->worker_first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_first_name());
  }

  // string worker_street = 4;
  if (this->worker_street().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_street());
  }

  // string worker_po_box = 5;
  if (this->worker_po_box().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_po_box());
  }

  // string worker_postal_code = 6;
  if (this->worker_postal_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_postal_code());
  }

  // string worker_city = 7;
  if (this->worker_city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_city());
  }

  // string worker_state = 8;
  if (this->worker_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_state());
  }

  // string worker_country = 9;
  if (this->worker_country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_country());
  }

  // string worker_phone = 10;
  if (this->worker_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_phone());
  }

  // string worker_mobile = 11;
  if (this->worker_mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_mobile());
  }

  // string worker_license_number = 12;
  if (this->worker_license_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_license_number());
  }

  // string worker_email = 13;
  if (this->worker_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_email());
  }

  // .efdi.UID worker_id = 1;
  if (this->has_worker_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Worker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  const Worker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Worker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.Worker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.Worker)
    MergeFrom(*source);
  }
}

void Worker::MergeFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.worker_last_name().size() > 0) {

    worker_last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_last_name_);
  }
  if (from.worker_first_name().size() > 0) {

    worker_first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_first_name_);
  }
  if (from.worker_street().size() > 0) {

    worker_street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_street_);
  }
  if (from.worker_po_box().size() > 0) {

    worker_po_box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_po_box_);
  }
  if (from.worker_postal_code().size() > 0) {

    worker_postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_postal_code_);
  }
  if (from.worker_city().size() > 0) {

    worker_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_city_);
  }
  if (from.worker_state().size() > 0) {

    worker_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_state_);
  }
  if (from.worker_country().size() > 0) {

    worker_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_country_);
  }
  if (from.worker_phone().size() > 0) {

    worker_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_phone_);
  }
  if (from.worker_mobile().size() > 0) {

    worker_mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_mobile_);
  }
  if (from.worker_license_number().size() > 0) {

    worker_license_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_license_number_);
  }
  if (from.worker_email().size() > 0) {

    worker_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_email_);
  }
  if (from.has_worker_id()) {
    mutable_worker_id()->::efdi::UID::MergeFrom(from.worker_id());
  }
}

void Worker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Worker::CopyFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Worker::IsInitialized() const {
  return true;
}

void Worker::Swap(Worker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Worker::InternalSwap(Worker* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  worker_last_name_.Swap(&other->worker_last_name_);
  worker_first_name_.Swap(&other->worker_first_name_);
  worker_street_.Swap(&other->worker_street_);
  worker_po_box_.Swap(&other->worker_po_box_);
  worker_postal_code_.Swap(&other->worker_postal_code_);
  worker_city_.Swap(&other->worker_city_);
  worker_state_.Swap(&other->worker_state_);
  worker_country_.Swap(&other->worker_country_);
  worker_phone_.Swap(&other->worker_phone_);
  worker_mobile_.Swap(&other->worker_mobile_);
  worker_license_number_.Swap(&other->worker_license_number_);
  worker_email_.Swap(&other->worker_email_);
  swap(worker_id_, other->worker_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Worker::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkerAllocation::InitAsDefaultInstance() {
  ::efdi::_WorkerAllocation_default_instance_._instance.get_mutable()->worker_id_ref_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
  ::efdi::_WorkerAllocation_default_instance_._instance.get_mutable()->allocation_stamp_ = const_cast< ::efdi::AllocationStamp*>(
      ::efdi::AllocationStamp::internal_default_instance());
}
void WorkerAllocation::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerAllocation::kWorkerIdRefFieldNumber;
const int WorkerAllocation::kAllocationStampFieldNumber;
const int WorkerAllocation::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerAllocation::WorkerAllocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorkerAllocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.WorkerAllocation)
}
WorkerAllocation::WorkerAllocation(const WorkerAllocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worker_id_ref()) {
    worker_id_ref_ = new ::efdi::UID(*from.worker_id_ref_);
  } else {
    worker_id_ref_ = NULL;
  }
  if (from.has_allocation_stamp()) {
    allocation_stamp_ = new ::efdi::AllocationStamp(*from.allocation_stamp_);
  } else {
    allocation_stamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:efdi.WorkerAllocation)
}

void WorkerAllocation::SharedCtor() {
  ::memset(&worker_id_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allocation_stamp_) -
      reinterpret_cast<char*>(&worker_id_ref_)) + sizeof(allocation_stamp_));
  _cached_size_ = 0;
}

WorkerAllocation::~WorkerAllocation() {
  // @@protoc_insertion_point(destructor:efdi.WorkerAllocation)
  SharedDtor();
}

void WorkerAllocation::SharedDtor() {
  if (this != internal_default_instance()) delete worker_id_ref_;
  if (this != internal_default_instance()) delete allocation_stamp_;
}

void WorkerAllocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerAllocation::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkerAllocation& WorkerAllocation::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsWorkerAllocation();
  return *internal_default_instance();
}

WorkerAllocation* WorkerAllocation::New(::google::protobuf::Arena* arena) const {
  WorkerAllocation* n = new WorkerAllocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkerAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.WorkerAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && worker_id_ref_ != NULL) {
    delete worker_id_ref_;
  }
  worker_id_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_stamp_ != NULL) {
    delete allocation_stamp_;
  }
  allocation_stamp_ = NULL;
  _internal_metadata_.Clear();
}

bool WorkerAllocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.WorkerAllocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID worker_id_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker_id_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.AllocationStamp allocation_stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.WorkerAllocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.WorkerAllocation)
  return false;
#undef DO_
}

void WorkerAllocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.WorkerAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID worker_id_ref = 1;
  if (this->has_worker_id_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_id_ref_, output);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->allocation_stamp_, output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.WorkerAllocation)
}

::google::protobuf::uint8* WorkerAllocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.WorkerAllocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID worker_id_ref = 1;
  if (this->has_worker_id_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_id_ref_, deterministic, target);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->allocation_stamp_, deterministic, target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.WorkerAllocation)
  return target;
}

size_t WorkerAllocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.WorkerAllocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID worker_id_ref = 1;
  if (this->has_worker_id_ref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_id_ref_);
  }

  // .efdi.AllocationStamp allocation_stamp = 2;
  if (this->has_allocation_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_stamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerAllocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.WorkerAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerAllocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerAllocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.WorkerAllocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.WorkerAllocation)
    MergeFrom(*source);
  }
}

void WorkerAllocation::MergeFrom(const WorkerAllocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.WorkerAllocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_worker_id_ref()) {
    mutable_worker_id_ref()->::efdi::UID::MergeFrom(from.worker_id_ref());
  }
  if (from.has_allocation_stamp()) {
    mutable_allocation_stamp()->::efdi::AllocationStamp::MergeFrom(from.allocation_stamp());
  }
}

void WorkerAllocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.WorkerAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerAllocation::CopyFrom(const WorkerAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.WorkerAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerAllocation::IsInitialized() const {
  return true;
}

void WorkerAllocation::Swap(WorkerAllocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerAllocation::InternalSwap(WorkerAllocation* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(worker_id_ref_, other->worker_id_ref_);
  swap(allocation_stamp_, other->allocation_stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkerAllocation::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternalFileReference::InitAsDefaultInstance() {
  ::efdi::_ExternalFileReference_default_instance_._instance.get_mutable()->filename_ = const_cast< ::efdi::UID*>(
      ::efdi::UID::internal_default_instance());
}
void ExternalFileReference::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalFileReference::kFilenameFieldNumber;
const int ExternalFileReference::kFileTypeFieldNumber;
const int ExternalFileReference::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalFileReference::ExternalFileReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsExternalFileReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:efdi.ExternalFileReference)
}
ExternalFileReference::ExternalFileReference(const ExternalFileReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filename()) {
    filename_ = new ::efdi::UID(*from.filename_);
  } else {
    filename_ = NULL;
  }
  file_type_ = from.file_type_;
  // @@protoc_insertion_point(copy_constructor:efdi.ExternalFileReference)
}

void ExternalFileReference::SharedCtor() {
  ::memset(&filename_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_type_) -
      reinterpret_cast<char*>(&filename_)) + sizeof(file_type_));
  _cached_size_ = 0;
}

ExternalFileReference::~ExternalFileReference() {
  // @@protoc_insertion_point(destructor:efdi.ExternalFileReference)
  SharedDtor();
}

void ExternalFileReference::SharedDtor() {
  if (this != internal_default_instance()) delete filename_;
}

void ExternalFileReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalFileReference::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternalFileReference& ExternalFileReference::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::InitDefaultsExternalFileReference();
  return *internal_default_instance();
}

ExternalFileReference* ExternalFileReference::New(::google::protobuf::Arena* arena) const {
  ExternalFileReference* n = new ExternalFileReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalFileReference::Clear() {
// @@protoc_insertion_point(message_clear_start:efdi.ExternalFileReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && filename_ != NULL) {
    delete filename_;
  }
  filename_ = NULL;
  file_type_ = 0;
  _internal_metadata_.Clear();
}

bool ExternalFileReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:efdi.ExternalFileReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16386u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .efdi.UID filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .efdi.ExternalFileReference.FileType file_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_file_type(static_cast< ::efdi::ExternalFileReference_FileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any extension = 2048;
      case 2048: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 16386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:efdi.ExternalFileReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:efdi.ExternalFileReference)
  return false;
#undef DO_
}

void ExternalFileReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:efdi.ExternalFileReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID filename = 1;
  if (this->has_filename()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filename_, output);
  }

  // .efdi.ExternalFileReference.FileType file_type = 2;
  if (this->file_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->file_type(), output);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2048, this->extension(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:efdi.ExternalFileReference)
}

::google::protobuf::uint8* ExternalFileReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:efdi.ExternalFileReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .efdi.UID filename = 1;
  if (this->has_filename()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filename_, deterministic, target);
  }

  // .efdi.ExternalFileReference.FileType file_type = 2;
  if (this->file_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->file_type(), target);
  }

  // repeated .google.protobuf.Any extension = 2048;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2048, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:efdi.ExternalFileReference)
  return target;
}

size_t ExternalFileReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:efdi.ExternalFileReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any extension = 2048;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 3UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .efdi.UID filename = 1;
  if (this->has_filename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filename_);
  }

  // .efdi.ExternalFileReference.FileType file_type = 2;
  if (this->file_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->file_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalFileReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:efdi.ExternalFileReference)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternalFileReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalFileReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:efdi.ExternalFileReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:efdi.ExternalFileReference)
    MergeFrom(*source);
  }
}

void ExternalFileReference::MergeFrom(const ExternalFileReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:efdi.ExternalFileReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_filename()) {
    mutable_filename()->::efdi::UID::MergeFrom(from.filename());
  }
  if (from.file_type() != 0) {
    set_file_type(from.file_type());
  }
}

void ExternalFileReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:efdi.ExternalFileReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalFileReference::CopyFrom(const ExternalFileReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:efdi.ExternalFileReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalFileReference::IsInitialized() const {
  return true;
}

void ExternalFileReference::Swap(ExternalFileReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalFileReference::InternalSwap(ExternalFileReference* other) {
  using std::swap;
  extension_.InternalSwap(&other->extension_);
  swap(filename_, other->filename_);
  swap(file_type_, other->file_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalFileReference::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2fefdi_2fgrpc_2defdi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace efdi

// @@protoc_insertion_point(global_scope)
