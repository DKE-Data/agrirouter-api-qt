// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/request/payload/feed/feed-requests.proto

#include "messaging/request/payload/feed/feed-requests.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace agrirouter {
namespace feed {
namespace request {
class ValidityPeriodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidityPeriod>
      _instance;
} _ValidityPeriod_default_instance_;
class MessageQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageQuery>
      _instance;
} _MessageQuery_default_instance_;
class MessageConfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageConfirm>
      _instance;
} _MessageConfirm_default_instance_;
class MessageDeleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageDelete>
      _instance;
} _MessageDelete_default_instance_;
}  // namespace request
}  // namespace feed
}  // namespace agrirouter
namespace protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto {
void InitDefaultsValidityPeriodImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::agrirouter::feed::request::_ValidityPeriod_default_instance_;
    new (ptr) ::agrirouter::feed::request::ValidityPeriod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::agrirouter::feed::request::ValidityPeriod::InitAsDefaultInstance();
}

void InitDefaultsValidityPeriod() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValidityPeriodImpl);
}

void InitDefaultsMessageQueryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsValidityPeriod();
  {
    void* ptr = &::agrirouter::feed::request::_MessageQuery_default_instance_;
    new (ptr) ::agrirouter::feed::request::MessageQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::agrirouter::feed::request::MessageQuery::InitAsDefaultInstance();
}

void InitDefaultsMessageQuery() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageQueryImpl);
}

void InitDefaultsMessageConfirmImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::agrirouter::feed::request::_MessageConfirm_default_instance_;
    new (ptr) ::agrirouter::feed::request::MessageConfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::agrirouter::feed::request::MessageConfirm::InitAsDefaultInstance();
}

void InitDefaultsMessageConfirm() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageConfirmImpl);
}

void InitDefaultsMessageDeleteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsValidityPeriod();
  {
    void* ptr = &::agrirouter::feed::request::_MessageDelete_default_instance_;
    new (ptr) ::agrirouter::feed::request::MessageDelete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::agrirouter::feed::request::MessageDelete::InitAsDefaultInstance();
}

void InitDefaultsMessageDelete() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageDeleteImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::ValidityPeriod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::ValidityPeriod, sentfrom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::ValidityPeriod, sentto_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageQuery, message_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageQuery, senders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageQuery, validity_period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageConfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageConfirm, message_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageDelete, message_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageDelete, senders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::agrirouter::feed::request::MessageDelete, validity_period_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::agrirouter::feed::request::ValidityPeriod)},
  { 7, -1, sizeof(::agrirouter::feed::request::MessageQuery)},
  { 15, -1, sizeof(::agrirouter::feed::request::MessageConfirm)},
  { 21, -1, sizeof(::agrirouter::feed::request::MessageDelete)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::agrirouter::feed::request::_ValidityPeriod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::agrirouter::feed::request::_MessageQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::agrirouter::feed::request::_MessageConfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::agrirouter::feed::request::_MessageDelete_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "messaging/request/payload/feed/feed-requests.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2messaging/request/payload/feed/feed-re"
      "quests.proto\022\027agrirouter.feed.request\032\037g"
      "oogle/protobuf/timestamp.proto\"j\n\016Validi"
      "tyPeriod\022,\n\010sentFrom\030\001 \001(\0132\032.google.prot"
      "obuf.Timestamp\022*\n\006sentTo\030\002 \001(\0132\032.google."
      "protobuf.Timestamp\"v\n\014MessageQuery\022\023\n\013me"
      "ssage_ids\030\001 \003(\t\022\017\n\007senders\030\002 \003(\t\022@\n\017vali"
      "dity_period\030\003 \001(\0132\'.agrirouter.feed.requ"
      "est.ValidityPeriod\"%\n\016MessageConfirm\022\023\n\013"
      "message_ids\030\001 \003(\t\"w\n\rMessageDelete\022\023\n\013me"
      "ssage_ids\030\001 \003(\t\022\017\n\007senders\030\002 \003(\t\022@\n\017vali"
      "dity_period\030\003 \001(\0132\'.agrirouter.feed.requ"
      "est.ValidityPeriodb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 506);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging/request/payload/feed/feed-requests.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto
namespace agrirouter {
namespace feed {
namespace request {

// ===================================================================

void ValidityPeriod::InitAsDefaultInstance() {
  ::agrirouter::feed::request::_ValidityPeriod_default_instance_._instance.get_mutable()->sentfrom_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::agrirouter::feed::request::_ValidityPeriod_default_instance_._instance.get_mutable()->sentto_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ValidityPeriod::clear_sentfrom() {
  if (GetArenaNoVirtual() == NULL && sentfrom_ != NULL) {
    delete sentfrom_;
  }
  sentfrom_ = NULL;
}
void ValidityPeriod::clear_sentto() {
  if (GetArenaNoVirtual() == NULL && sentto_ != NULL) {
    delete sentto_;
  }
  sentto_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidityPeriod::kSentFromFieldNumber;
const int ValidityPeriod::kSentToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidityPeriod::ValidityPeriod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsValidityPeriod();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.feed.request.ValidityPeriod)
}
ValidityPeriod::ValidityPeriod(const ValidityPeriod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sentfrom()) {
    sentfrom_ = new ::google::protobuf::Timestamp(*from.sentfrom_);
  } else {
    sentfrom_ = NULL;
  }
  if (from.has_sentto()) {
    sentto_ = new ::google::protobuf::Timestamp(*from.sentto_);
  } else {
    sentto_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:agrirouter.feed.request.ValidityPeriod)
}

void ValidityPeriod::SharedCtor() {
  ::memset(&sentfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sentto_) -
      reinterpret_cast<char*>(&sentfrom_)) + sizeof(sentto_));
  _cached_size_ = 0;
}

ValidityPeriod::~ValidityPeriod() {
  // @@protoc_insertion_point(destructor:agrirouter.feed.request.ValidityPeriod)
  SharedDtor();
}

void ValidityPeriod::SharedDtor() {
  if (this != internal_default_instance()) delete sentfrom_;
  if (this != internal_default_instance()) delete sentto_;
}

void ValidityPeriod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValidityPeriod::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidityPeriod& ValidityPeriod::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsValidityPeriod();
  return *internal_default_instance();
}

ValidityPeriod* ValidityPeriod::New(::google::protobuf::Arena* arena) const {
  ValidityPeriod* n = new ValidityPeriod;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValidityPeriod::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.feed.request.ValidityPeriod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sentfrom_ != NULL) {
    delete sentfrom_;
  }
  sentfrom_ = NULL;
  if (GetArenaNoVirtual() == NULL && sentto_ != NULL) {
    delete sentto_;
  }
  sentto_ = NULL;
  _internal_metadata_.Clear();
}

bool ValidityPeriod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.feed.request.ValidityPeriod)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp sentFrom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sentfrom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp sentTo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sentto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.feed.request.ValidityPeriod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.feed.request.ValidityPeriod)
  return false;
#undef DO_
}

void ValidityPeriod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.feed.request.ValidityPeriod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp sentFrom = 1;
  if (this->has_sentfrom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sentfrom_, output);
  }

  // .google.protobuf.Timestamp sentTo = 2;
  if (this->has_sentto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sentto_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:agrirouter.feed.request.ValidityPeriod)
}

::google::protobuf::uint8* ValidityPeriod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.feed.request.ValidityPeriod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp sentFrom = 1;
  if (this->has_sentfrom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sentfrom_, deterministic, target);
  }

  // .google.protobuf.Timestamp sentTo = 2;
  if (this->has_sentto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sentto_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.feed.request.ValidityPeriod)
  return target;
}

size_t ValidityPeriod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.feed.request.ValidityPeriod)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp sentFrom = 1;
  if (this->has_sentfrom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sentfrom_);
  }

  // .google.protobuf.Timestamp sentTo = 2;
  if (this->has_sentto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sentto_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValidityPeriod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.feed.request.ValidityPeriod)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidityPeriod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidityPeriod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.feed.request.ValidityPeriod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.feed.request.ValidityPeriod)
    MergeFrom(*source);
  }
}

void ValidityPeriod::MergeFrom(const ValidityPeriod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.feed.request.ValidityPeriod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sentfrom()) {
    mutable_sentfrom()->::google::protobuf::Timestamp::MergeFrom(from.sentfrom());
  }
  if (from.has_sentto()) {
    mutable_sentto()->::google::protobuf::Timestamp::MergeFrom(from.sentto());
  }
}

void ValidityPeriod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.feed.request.ValidityPeriod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidityPeriod::CopyFrom(const ValidityPeriod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.feed.request.ValidityPeriod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidityPeriod::IsInitialized() const {
  return true;
}

void ValidityPeriod::Swap(ValidityPeriod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidityPeriod::InternalSwap(ValidityPeriod* other) {
  using std::swap;
  swap(sentfrom_, other->sentfrom_);
  swap(sentto_, other->sentto_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValidityPeriod::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageQuery::InitAsDefaultInstance() {
  ::agrirouter::feed::request::_MessageQuery_default_instance_._instance.get_mutable()->validity_period_ = const_cast< ::agrirouter::feed::request::ValidityPeriod*>(
      ::agrirouter::feed::request::ValidityPeriod::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageQuery::kMessageIdsFieldNumber;
const int MessageQuery::kSendersFieldNumber;
const int MessageQuery::kValidityPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageQuery::MessageQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageQuery();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.feed.request.MessageQuery)
}
MessageQuery::MessageQuery(const MessageQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      message_ids_(from.message_ids_),
      senders_(from.senders_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_validity_period()) {
    validity_period_ = new ::agrirouter::feed::request::ValidityPeriod(*from.validity_period_);
  } else {
    validity_period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:agrirouter.feed.request.MessageQuery)
}

void MessageQuery::SharedCtor() {
  validity_period_ = NULL;
  _cached_size_ = 0;
}

MessageQuery::~MessageQuery() {
  // @@protoc_insertion_point(destructor:agrirouter.feed.request.MessageQuery)
  SharedDtor();
}

void MessageQuery::SharedDtor() {
  if (this != internal_default_instance()) delete validity_period_;
}

void MessageQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageQuery::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageQuery& MessageQuery::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageQuery();
  return *internal_default_instance();
}

MessageQuery* MessageQuery::New(::google::protobuf::Arena* arena) const {
  MessageQuery* n = new MessageQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.feed.request.MessageQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ids_.Clear();
  senders_.Clear();
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) {
    delete validity_period_;
  }
  validity_period_ = NULL;
  _internal_metadata_.Clear();
}

bool MessageQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.feed.request.MessageQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string message_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_message_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_ids(this->message_ids_size() - 1).data(),
            static_cast<int>(this->message_ids(this->message_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.feed.request.MessageQuery.message_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string senders = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_senders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senders(this->senders_size() - 1).data(),
            static_cast<int>(this->senders(this->senders_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.feed.request.MessageQuery.senders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validity_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.feed.request.MessageQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.feed.request.MessageQuery)
  return false;
#undef DO_
}

void MessageQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.feed.request.MessageQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageQuery.message_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message_ids(i), output);
  }

  // repeated string senders = 2;
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senders(i).data(), static_cast<int>(this->senders(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageQuery.senders");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->senders(i), output);
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->validity_period_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:agrirouter.feed.request.MessageQuery)
}

::google::protobuf::uint8* MessageQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.feed.request.MessageQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageQuery.message_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->message_ids(i), target);
  }

  // repeated string senders = 2;
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senders(i).data(), static_cast<int>(this->senders(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageQuery.senders");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->senders(i), target);
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->validity_period_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.feed.request.MessageQuery)
  return target;
}

size_t MessageQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.feed.request.MessageQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string message_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->message_ids_size());
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->message_ids(i));
  }

  // repeated string senders = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->senders_size());
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->senders(i));
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->validity_period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.feed.request.MessageQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.feed.request.MessageQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.feed.request.MessageQuery)
    MergeFrom(*source);
  }
}

void MessageQuery::MergeFrom(const MessageQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.feed.request.MessageQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_ids_.MergeFrom(from.message_ids_);
  senders_.MergeFrom(from.senders_);
  if (from.has_validity_period()) {
    mutable_validity_period()->::agrirouter::feed::request::ValidityPeriod::MergeFrom(from.validity_period());
  }
}

void MessageQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.feed.request.MessageQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageQuery::CopyFrom(const MessageQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.feed.request.MessageQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageQuery::IsInitialized() const {
  return true;
}

void MessageQuery::Swap(MessageQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageQuery::InternalSwap(MessageQuery* other) {
  using std::swap;
  message_ids_.InternalSwap(&other->message_ids_);
  senders_.InternalSwap(&other->senders_);
  swap(validity_period_, other->validity_period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageQuery::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageConfirm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageConfirm::kMessageIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageConfirm::MessageConfirm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageConfirm();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.feed.request.MessageConfirm)
}
MessageConfirm::MessageConfirm(const MessageConfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      message_ids_(from.message_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:agrirouter.feed.request.MessageConfirm)
}

void MessageConfirm::SharedCtor() {
  _cached_size_ = 0;
}

MessageConfirm::~MessageConfirm() {
  // @@protoc_insertion_point(destructor:agrirouter.feed.request.MessageConfirm)
  SharedDtor();
}

void MessageConfirm::SharedDtor() {
}

void MessageConfirm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageConfirm::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageConfirm& MessageConfirm::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageConfirm();
  return *internal_default_instance();
}

MessageConfirm* MessageConfirm::New(::google::protobuf::Arena* arena) const {
  MessageConfirm* n = new MessageConfirm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.feed.request.MessageConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ids_.Clear();
  _internal_metadata_.Clear();
}

bool MessageConfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.feed.request.MessageConfirm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string message_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_message_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_ids(this->message_ids_size() - 1).data(),
            static_cast<int>(this->message_ids(this->message_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.feed.request.MessageConfirm.message_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.feed.request.MessageConfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.feed.request.MessageConfirm)
  return false;
#undef DO_
}

void MessageConfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.feed.request.MessageConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageConfirm.message_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:agrirouter.feed.request.MessageConfirm)
}

::google::protobuf::uint8* MessageConfirm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.feed.request.MessageConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageConfirm.message_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->message_ids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.feed.request.MessageConfirm)
  return target;
}

size_t MessageConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.feed.request.MessageConfirm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string message_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->message_ids_size());
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->message_ids(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageConfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.feed.request.MessageConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageConfirm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageConfirm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.feed.request.MessageConfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.feed.request.MessageConfirm)
    MergeFrom(*source);
  }
}

void MessageConfirm::MergeFrom(const MessageConfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.feed.request.MessageConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_ids_.MergeFrom(from.message_ids_);
}

void MessageConfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.feed.request.MessageConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageConfirm::CopyFrom(const MessageConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.feed.request.MessageConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageConfirm::IsInitialized() const {
  return true;
}

void MessageConfirm::Swap(MessageConfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageConfirm::InternalSwap(MessageConfirm* other) {
  using std::swap;
  message_ids_.InternalSwap(&other->message_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageConfirm::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageDelete::InitAsDefaultInstance() {
  ::agrirouter::feed::request::_MessageDelete_default_instance_._instance.get_mutable()->validity_period_ = const_cast< ::agrirouter::feed::request::ValidityPeriod*>(
      ::agrirouter::feed::request::ValidityPeriod::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDelete::kMessageIdsFieldNumber;
const int MessageDelete::kSendersFieldNumber;
const int MessageDelete::kValidityPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDelete::MessageDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageDelete();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.feed.request.MessageDelete)
}
MessageDelete::MessageDelete(const MessageDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      message_ids_(from.message_ids_),
      senders_(from.senders_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_validity_period()) {
    validity_period_ = new ::agrirouter::feed::request::ValidityPeriod(*from.validity_period_);
  } else {
    validity_period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:agrirouter.feed.request.MessageDelete)
}

void MessageDelete::SharedCtor() {
  validity_period_ = NULL;
  _cached_size_ = 0;
}

MessageDelete::~MessageDelete() {
  // @@protoc_insertion_point(destructor:agrirouter.feed.request.MessageDelete)
  SharedDtor();
}

void MessageDelete::SharedDtor() {
  if (this != internal_default_instance()) delete validity_period_;
}

void MessageDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDelete::descriptor() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDelete& MessageDelete::default_instance() {
  ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::InitDefaultsMessageDelete();
  return *internal_default_instance();
}

MessageDelete* MessageDelete::New(::google::protobuf::Arena* arena) const {
  MessageDelete* n = new MessageDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.feed.request.MessageDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ids_.Clear();
  senders_.Clear();
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) {
    delete validity_period_;
  }
  validity_period_ = NULL;
  _internal_metadata_.Clear();
}

bool MessageDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.feed.request.MessageDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string message_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_message_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_ids(this->message_ids_size() - 1).data(),
            static_cast<int>(this->message_ids(this->message_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.feed.request.MessageDelete.message_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string senders = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_senders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senders(this->senders_size() - 1).data(),
            static_cast<int>(this->senders(this->senders_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.feed.request.MessageDelete.senders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validity_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.feed.request.MessageDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.feed.request.MessageDelete)
  return false;
#undef DO_
}

void MessageDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.feed.request.MessageDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageDelete.message_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message_ids(i), output);
  }

  // repeated string senders = 2;
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senders(i).data(), static_cast<int>(this->senders(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageDelete.senders");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->senders(i), output);
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->validity_period_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:agrirouter.feed.request.MessageDelete)
}

::google::protobuf::uint8* MessageDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.feed.request.MessageDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string message_ids = 1;
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_ids(i).data(), static_cast<int>(this->message_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageDelete.message_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->message_ids(i), target);
  }

  // repeated string senders = 2;
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senders(i).data(), static_cast<int>(this->senders(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.feed.request.MessageDelete.senders");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->senders(i), target);
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->validity_period_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.feed.request.MessageDelete)
  return target;
}

size_t MessageDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.feed.request.MessageDelete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string message_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->message_ids_size());
  for (int i = 0, n = this->message_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->message_ids(i));
  }

  // repeated string senders = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->senders_size());
  for (int i = 0, n = this->senders_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->senders(i));
  }

  // .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  if (this->has_validity_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->validity_period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.feed.request.MessageDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.feed.request.MessageDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.feed.request.MessageDelete)
    MergeFrom(*source);
  }
}

void MessageDelete::MergeFrom(const MessageDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.feed.request.MessageDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_ids_.MergeFrom(from.message_ids_);
  senders_.MergeFrom(from.senders_);
  if (from.has_validity_period()) {
    mutable_validity_period()->::agrirouter::feed::request::ValidityPeriod::MergeFrom(from.validity_period());
  }
}

void MessageDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.feed.request.MessageDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDelete::CopyFrom(const MessageDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.feed.request.MessageDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDelete::IsInitialized() const {
  return true;
}

void MessageDelete::Swap(MessageDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDelete::InternalSwap(MessageDelete* other) {
  using std::swap;
  message_ids_.InternalSwap(&other->message_ids_);
  senders_.InternalSwap(&other->senders_);
  swap(validity_period_, other->validity_period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDelete::GetMetadata() const {
  protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request
}  // namespace feed
}  // namespace agrirouter

// @@protoc_insertion_point(global_scope)
