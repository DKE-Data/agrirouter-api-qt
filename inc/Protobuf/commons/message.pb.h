// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commons/message.proto

#ifndef PROTOBUF_commons_2fmessage_2eproto__INCLUDED
#define PROTOBUF_commons_2fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_commons_2fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMessage_ArgsEntry_DoNotUseImpl();
void InitDefaultsMessage_ArgsEntry_DoNotUse();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
void InitDefaultsMessagesImpl();
void InitDefaultsMessages();
inline void InitDefaults() {
  InitDefaultsMessage_ArgsEntry_DoNotUse();
  InitDefaultsMessage();
  InitDefaultsMessages();
}
}  // namespace protobuf_commons_2fmessage_2eproto
namespace agrirouter {
namespace commons {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_ArgsEntry_DoNotUse;
class Message_ArgsEntry_DoNotUseDefaultTypeInternal;
extern Message_ArgsEntry_DoNotUseDefaultTypeInternal _Message_ArgsEntry_DoNotUse_default_instance_;
class Messages;
class MessagesDefaultTypeInternal;
extern MessagesDefaultTypeInternal _Messages_default_instance_;
}  // namespace commons
}  // namespace agrirouter
namespace agrirouter {
namespace commons {

// ===================================================================

class Message_ArgsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Message_ArgsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Message_ArgsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Message_ArgsEntry_DoNotUse();
  Message_ArgsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Message_ArgsEntry_DoNotUse& other);
  static const Message_ArgsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Message_ArgsEntry_DoNotUse*>(&_Message_ArgsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.commons.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      args() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_args();

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string message_code = 2;
  void clear_message_code();
  static const int kMessageCodeFieldNumber = 2;
  const ::std::string& message_code() const;
  void set_message_code(const ::std::string& value);
  #if LANG_CXX11
  void set_message_code(::std::string&& value);
  #endif
  void set_message_code(const char* value);
  void set_message_code(const char* value, size_t size);
  ::std::string* mutable_message_code();
  ::std::string* release_message_code();
  void set_allocated_message_code(::std::string* message_code);

  // @@protoc_insertion_point(class_scope:agrirouter.commons.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Message_ArgsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > args_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr message_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_commons_2fmessage_2eproto::TableStruct;
  friend void ::protobuf_commons_2fmessage_2eproto::InitDefaultsMessageImpl();
};
// -------------------------------------------------------------------

class Messages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.commons.Messages) */ {
 public:
  Messages();
  virtual ~Messages();

  Messages(const Messages& from);

  inline Messages& operator=(const Messages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Messages(Messages&& from) noexcept
    : Messages() {
    *this = ::std::move(from);
  }

  inline Messages& operator=(Messages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Messages& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Messages* internal_default_instance() {
    return reinterpret_cast<const Messages*>(
               &_Messages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Messages* other);
  friend void swap(Messages& a, Messages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Messages* New() const PROTOBUF_FINAL { return New(NULL); }

  Messages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Messages& from);
  void MergeFrom(const Messages& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Messages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .agrirouter.commons.Message messages = 1;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 1;
  const ::agrirouter::commons::Message& messages(int index) const;
  ::agrirouter::commons::Message* mutable_messages(int index);
  ::agrirouter::commons::Message* add_messages();
  ::google::protobuf::RepeatedPtrField< ::agrirouter::commons::Message >*
      mutable_messages();
  const ::google::protobuf::RepeatedPtrField< ::agrirouter::commons::Message >&
      messages() const;

  // @@protoc_insertion_point(class_scope:agrirouter.commons.Messages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::agrirouter::commons::Message > messages_;
  mutable int _cached_size_;
  friend struct ::protobuf_commons_2fmessage_2eproto::TableStruct;
  friend void ::protobuf_commons_2fmessage_2eproto::InitDefaultsMessagesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Message

// string message = 1;
inline void Message::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::message() const {
  // @@protoc_insertion_point(field_get:agrirouter.commons.Message.message)
  return message_.GetNoArena();
}
inline void Message::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.commons.Message.message)
}
#if LANG_CXX11
inline void Message::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agrirouter.commons.Message.message)
}
#endif
inline void Message::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.commons.Message.message)
}
inline void Message::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.commons.Message.message)
}
inline ::std::string* Message::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.commons.Message.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_message() {
  // @@protoc_insertion_point(field_release:agrirouter.commons.Message.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.commons.Message.message)
}

// string message_code = 2;
inline void Message::clear_message_code() {
  message_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::message_code() const {
  // @@protoc_insertion_point(field_get:agrirouter.commons.Message.message_code)
  return message_code_.GetNoArena();
}
inline void Message::set_message_code(const ::std::string& value) {
  
  message_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.commons.Message.message_code)
}
#if LANG_CXX11
inline void Message::set_message_code(::std::string&& value) {
  
  message_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agrirouter.commons.Message.message_code)
}
#endif
inline void Message::set_message_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.commons.Message.message_code)
}
inline void Message::set_message_code(const char* value, size_t size) {
  
  message_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.commons.Message.message_code)
}
inline ::std::string* Message::mutable_message_code() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.commons.Message.message_code)
  return message_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_message_code() {
  // @@protoc_insertion_point(field_release:agrirouter.commons.Message.message_code)
  
  return message_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_message_code(::std::string* message_code) {
  if (message_code != NULL) {
    
  } else {
    
  }
  message_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_code);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.commons.Message.message_code)
}

// map<string, string> args = 3;
inline int Message::args_size() const {
  return args_.size();
}
inline void Message::clear_args() {
  args_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Message::args() const {
  // @@protoc_insertion_point(field_map:agrirouter.commons.Message.args)
  return args_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Message::mutable_args() {
  // @@protoc_insertion_point(field_mutable_map:agrirouter.commons.Message.args)
  return args_.MutableMap();
}

// -------------------------------------------------------------------

// Messages

// repeated .agrirouter.commons.Message messages = 1;
inline int Messages::messages_size() const {
  return messages_.size();
}
inline void Messages::clear_messages() {
  messages_.Clear();
}
inline const ::agrirouter::commons::Message& Messages::messages(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.commons.Messages.messages)
  return messages_.Get(index);
}
inline ::agrirouter::commons::Message* Messages::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.commons.Messages.messages)
  return messages_.Mutable(index);
}
inline ::agrirouter::commons::Message* Messages::add_messages() {
  // @@protoc_insertion_point(field_add:agrirouter.commons.Messages.messages)
  return messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::agrirouter::commons::Message >*
Messages::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.commons.Messages.messages)
  return &messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::agrirouter::commons::Message >&
Messages::messages() const {
  // @@protoc_insertion_point(field_list:agrirouter.commons.Messages.messages)
  return messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace commons
}  // namespace agrirouter

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_commons_2fmessage_2eproto__INCLUDED
